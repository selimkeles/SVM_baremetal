
SVM_baremetal.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000257c  08000188  08000188  00010188  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001d8  08002708  08002708  00012708  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080028e0  080028e0  00020014  2**0
                  CONTENTS
  4 .ARM          00000000  080028e0  080028e0  00020014  2**0
                  CONTENTS
  5 .preinit_array 00000000  080028e0  080028e0  00020014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080028e0  080028e0  000128e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080028e4  080028e4  000128e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000014  20000000  080028e8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  20000014  080028fc  00020014  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000048  080028fc  00020048  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020014  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002b3f  00000000  00000000  00020044  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000072b  00000000  00000000  00022b83  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000210  00000000  00000000  000232b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000001c8  00000000  00000000  000234c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001ef52  00000000  00000000  00023688  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002692  00000000  00000000  000425da  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000bef28  00000000  00000000  00044c6c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00103b94  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000a88  00000000  00000000  00103be8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000014 	.word	0x20000014
 80001a4:	00000000 	.word	0x00000000
 80001a8:	080026ec 	.word	0x080026ec

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000018 	.word	0x20000018
 80001c4:	080026ec 	.word	0x080026ec

080001c8 <__aeabi_drsub>:
 80001c8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80001cc:	e002      	b.n	80001d4 <__adddf3>
 80001ce:	bf00      	nop

080001d0 <__aeabi_dsub>:
 80001d0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080001d4 <__adddf3>:
 80001d4:	b530      	push	{r4, r5, lr}
 80001d6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001da:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001de:	ea94 0f05 	teq	r4, r5
 80001e2:	bf08      	it	eq
 80001e4:	ea90 0f02 	teqeq	r0, r2
 80001e8:	bf1f      	itttt	ne
 80001ea:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001ee:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001f2:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001f6:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001fa:	f000 80e2 	beq.w	80003c2 <__adddf3+0x1ee>
 80001fe:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000202:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000206:	bfb8      	it	lt
 8000208:	426d      	neglt	r5, r5
 800020a:	dd0c      	ble.n	8000226 <__adddf3+0x52>
 800020c:	442c      	add	r4, r5
 800020e:	ea80 0202 	eor.w	r2, r0, r2
 8000212:	ea81 0303 	eor.w	r3, r1, r3
 8000216:	ea82 0000 	eor.w	r0, r2, r0
 800021a:	ea83 0101 	eor.w	r1, r3, r1
 800021e:	ea80 0202 	eor.w	r2, r0, r2
 8000222:	ea81 0303 	eor.w	r3, r1, r3
 8000226:	2d36      	cmp	r5, #54	; 0x36
 8000228:	bf88      	it	hi
 800022a:	bd30      	pophi	{r4, r5, pc}
 800022c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000230:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000234:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000238:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800023c:	d002      	beq.n	8000244 <__adddf3+0x70>
 800023e:	4240      	negs	r0, r0
 8000240:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000244:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000248:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800024c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000250:	d002      	beq.n	8000258 <__adddf3+0x84>
 8000252:	4252      	negs	r2, r2
 8000254:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000258:	ea94 0f05 	teq	r4, r5
 800025c:	f000 80a7 	beq.w	80003ae <__adddf3+0x1da>
 8000260:	f1a4 0401 	sub.w	r4, r4, #1
 8000264:	f1d5 0e20 	rsbs	lr, r5, #32
 8000268:	db0d      	blt.n	8000286 <__adddf3+0xb2>
 800026a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800026e:	fa22 f205 	lsr.w	r2, r2, r5
 8000272:	1880      	adds	r0, r0, r2
 8000274:	f141 0100 	adc.w	r1, r1, #0
 8000278:	fa03 f20e 	lsl.w	r2, r3, lr
 800027c:	1880      	adds	r0, r0, r2
 800027e:	fa43 f305 	asr.w	r3, r3, r5
 8000282:	4159      	adcs	r1, r3
 8000284:	e00e      	b.n	80002a4 <__adddf3+0xd0>
 8000286:	f1a5 0520 	sub.w	r5, r5, #32
 800028a:	f10e 0e20 	add.w	lr, lr, #32
 800028e:	2a01      	cmp	r2, #1
 8000290:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000294:	bf28      	it	cs
 8000296:	f04c 0c02 	orrcs.w	ip, ip, #2
 800029a:	fa43 f305 	asr.w	r3, r3, r5
 800029e:	18c0      	adds	r0, r0, r3
 80002a0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002a4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80002a8:	d507      	bpl.n	80002ba <__adddf3+0xe6>
 80002aa:	f04f 0e00 	mov.w	lr, #0
 80002ae:	f1dc 0c00 	rsbs	ip, ip, #0
 80002b2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002b6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002ba:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80002be:	d31b      	bcc.n	80002f8 <__adddf3+0x124>
 80002c0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80002c4:	d30c      	bcc.n	80002e0 <__adddf3+0x10c>
 80002c6:	0849      	lsrs	r1, r1, #1
 80002c8:	ea5f 0030 	movs.w	r0, r0, rrx
 80002cc:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002d0:	f104 0401 	add.w	r4, r4, #1
 80002d4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002d8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80002dc:	f080 809a 	bcs.w	8000414 <__adddf3+0x240>
 80002e0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80002e4:	bf08      	it	eq
 80002e6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002ea:	f150 0000 	adcs.w	r0, r0, #0
 80002ee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002f2:	ea41 0105 	orr.w	r1, r1, r5
 80002f6:	bd30      	pop	{r4, r5, pc}
 80002f8:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002fc:	4140      	adcs	r0, r0
 80002fe:	eb41 0101 	adc.w	r1, r1, r1
 8000302:	3c01      	subs	r4, #1
 8000304:	bf28      	it	cs
 8000306:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800030a:	d2e9      	bcs.n	80002e0 <__adddf3+0x10c>
 800030c:	f091 0f00 	teq	r1, #0
 8000310:	bf04      	itt	eq
 8000312:	4601      	moveq	r1, r0
 8000314:	2000      	moveq	r0, #0
 8000316:	fab1 f381 	clz	r3, r1
 800031a:	bf08      	it	eq
 800031c:	3320      	addeq	r3, #32
 800031e:	f1a3 030b 	sub.w	r3, r3, #11
 8000322:	f1b3 0220 	subs.w	r2, r3, #32
 8000326:	da0c      	bge.n	8000342 <__adddf3+0x16e>
 8000328:	320c      	adds	r2, #12
 800032a:	dd08      	ble.n	800033e <__adddf3+0x16a>
 800032c:	f102 0c14 	add.w	ip, r2, #20
 8000330:	f1c2 020c 	rsb	r2, r2, #12
 8000334:	fa01 f00c 	lsl.w	r0, r1, ip
 8000338:	fa21 f102 	lsr.w	r1, r1, r2
 800033c:	e00c      	b.n	8000358 <__adddf3+0x184>
 800033e:	f102 0214 	add.w	r2, r2, #20
 8000342:	bfd8      	it	le
 8000344:	f1c2 0c20 	rsble	ip, r2, #32
 8000348:	fa01 f102 	lsl.w	r1, r1, r2
 800034c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000350:	bfdc      	itt	le
 8000352:	ea41 010c 	orrle.w	r1, r1, ip
 8000356:	4090      	lslle	r0, r2
 8000358:	1ae4      	subs	r4, r4, r3
 800035a:	bfa2      	ittt	ge
 800035c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000360:	4329      	orrge	r1, r5
 8000362:	bd30      	popge	{r4, r5, pc}
 8000364:	ea6f 0404 	mvn.w	r4, r4
 8000368:	3c1f      	subs	r4, #31
 800036a:	da1c      	bge.n	80003a6 <__adddf3+0x1d2>
 800036c:	340c      	adds	r4, #12
 800036e:	dc0e      	bgt.n	800038e <__adddf3+0x1ba>
 8000370:	f104 0414 	add.w	r4, r4, #20
 8000374:	f1c4 0220 	rsb	r2, r4, #32
 8000378:	fa20 f004 	lsr.w	r0, r0, r4
 800037c:	fa01 f302 	lsl.w	r3, r1, r2
 8000380:	ea40 0003 	orr.w	r0, r0, r3
 8000384:	fa21 f304 	lsr.w	r3, r1, r4
 8000388:	ea45 0103 	orr.w	r1, r5, r3
 800038c:	bd30      	pop	{r4, r5, pc}
 800038e:	f1c4 040c 	rsb	r4, r4, #12
 8000392:	f1c4 0220 	rsb	r2, r4, #32
 8000396:	fa20 f002 	lsr.w	r0, r0, r2
 800039a:	fa01 f304 	lsl.w	r3, r1, r4
 800039e:	ea40 0003 	orr.w	r0, r0, r3
 80003a2:	4629      	mov	r1, r5
 80003a4:	bd30      	pop	{r4, r5, pc}
 80003a6:	fa21 f004 	lsr.w	r0, r1, r4
 80003aa:	4629      	mov	r1, r5
 80003ac:	bd30      	pop	{r4, r5, pc}
 80003ae:	f094 0f00 	teq	r4, #0
 80003b2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80003b6:	bf06      	itte	eq
 80003b8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80003bc:	3401      	addeq	r4, #1
 80003be:	3d01      	subne	r5, #1
 80003c0:	e74e      	b.n	8000260 <__adddf3+0x8c>
 80003c2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003c6:	bf18      	it	ne
 80003c8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003cc:	d029      	beq.n	8000422 <__adddf3+0x24e>
 80003ce:	ea94 0f05 	teq	r4, r5
 80003d2:	bf08      	it	eq
 80003d4:	ea90 0f02 	teqeq	r0, r2
 80003d8:	d005      	beq.n	80003e6 <__adddf3+0x212>
 80003da:	ea54 0c00 	orrs.w	ip, r4, r0
 80003de:	bf04      	itt	eq
 80003e0:	4619      	moveq	r1, r3
 80003e2:	4610      	moveq	r0, r2
 80003e4:	bd30      	pop	{r4, r5, pc}
 80003e6:	ea91 0f03 	teq	r1, r3
 80003ea:	bf1e      	ittt	ne
 80003ec:	2100      	movne	r1, #0
 80003ee:	2000      	movne	r0, #0
 80003f0:	bd30      	popne	{r4, r5, pc}
 80003f2:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003f6:	d105      	bne.n	8000404 <__adddf3+0x230>
 80003f8:	0040      	lsls	r0, r0, #1
 80003fa:	4149      	adcs	r1, r1
 80003fc:	bf28      	it	cs
 80003fe:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000402:	bd30      	pop	{r4, r5, pc}
 8000404:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000408:	bf3c      	itt	cc
 800040a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800040e:	bd30      	popcc	{r4, r5, pc}
 8000410:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000414:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000418:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800041c:	f04f 0000 	mov.w	r0, #0
 8000420:	bd30      	pop	{r4, r5, pc}
 8000422:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000426:	bf1a      	itte	ne
 8000428:	4619      	movne	r1, r3
 800042a:	4610      	movne	r0, r2
 800042c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000430:	bf1c      	itt	ne
 8000432:	460b      	movne	r3, r1
 8000434:	4602      	movne	r2, r0
 8000436:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800043a:	bf06      	itte	eq
 800043c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000440:	ea91 0f03 	teqeq	r1, r3
 8000444:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000448:	bd30      	pop	{r4, r5, pc}
 800044a:	bf00      	nop

0800044c <__aeabi_ui2d>:
 800044c:	f090 0f00 	teq	r0, #0
 8000450:	bf04      	itt	eq
 8000452:	2100      	moveq	r1, #0
 8000454:	4770      	bxeq	lr
 8000456:	b530      	push	{r4, r5, lr}
 8000458:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800045c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000460:	f04f 0500 	mov.w	r5, #0
 8000464:	f04f 0100 	mov.w	r1, #0
 8000468:	e750      	b.n	800030c <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_i2d>:
 800046c:	f090 0f00 	teq	r0, #0
 8000470:	bf04      	itt	eq
 8000472:	2100      	moveq	r1, #0
 8000474:	4770      	bxeq	lr
 8000476:	b530      	push	{r4, r5, lr}
 8000478:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800047c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000480:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000484:	bf48      	it	mi
 8000486:	4240      	negmi	r0, r0
 8000488:	f04f 0100 	mov.w	r1, #0
 800048c:	e73e      	b.n	800030c <__adddf3+0x138>
 800048e:	bf00      	nop

08000490 <__aeabi_f2d>:
 8000490:	0042      	lsls	r2, r0, #1
 8000492:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000496:	ea4f 0131 	mov.w	r1, r1, rrx
 800049a:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800049e:	bf1f      	itttt	ne
 80004a0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004a4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004a8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80004ac:	4770      	bxne	lr
 80004ae:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80004b2:	bf08      	it	eq
 80004b4:	4770      	bxeq	lr
 80004b6:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80004ba:	bf04      	itt	eq
 80004bc:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80004c0:	4770      	bxeq	lr
 80004c2:	b530      	push	{r4, r5, lr}
 80004c4:	f44f 7460 	mov.w	r4, #896	; 0x380
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80004d0:	e71c      	b.n	800030c <__adddf3+0x138>
 80004d2:	bf00      	nop

080004d4 <__aeabi_ul2d>:
 80004d4:	ea50 0201 	orrs.w	r2, r0, r1
 80004d8:	bf08      	it	eq
 80004da:	4770      	bxeq	lr
 80004dc:	b530      	push	{r4, r5, lr}
 80004de:	f04f 0500 	mov.w	r5, #0
 80004e2:	e00a      	b.n	80004fa <__aeabi_l2d+0x16>

080004e4 <__aeabi_l2d>:
 80004e4:	ea50 0201 	orrs.w	r2, r0, r1
 80004e8:	bf08      	it	eq
 80004ea:	4770      	bxeq	lr
 80004ec:	b530      	push	{r4, r5, lr}
 80004ee:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80004f2:	d502      	bpl.n	80004fa <__aeabi_l2d+0x16>
 80004f4:	4240      	negs	r0, r0
 80004f6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004fa:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004fe:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000502:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000506:	f43f aed8 	beq.w	80002ba <__adddf3+0xe6>
 800050a:	f04f 0203 	mov.w	r2, #3
 800050e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000512:	bf18      	it	ne
 8000514:	3203      	addne	r2, #3
 8000516:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800051a:	bf18      	it	ne
 800051c:	3203      	addne	r2, #3
 800051e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000522:	f1c2 0320 	rsb	r3, r2, #32
 8000526:	fa00 fc03 	lsl.w	ip, r0, r3
 800052a:	fa20 f002 	lsr.w	r0, r0, r2
 800052e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000532:	ea40 000e 	orr.w	r0, r0, lr
 8000536:	fa21 f102 	lsr.w	r1, r1, r2
 800053a:	4414      	add	r4, r2
 800053c:	e6bd      	b.n	80002ba <__adddf3+0xe6>
 800053e:	bf00      	nop

08000540 <__aeabi_dmul>:
 8000540:	b570      	push	{r4, r5, r6, lr}
 8000542:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000546:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800054a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800054e:	bf1d      	ittte	ne
 8000550:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000554:	ea94 0f0c 	teqne	r4, ip
 8000558:	ea95 0f0c 	teqne	r5, ip
 800055c:	f000 f8de 	bleq	800071c <__aeabi_dmul+0x1dc>
 8000560:	442c      	add	r4, r5
 8000562:	ea81 0603 	eor.w	r6, r1, r3
 8000566:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800056a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800056e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000572:	bf18      	it	ne
 8000574:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000578:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800057c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000580:	d038      	beq.n	80005f4 <__aeabi_dmul+0xb4>
 8000582:	fba0 ce02 	umull	ip, lr, r0, r2
 8000586:	f04f 0500 	mov.w	r5, #0
 800058a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800058e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000592:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000596:	f04f 0600 	mov.w	r6, #0
 800059a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800059e:	f09c 0f00 	teq	ip, #0
 80005a2:	bf18      	it	ne
 80005a4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005a8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80005ac:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80005b0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80005b4:	d204      	bcs.n	80005c0 <__aeabi_dmul+0x80>
 80005b6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005ba:	416d      	adcs	r5, r5
 80005bc:	eb46 0606 	adc.w	r6, r6, r6
 80005c0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005c4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005c8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005cc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005d0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005d4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80005d8:	bf88      	it	hi
 80005da:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80005de:	d81e      	bhi.n	800061e <__aeabi_dmul+0xde>
 80005e0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80005e4:	bf08      	it	eq
 80005e6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005ea:	f150 0000 	adcs.w	r0, r0, #0
 80005ee:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005f2:	bd70      	pop	{r4, r5, r6, pc}
 80005f4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80005f8:	ea46 0101 	orr.w	r1, r6, r1
 80005fc:	ea40 0002 	orr.w	r0, r0, r2
 8000600:	ea81 0103 	eor.w	r1, r1, r3
 8000604:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000608:	bfc2      	ittt	gt
 800060a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800060e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000612:	bd70      	popgt	{r4, r5, r6, pc}
 8000614:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000618:	f04f 0e00 	mov.w	lr, #0
 800061c:	3c01      	subs	r4, #1
 800061e:	f300 80ab 	bgt.w	8000778 <__aeabi_dmul+0x238>
 8000622:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000626:	bfde      	ittt	le
 8000628:	2000      	movle	r0, #0
 800062a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800062e:	bd70      	pople	{r4, r5, r6, pc}
 8000630:	f1c4 0400 	rsb	r4, r4, #0
 8000634:	3c20      	subs	r4, #32
 8000636:	da35      	bge.n	80006a4 <__aeabi_dmul+0x164>
 8000638:	340c      	adds	r4, #12
 800063a:	dc1b      	bgt.n	8000674 <__aeabi_dmul+0x134>
 800063c:	f104 0414 	add.w	r4, r4, #20
 8000640:	f1c4 0520 	rsb	r5, r4, #32
 8000644:	fa00 f305 	lsl.w	r3, r0, r5
 8000648:	fa20 f004 	lsr.w	r0, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea40 0002 	orr.w	r0, r0, r2
 8000654:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000658:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800065c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000660:	fa21 f604 	lsr.w	r6, r1, r4
 8000664:	eb42 0106 	adc.w	r1, r2, r6
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f1c4 040c 	rsb	r4, r4, #12
 8000678:	f1c4 0520 	rsb	r5, r4, #32
 800067c:	fa00 f304 	lsl.w	r3, r0, r4
 8000680:	fa20 f005 	lsr.w	r0, r0, r5
 8000684:	fa01 f204 	lsl.w	r2, r1, r4
 8000688:	ea40 0002 	orr.w	r0, r0, r2
 800068c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000690:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000694:	f141 0100 	adc.w	r1, r1, #0
 8000698:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800069c:	bf08      	it	eq
 800069e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006a2:	bd70      	pop	{r4, r5, r6, pc}
 80006a4:	f1c4 0520 	rsb	r5, r4, #32
 80006a8:	fa00 f205 	lsl.w	r2, r0, r5
 80006ac:	ea4e 0e02 	orr.w	lr, lr, r2
 80006b0:	fa20 f304 	lsr.w	r3, r0, r4
 80006b4:	fa01 f205 	lsl.w	r2, r1, r5
 80006b8:	ea43 0302 	orr.w	r3, r3, r2
 80006bc:	fa21 f004 	lsr.w	r0, r1, r4
 80006c0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006c4:	fa21 f204 	lsr.w	r2, r1, r4
 80006c8:	ea20 0002 	bic.w	r0, r0, r2
 80006cc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006d0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006d4:	bf08      	it	eq
 80006d6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f094 0f00 	teq	r4, #0
 80006e0:	d10f      	bne.n	8000702 <__aeabi_dmul+0x1c2>
 80006e2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80006e6:	0040      	lsls	r0, r0, #1
 80006e8:	eb41 0101 	adc.w	r1, r1, r1
 80006ec:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80006f0:	bf08      	it	eq
 80006f2:	3c01      	subeq	r4, #1
 80006f4:	d0f7      	beq.n	80006e6 <__aeabi_dmul+0x1a6>
 80006f6:	ea41 0106 	orr.w	r1, r1, r6
 80006fa:	f095 0f00 	teq	r5, #0
 80006fe:	bf18      	it	ne
 8000700:	4770      	bxne	lr
 8000702:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000706:	0052      	lsls	r2, r2, #1
 8000708:	eb43 0303 	adc.w	r3, r3, r3
 800070c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000710:	bf08      	it	eq
 8000712:	3d01      	subeq	r5, #1
 8000714:	d0f7      	beq.n	8000706 <__aeabi_dmul+0x1c6>
 8000716:	ea43 0306 	orr.w	r3, r3, r6
 800071a:	4770      	bx	lr
 800071c:	ea94 0f0c 	teq	r4, ip
 8000720:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000724:	bf18      	it	ne
 8000726:	ea95 0f0c 	teqne	r5, ip
 800072a:	d00c      	beq.n	8000746 <__aeabi_dmul+0x206>
 800072c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000730:	bf18      	it	ne
 8000732:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000736:	d1d1      	bne.n	80006dc <__aeabi_dmul+0x19c>
 8000738:	ea81 0103 	eor.w	r1, r1, r3
 800073c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000740:	f04f 0000 	mov.w	r0, #0
 8000744:	bd70      	pop	{r4, r5, r6, pc}
 8000746:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800074a:	bf06      	itte	eq
 800074c:	4610      	moveq	r0, r2
 800074e:	4619      	moveq	r1, r3
 8000750:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000754:	d019      	beq.n	800078a <__aeabi_dmul+0x24a>
 8000756:	ea94 0f0c 	teq	r4, ip
 800075a:	d102      	bne.n	8000762 <__aeabi_dmul+0x222>
 800075c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000760:	d113      	bne.n	800078a <__aeabi_dmul+0x24a>
 8000762:	ea95 0f0c 	teq	r5, ip
 8000766:	d105      	bne.n	8000774 <__aeabi_dmul+0x234>
 8000768:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800076c:	bf1c      	itt	ne
 800076e:	4610      	movne	r0, r2
 8000770:	4619      	movne	r1, r3
 8000772:	d10a      	bne.n	800078a <__aeabi_dmul+0x24a>
 8000774:	ea81 0103 	eor.w	r1, r1, r3
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000780:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000784:	f04f 0000 	mov.w	r0, #0
 8000788:	bd70      	pop	{r4, r5, r6, pc}
 800078a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800078e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000792:	bd70      	pop	{r4, r5, r6, pc}

08000794 <__aeabi_ddiv>:
 8000794:	b570      	push	{r4, r5, r6, lr}
 8000796:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800079a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800079e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007a2:	bf1d      	ittte	ne
 80007a4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007a8:	ea94 0f0c 	teqne	r4, ip
 80007ac:	ea95 0f0c 	teqne	r5, ip
 80007b0:	f000 f8a7 	bleq	8000902 <__aeabi_ddiv+0x16e>
 80007b4:	eba4 0405 	sub.w	r4, r4, r5
 80007b8:	ea81 0e03 	eor.w	lr, r1, r3
 80007bc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80007c0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007c4:	f000 8088 	beq.w	80008d8 <__aeabi_ddiv+0x144>
 80007c8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007cc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80007d0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007d4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007d8:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007dc:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007e0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007e4:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007e8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007ec:	429d      	cmp	r5, r3
 80007ee:	bf08      	it	eq
 80007f0:	4296      	cmpeq	r6, r2
 80007f2:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80007f6:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80007fa:	d202      	bcs.n	8000802 <__aeabi_ddiv+0x6e>
 80007fc:	085b      	lsrs	r3, r3, #1
 80007fe:	ea4f 0232 	mov.w	r2, r2, rrx
 8000802:	1ab6      	subs	r6, r6, r2
 8000804:	eb65 0503 	sbc.w	r5, r5, r3
 8000808:	085b      	lsrs	r3, r3, #1
 800080a:	ea4f 0232 	mov.w	r2, r2, rrx
 800080e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000812:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000816:	ebb6 0e02 	subs.w	lr, r6, r2
 800081a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800081e:	bf22      	ittt	cs
 8000820:	1ab6      	subcs	r6, r6, r2
 8000822:	4675      	movcs	r5, lr
 8000824:	ea40 000c 	orrcs.w	r0, r0, ip
 8000828:	085b      	lsrs	r3, r3, #1
 800082a:	ea4f 0232 	mov.w	r2, r2, rrx
 800082e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000832:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000836:	bf22      	ittt	cs
 8000838:	1ab6      	subcs	r6, r6, r2
 800083a:	4675      	movcs	r5, lr
 800083c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000840:	085b      	lsrs	r3, r3, #1
 8000842:	ea4f 0232 	mov.w	r2, r2, rrx
 8000846:	ebb6 0e02 	subs.w	lr, r6, r2
 800084a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800084e:	bf22      	ittt	cs
 8000850:	1ab6      	subcs	r6, r6, r2
 8000852:	4675      	movcs	r5, lr
 8000854:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000858:	085b      	lsrs	r3, r3, #1
 800085a:	ea4f 0232 	mov.w	r2, r2, rrx
 800085e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000862:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000866:	bf22      	ittt	cs
 8000868:	1ab6      	subcs	r6, r6, r2
 800086a:	4675      	movcs	r5, lr
 800086c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000870:	ea55 0e06 	orrs.w	lr, r5, r6
 8000874:	d018      	beq.n	80008a8 <__aeabi_ddiv+0x114>
 8000876:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800087a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800087e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000882:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000886:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800088a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800088e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000892:	d1c0      	bne.n	8000816 <__aeabi_ddiv+0x82>
 8000894:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000898:	d10b      	bne.n	80008b2 <__aeabi_ddiv+0x11e>
 800089a:	ea41 0100 	orr.w	r1, r1, r0
 800089e:	f04f 0000 	mov.w	r0, #0
 80008a2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008a6:	e7b6      	b.n	8000816 <__aeabi_ddiv+0x82>
 80008a8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008ac:	bf04      	itt	eq
 80008ae:	4301      	orreq	r1, r0
 80008b0:	2000      	moveq	r0, #0
 80008b2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80008b6:	bf88      	it	hi
 80008b8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80008bc:	f63f aeaf 	bhi.w	800061e <__aeabi_dmul+0xde>
 80008c0:	ebb5 0c03 	subs.w	ip, r5, r3
 80008c4:	bf04      	itt	eq
 80008c6:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008ca:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008ce:	f150 0000 	adcs.w	r0, r0, #0
 80008d2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008d6:	bd70      	pop	{r4, r5, r6, pc}
 80008d8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80008dc:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008e0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008e4:	bfc2      	ittt	gt
 80008e6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008ea:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008ee:	bd70      	popgt	{r4, r5, r6, pc}
 80008f0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80008f4:	f04f 0e00 	mov.w	lr, #0
 80008f8:	3c01      	subs	r4, #1
 80008fa:	e690      	b.n	800061e <__aeabi_dmul+0xde>
 80008fc:	ea45 0e06 	orr.w	lr, r5, r6
 8000900:	e68d      	b.n	800061e <__aeabi_dmul+0xde>
 8000902:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000906:	ea94 0f0c 	teq	r4, ip
 800090a:	bf08      	it	eq
 800090c:	ea95 0f0c 	teqeq	r5, ip
 8000910:	f43f af3b 	beq.w	800078a <__aeabi_dmul+0x24a>
 8000914:	ea94 0f0c 	teq	r4, ip
 8000918:	d10a      	bne.n	8000930 <__aeabi_ddiv+0x19c>
 800091a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800091e:	f47f af34 	bne.w	800078a <__aeabi_dmul+0x24a>
 8000922:	ea95 0f0c 	teq	r5, ip
 8000926:	f47f af25 	bne.w	8000774 <__aeabi_dmul+0x234>
 800092a:	4610      	mov	r0, r2
 800092c:	4619      	mov	r1, r3
 800092e:	e72c      	b.n	800078a <__aeabi_dmul+0x24a>
 8000930:	ea95 0f0c 	teq	r5, ip
 8000934:	d106      	bne.n	8000944 <__aeabi_ddiv+0x1b0>
 8000936:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800093a:	f43f aefd 	beq.w	8000738 <__aeabi_dmul+0x1f8>
 800093e:	4610      	mov	r0, r2
 8000940:	4619      	mov	r1, r3
 8000942:	e722      	b.n	800078a <__aeabi_dmul+0x24a>
 8000944:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000948:	bf18      	it	ne
 800094a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800094e:	f47f aec5 	bne.w	80006dc <__aeabi_dmul+0x19c>
 8000952:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000956:	f47f af0d 	bne.w	8000774 <__aeabi_dmul+0x234>
 800095a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800095e:	f47f aeeb 	bne.w	8000738 <__aeabi_dmul+0x1f8>
 8000962:	e712      	b.n	800078a <__aeabi_dmul+0x24a>

08000964 <__gedf2>:
 8000964:	f04f 3cff 	mov.w	ip, #4294967295
 8000968:	e006      	b.n	8000978 <__cmpdf2+0x4>
 800096a:	bf00      	nop

0800096c <__ledf2>:
 800096c:	f04f 0c01 	mov.w	ip, #1
 8000970:	e002      	b.n	8000978 <__cmpdf2+0x4>
 8000972:	bf00      	nop

08000974 <__cmpdf2>:
 8000974:	f04f 0c01 	mov.w	ip, #1
 8000978:	f84d cd04 	str.w	ip, [sp, #-4]!
 800097c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000980:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000984:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000988:	bf18      	it	ne
 800098a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800098e:	d01b      	beq.n	80009c8 <__cmpdf2+0x54>
 8000990:	b001      	add	sp, #4
 8000992:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000996:	bf0c      	ite	eq
 8000998:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 800099c:	ea91 0f03 	teqne	r1, r3
 80009a0:	bf02      	ittt	eq
 80009a2:	ea90 0f02 	teqeq	r0, r2
 80009a6:	2000      	moveq	r0, #0
 80009a8:	4770      	bxeq	lr
 80009aa:	f110 0f00 	cmn.w	r0, #0
 80009ae:	ea91 0f03 	teq	r1, r3
 80009b2:	bf58      	it	pl
 80009b4:	4299      	cmppl	r1, r3
 80009b6:	bf08      	it	eq
 80009b8:	4290      	cmpeq	r0, r2
 80009ba:	bf2c      	ite	cs
 80009bc:	17d8      	asrcs	r0, r3, #31
 80009be:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80009c2:	f040 0001 	orr.w	r0, r0, #1
 80009c6:	4770      	bx	lr
 80009c8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009cc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009d0:	d102      	bne.n	80009d8 <__cmpdf2+0x64>
 80009d2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009d6:	d107      	bne.n	80009e8 <__cmpdf2+0x74>
 80009d8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009dc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009e0:	d1d6      	bne.n	8000990 <__cmpdf2+0x1c>
 80009e2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009e6:	d0d3      	beq.n	8000990 <__cmpdf2+0x1c>
 80009e8:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009ec:	4770      	bx	lr
 80009ee:	bf00      	nop

080009f0 <__aeabi_cdrcmple>:
 80009f0:	4684      	mov	ip, r0
 80009f2:	4610      	mov	r0, r2
 80009f4:	4662      	mov	r2, ip
 80009f6:	468c      	mov	ip, r1
 80009f8:	4619      	mov	r1, r3
 80009fa:	4663      	mov	r3, ip
 80009fc:	e000      	b.n	8000a00 <__aeabi_cdcmpeq>
 80009fe:	bf00      	nop

08000a00 <__aeabi_cdcmpeq>:
 8000a00:	b501      	push	{r0, lr}
 8000a02:	f7ff ffb7 	bl	8000974 <__cmpdf2>
 8000a06:	2800      	cmp	r0, #0
 8000a08:	bf48      	it	mi
 8000a0a:	f110 0f00 	cmnmi.w	r0, #0
 8000a0e:	bd01      	pop	{r0, pc}

08000a10 <__aeabi_dcmpeq>:
 8000a10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a14:	f7ff fff4 	bl	8000a00 <__aeabi_cdcmpeq>
 8000a18:	bf0c      	ite	eq
 8000a1a:	2001      	moveq	r0, #1
 8000a1c:	2000      	movne	r0, #0
 8000a1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a22:	bf00      	nop

08000a24 <__aeabi_dcmplt>:
 8000a24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a28:	f7ff ffea 	bl	8000a00 <__aeabi_cdcmpeq>
 8000a2c:	bf34      	ite	cc
 8000a2e:	2001      	movcc	r0, #1
 8000a30:	2000      	movcs	r0, #0
 8000a32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a36:	bf00      	nop

08000a38 <__aeabi_dcmple>:
 8000a38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a3c:	f7ff ffe0 	bl	8000a00 <__aeabi_cdcmpeq>
 8000a40:	bf94      	ite	ls
 8000a42:	2001      	movls	r0, #1
 8000a44:	2000      	movhi	r0, #0
 8000a46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a4a:	bf00      	nop

08000a4c <__aeabi_dcmpge>:
 8000a4c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a50:	f7ff ffce 	bl	80009f0 <__aeabi_cdrcmple>
 8000a54:	bf94      	ite	ls
 8000a56:	2001      	movls	r0, #1
 8000a58:	2000      	movhi	r0, #0
 8000a5a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a5e:	bf00      	nop

08000a60 <__aeabi_dcmpgt>:
 8000a60:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a64:	f7ff ffc4 	bl	80009f0 <__aeabi_cdrcmple>
 8000a68:	bf34      	ite	cc
 8000a6a:	2001      	movcc	r0, #1
 8000a6c:	2000      	movcs	r0, #0
 8000a6e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a72:	bf00      	nop

08000a74 <__aeabi_d2iz>:
 8000a74:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a78:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a7c:	d215      	bcs.n	8000aaa <__aeabi_d2iz+0x36>
 8000a7e:	d511      	bpl.n	8000aa4 <__aeabi_d2iz+0x30>
 8000a80:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a84:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a88:	d912      	bls.n	8000ab0 <__aeabi_d2iz+0x3c>
 8000a8a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a8e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a92:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a96:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a9a:	fa23 f002 	lsr.w	r0, r3, r2
 8000a9e:	bf18      	it	ne
 8000aa0:	4240      	negne	r0, r0
 8000aa2:	4770      	bx	lr
 8000aa4:	f04f 0000 	mov.w	r0, #0
 8000aa8:	4770      	bx	lr
 8000aaa:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aae:	d105      	bne.n	8000abc <__aeabi_d2iz+0x48>
 8000ab0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ab4:	bf08      	it	eq
 8000ab6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000aba:	4770      	bx	lr
 8000abc:	f04f 0000 	mov.w	r0, #0
 8000ac0:	4770      	bx	lr
 8000ac2:	bf00      	nop

08000ac4 <__aeabi_d2uiz>:
 8000ac4:	004a      	lsls	r2, r1, #1
 8000ac6:	d211      	bcs.n	8000aec <__aeabi_d2uiz+0x28>
 8000ac8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000acc:	d211      	bcs.n	8000af2 <__aeabi_d2uiz+0x2e>
 8000ace:	d50d      	bpl.n	8000aec <__aeabi_d2uiz+0x28>
 8000ad0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ad4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ad8:	d40e      	bmi.n	8000af8 <__aeabi_d2uiz+0x34>
 8000ada:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ade:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ae2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000ae6:	fa23 f002 	lsr.w	r0, r3, r2
 8000aea:	4770      	bx	lr
 8000aec:	f04f 0000 	mov.w	r0, #0
 8000af0:	4770      	bx	lr
 8000af2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000af6:	d102      	bne.n	8000afe <__aeabi_d2uiz+0x3a>
 8000af8:	f04f 30ff 	mov.w	r0, #4294967295
 8000afc:	4770      	bx	lr
 8000afe:	f04f 0000 	mov.w	r0, #0
 8000b02:	4770      	bx	lr

08000b04 <__aeabi_d2f>:
 8000b04:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b08:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000b0c:	bf24      	itt	cs
 8000b0e:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000b12:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b16:	d90d      	bls.n	8000b34 <__aeabi_d2f+0x30>
 8000b18:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b1c:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b20:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b24:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b28:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b2c:	bf08      	it	eq
 8000b2e:	f020 0001 	biceq.w	r0, r0, #1
 8000b32:	4770      	bx	lr
 8000b34:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b38:	d121      	bne.n	8000b7e <__aeabi_d2f+0x7a>
 8000b3a:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b3e:	bfbc      	itt	lt
 8000b40:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b44:	4770      	bxlt	lr
 8000b46:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b4a:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b4e:	f1c2 0218 	rsb	r2, r2, #24
 8000b52:	f1c2 0c20 	rsb	ip, r2, #32
 8000b56:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b5a:	fa20 f002 	lsr.w	r0, r0, r2
 8000b5e:	bf18      	it	ne
 8000b60:	f040 0001 	orrne.w	r0, r0, #1
 8000b64:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b68:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b6c:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b70:	ea40 000c 	orr.w	r0, r0, ip
 8000b74:	fa23 f302 	lsr.w	r3, r3, r2
 8000b78:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b7c:	e7cc      	b.n	8000b18 <__aeabi_d2f+0x14>
 8000b7e:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b82:	d107      	bne.n	8000b94 <__aeabi_d2f+0x90>
 8000b84:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b88:	bf1e      	ittt	ne
 8000b8a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b8e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b92:	4770      	bxne	lr
 8000b94:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b9c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ba0:	4770      	bx	lr
 8000ba2:	bf00      	nop

08000ba4 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000ba4:	b480      	push	{r7}
 8000ba6:	b083      	sub	sp, #12
 8000ba8:	af00      	add	r7, sp, #0
 8000baa:	4603      	mov	r3, r0
 8000bac:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000bae:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bb2:	2b00      	cmp	r3, #0
 8000bb4:	db0b      	blt.n	8000bce <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000bb6:	79fb      	ldrb	r3, [r7, #7]
 8000bb8:	f003 021f 	and.w	r2, r3, #31
 8000bbc:	4907      	ldr	r1, [pc, #28]	; (8000bdc <__NVIC_EnableIRQ+0x38>)
 8000bbe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bc2:	095b      	lsrs	r3, r3, #5
 8000bc4:	2001      	movs	r0, #1
 8000bc6:	fa00 f202 	lsl.w	r2, r0, r2
 8000bca:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000bce:	bf00      	nop
 8000bd0:	370c      	adds	r7, #12
 8000bd2:	46bd      	mov	sp, r7
 8000bd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bd8:	4770      	bx	lr
 8000bda:	bf00      	nop
 8000bdc:	e000e100 	.word	0xe000e100

08000be0 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000be0:	b480      	push	{r7}
 8000be2:	b083      	sub	sp, #12
 8000be4:	af00      	add	r7, sp, #0
 8000be6:	4603      	mov	r3, r0
 8000be8:	6039      	str	r1, [r7, #0]
 8000bea:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000bec:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bf0:	2b00      	cmp	r3, #0
 8000bf2:	db0a      	blt.n	8000c0a <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000bf4:	683b      	ldr	r3, [r7, #0]
 8000bf6:	b2da      	uxtb	r2, r3
 8000bf8:	490c      	ldr	r1, [pc, #48]	; (8000c2c <__NVIC_SetPriority+0x4c>)
 8000bfa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bfe:	0112      	lsls	r2, r2, #4
 8000c00:	b2d2      	uxtb	r2, r2
 8000c02:	440b      	add	r3, r1
 8000c04:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000c08:	e00a      	b.n	8000c20 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000c0a:	683b      	ldr	r3, [r7, #0]
 8000c0c:	b2da      	uxtb	r2, r3
 8000c0e:	4908      	ldr	r1, [pc, #32]	; (8000c30 <__NVIC_SetPriority+0x50>)
 8000c10:	79fb      	ldrb	r3, [r7, #7]
 8000c12:	f003 030f 	and.w	r3, r3, #15
 8000c16:	3b04      	subs	r3, #4
 8000c18:	0112      	lsls	r2, r2, #4
 8000c1a:	b2d2      	uxtb	r2, r2
 8000c1c:	440b      	add	r3, r1
 8000c1e:	761a      	strb	r2, [r3, #24]
}
 8000c20:	bf00      	nop
 8000c22:	370c      	adds	r7, #12
 8000c24:	46bd      	mov	sp, r7
 8000c26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c2a:	4770      	bx	lr
 8000c2c:	e000e100 	.word	0xe000e100
 8000c30:	e000ed00 	.word	0xe000ed00

08000c34 <main>:
int freq=0;
/******************************************/
/***				MAIN				***/
/******************************************/
int main(void)
{
 8000c34:	b580      	push	{r7, lr}
 8000c36:	af00      	add	r7, sp, #0

  set_sysclk_to_168();											// Set main clock to 168MHz
 8000c38:	f000 f998 	bl	8000f6c <set_sysclk_to_168>
  gpio_init();													// Set GPIO pins for PWM output
 8000c3c:	f000 f852 	bl	8000ce4 <gpio_init>
  timer1_init();												// Configure Timer1 for PWM generation
 8000c40:	f000 f88c 	bl	8000d5c <timer1_init>
  pwm_button_init();											// Configuration for PWM Enable Button
 8000c44:	f000 f804 	bl	8000c50 <pwm_button_init>
  adc_init();													// Configuration for ADC to obtain PWM Data
 8000c48:	f000 f934 	bl	8000eb4 <adc_init>

  while(1){}
 8000c4c:	e7fe      	b.n	8000c4c <main+0x18>
	...

08000c50 <pwm_button_init>:

/******************************************/
/***			PWM Button Init				***/
/******************************************/
void pwm_button_init(void)
{
 8000c50:	b580      	push	{r7, lr}
 8000c52:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= ((1<<3)|1);									// Enable GPIOD and GPIOA clocks
 8000c54:	4b1f      	ldr	r3, [pc, #124]	; (8000cd4 <pwm_button_init+0x84>)
 8000c56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c58:	4a1e      	ldr	r2, [pc, #120]	; (8000cd4 <pwm_button_init+0x84>)
 8000c5a:	f043 0309 	orr.w	r3, r3, #9
 8000c5e:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;						// Enable EXTI registers
 8000c60:	4b1c      	ldr	r3, [pc, #112]	; (8000cd4 <pwm_button_init+0x84>)
 8000c62:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000c64:	4a1b      	ldr	r2, [pc, #108]	; (8000cd4 <pwm_button_init+0x84>)
 8000c66:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000c6a:	6453      	str	r3, [r2, #68]	; 0x44
	SYSCFG->EXTICR[0] = 0;										// Select A0 as EXTI source
 8000c6c:	4b1a      	ldr	r3, [pc, #104]	; (8000cd8 <pwm_button_init+0x88>)
 8000c6e:	2200      	movs	r2, #0
 8000c70:	609a      	str	r2, [r3, #8]

	EXTI->IMR = 1;												// Enable A0 channel interrupts
 8000c72:	4b1a      	ldr	r3, [pc, #104]	; (8000cdc <pwm_button_init+0x8c>)
 8000c74:	2201      	movs	r2, #1
 8000c76:	601a      	str	r2, [r3, #0]
	EXTI->RTSR |= 1;											// Rising Edge Detection
 8000c78:	4b18      	ldr	r3, [pc, #96]	; (8000cdc <pwm_button_init+0x8c>)
 8000c7a:	689b      	ldr	r3, [r3, #8]
 8000c7c:	4a17      	ldr	r2, [pc, #92]	; (8000cdc <pwm_button_init+0x8c>)
 8000c7e:	f043 0301 	orr.w	r3, r3, #1
 8000c82:	6093      	str	r3, [r2, #8]
	EXTI->FTSR &= ~1;											// Falling Edge Detection cleared
 8000c84:	4b15      	ldr	r3, [pc, #84]	; (8000cdc <pwm_button_init+0x8c>)
 8000c86:	68db      	ldr	r3, [r3, #12]
 8000c88:	4a14      	ldr	r2, [pc, #80]	; (8000cdc <pwm_button_init+0x8c>)
 8000c8a:	f023 0301 	bic.w	r3, r3, #1
 8000c8e:	60d3      	str	r3, [r2, #12]

	NVIC_SetPriority(EXTI0_IRQn, 0);							// Set Priority to EXTI Interrupt
 8000c90:	2100      	movs	r1, #0
 8000c92:	2006      	movs	r0, #6
 8000c94:	f7ff ffa4 	bl	8000be0 <__NVIC_SetPriority>
	NVIC_EnableIRQ(EXTI0_IRQn);									// Enable EXTI Interrupt
 8000c98:	2006      	movs	r0, #6
 8000c9a:	f7ff ff83 	bl	8000ba4 <__NVIC_EnableIRQ>

	GPIOD->MODER |= (1<<30);									// D6 BLUE LED SET OUTPUT
 8000c9e:	4b10      	ldr	r3, [pc, #64]	; (8000ce0 <pwm_button_init+0x90>)
 8000ca0:	681b      	ldr	r3, [r3, #0]
 8000ca2:	4a0f      	ldr	r2, [pc, #60]	; (8000ce0 <pwm_button_init+0x90>)
 8000ca4:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8000ca8:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= (1<<28);									// D5 GREEN LED SET OUTPUT
 8000caa:	4b0d      	ldr	r3, [pc, #52]	; (8000ce0 <pwm_button_init+0x90>)
 8000cac:	681b      	ldr	r3, [r3, #0]
 8000cae:	4a0c      	ldr	r2, [pc, #48]	; (8000ce0 <pwm_button_init+0x90>)
 8000cb0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000cb4:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= (1<<26);									// D4 ORANGE LED SET OUTPUT
 8000cb6:	4b0a      	ldr	r3, [pc, #40]	; (8000ce0 <pwm_button_init+0x90>)
 8000cb8:	681b      	ldr	r3, [r3, #0]
 8000cba:	4a09      	ldr	r2, [pc, #36]	; (8000ce0 <pwm_button_init+0x90>)
 8000cbc:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000cc0:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= (1<<24);									// D3 YELLOW LED SET OUTPUT (Color order might be different)
 8000cc2:	4b07      	ldr	r3, [pc, #28]	; (8000ce0 <pwm_button_init+0x90>)
 8000cc4:	681b      	ldr	r3, [r3, #0]
 8000cc6:	4a06      	ldr	r2, [pc, #24]	; (8000ce0 <pwm_button_init+0x90>)
 8000cc8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000ccc:	6013      	str	r3, [r2, #0]
}
 8000cce:	bf00      	nop
 8000cd0:	bd80      	pop	{r7, pc}
 8000cd2:	bf00      	nop
 8000cd4:	40023800 	.word	0x40023800
 8000cd8:	40013800 	.word	0x40013800
 8000cdc:	40013c00 	.word	0x40013c00
 8000ce0:	40020c00 	.word	0x40020c00

08000ce4 <gpio_init>:

/******************************************/
/***			GPIO INIT				***/
/******************************************/
void gpio_init(void)
{
 8000ce4:	b480      	push	{r7}
 8000ce6:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= (1<<4 | 1<<1);								// Enable GPIOB and GPIOE Clock
 8000ce8:	4b17      	ldr	r3, [pc, #92]	; (8000d48 <gpio_init+0x64>)
 8000cea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000cec:	4a16      	ldr	r2, [pc, #88]	; (8000d48 <gpio_init+0x64>)
 8000cee:	f043 0312 	orr.w	r3, r3, #18
 8000cf2:	6313      	str	r3, [r2, #48]	; 0x30

	GPIOE->PUPDR  = 0;											// Pin configuration
 8000cf4:	4b15      	ldr	r3, [pc, #84]	; (8000d4c <gpio_init+0x68>)
 8000cf6:	2200      	movs	r2, #0
 8000cf8:	60da      	str	r2, [r3, #12]
	GPIOB->PUPDR  = 0;											// Pin configuration
 8000cfa:	4b15      	ldr	r3, [pc, #84]	; (8000d50 <gpio_init+0x6c>)
 8000cfc:	2200      	movs	r2, #0
 8000cfe:	60da      	str	r2, [r3, #12]
	GPIOE->OTYPER = 0;											// Pin configuration
 8000d00:	4b12      	ldr	r3, [pc, #72]	; (8000d4c <gpio_init+0x68>)
 8000d02:	2200      	movs	r2, #0
 8000d04:	605a      	str	r2, [r3, #4]
	GPIOB->OTYPER = 0;											// Pin configuration
 8000d06:	4b12      	ldr	r3, [pc, #72]	; (8000d50 <gpio_init+0x6c>)
 8000d08:	2200      	movs	r2, #0
 8000d0a:	605a      	str	r2, [r3, #4]
	* VL->B0
	* WH->E13
	* WL->B1
	*/

	GPIOE->MODER  = ((1<<19)
 8000d0c:	4b0f      	ldr	r3, [pc, #60]	; (8000d4c <gpio_init+0x68>)
 8000d0e:	4a11      	ldr	r2, [pc, #68]	; (8000d54 <gpio_init+0x70>)
 8000d10:	601a      	str	r2, [r3, #0]
					|(1<<17)
					|(1<<23)
					|(1<<27));									// GPIOE Pins 8 9 11 13 configured as Alternate Function

	GPIOE->OSPEEDR= ((1<<19)
 8000d12:	4b0e      	ldr	r3, [pc, #56]	; (8000d4c <gpio_init+0x68>)
 8000d14:	4a0f      	ldr	r2, [pc, #60]	; (8000d54 <gpio_init+0x70>)
 8000d16:	609a      	str	r2, [r3, #8]
					|(1<<17)
					|(1<<23)
					|(1<<27));									// Output Speed Set to MAX(6ns rise and fall) for all pins

	GPIOE->AFR[1] = (GPIO_AFRH_AFRH1_0
 8000d18:	4b0c      	ldr	r3, [pc, #48]	; (8000d4c <gpio_init+0x68>)
 8000d1a:	4a0f      	ldr	r2, [pc, #60]	; (8000d58 <gpio_init+0x74>)
 8000d1c:	625a      	str	r2, [r3, #36]	; 0x24
					|GPIO_AFRH_AFRH0_0
					|GPIO_AFRH_AFRH3_0
					|GPIO_AFRH_AFRH5_0);						// Configuring High Side pins 0001 (TIM1 Peripheral) in alternate function multiplexer

	GPIOB->MODER |= ((1<<1)
 8000d1e:	4b0c      	ldr	r3, [pc, #48]	; (8000d50 <gpio_init+0x6c>)
 8000d20:	681b      	ldr	r3, [r3, #0]
 8000d22:	4a0b      	ldr	r2, [pc, #44]	; (8000d50 <gpio_init+0x6c>)
 8000d24:	f043 030a 	orr.w	r3, r3, #10
 8000d28:	6013      	str	r3, [r2, #0]
					|(1<<3));									// GPIOB Pins 0 1configured as Alternate Function

	GPIOB->OSPEEDR= ((1<<1)
 8000d2a:	4b09      	ldr	r3, [pc, #36]	; (8000d50 <gpio_init+0x6c>)
 8000d2c:	220a      	movs	r2, #10
 8000d2e:	609a      	str	r2, [r3, #8]
					|(1<<3));									// Output Speed Set to MAX(6ns rise and fall)

	GPIOB->AFR[0]|= (GPIO_AFRL_AFRL0_0
 8000d30:	4b07      	ldr	r3, [pc, #28]	; (8000d50 <gpio_init+0x6c>)
 8000d32:	6a1b      	ldr	r3, [r3, #32]
 8000d34:	4a06      	ldr	r2, [pc, #24]	; (8000d50 <gpio_init+0x6c>)
 8000d36:	f043 0311 	orr.w	r3, r3, #17
 8000d3a:	6213      	str	r3, [r2, #32]
					|GPIO_AFRL_AFRL1_0);						// Configuring Low Side pins for 0001 (TIM1 Peripheral) in alternate function multiplexer
}
 8000d3c:	bf00      	nop
 8000d3e:	46bd      	mov	sp, r7
 8000d40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d44:	4770      	bx	lr
 8000d46:	bf00      	nop
 8000d48:	40023800 	.word	0x40023800
 8000d4c:	40021000 	.word	0x40021000
 8000d50:	40020400 	.word	0x40020400
 8000d54:	088a0000 	.word	0x088a0000
 8000d58:	00101011 	.word	0x00101011

08000d5c <timer1_init>:

/******************************************/
/***			TIMER1 INIT				***/
/******************************************/
void timer1_init(void)
{
 8000d5c:	b580      	push	{r7, lr}
 8000d5e:	af00      	add	r7, sp, #0
	RCC->APB2ENR |= 1;											// Enable TIM1 Clock
 8000d60:	4b44      	ldr	r3, [pc, #272]	; (8000e74 <timer1_init+0x118>)
 8000d62:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d64:	4a43      	ldr	r2, [pc, #268]	; (8000e74 <timer1_init+0x118>)
 8000d66:	f043 0301 	orr.w	r3, r3, #1
 8000d6a:	6453      	str	r3, [r2, #68]	; 0x44

	// Output Configurations
	TIM1->CR1   |= (TIM_CR1_CMS_Msk);							// TIMER1 counts in Center Aligned Mod 1
 8000d6c:	4b42      	ldr	r3, [pc, #264]	; (8000e78 <timer1_init+0x11c>)
 8000d6e:	681b      	ldr	r3, [r3, #0]
 8000d70:	4a41      	ldr	r2, [pc, #260]	; (8000e78 <timer1_init+0x11c>)
 8000d72:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 8000d76:	6013      	str	r3, [r2, #0]
	TIM1->CCMR1 |= 6<<TIM_CCMR1_OC1M_Pos;						// TIMER1 CCMR1 Register configured as PWM TYPE1 output
 8000d78:	4b3f      	ldr	r3, [pc, #252]	; (8000e78 <timer1_init+0x11c>)
 8000d7a:	699b      	ldr	r3, [r3, #24]
 8000d7c:	4a3e      	ldr	r2, [pc, #248]	; (8000e78 <timer1_init+0x11c>)
 8000d7e:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 8000d82:	6193      	str	r3, [r2, #24]
	TIM1->CCMR1 |= 6<<TIM_CCMR1_OC2M_Pos;						// TIMER1 CCMR2 Register configured as PWM TYPE1 output
 8000d84:	4b3c      	ldr	r3, [pc, #240]	; (8000e78 <timer1_init+0x11c>)
 8000d86:	699b      	ldr	r3, [r3, #24]
 8000d88:	4a3b      	ldr	r2, [pc, #236]	; (8000e78 <timer1_init+0x11c>)
 8000d8a:	f443 43c0 	orr.w	r3, r3, #24576	; 0x6000
 8000d8e:	6193      	str	r3, [r2, #24]
	TIM1->CCMR2 |= 6<<TIM_CCMR2_OC3M_Pos;						// TIMER1 CCMR1 Register configured as PWM TYPE1 output
 8000d90:	4b39      	ldr	r3, [pc, #228]	; (8000e78 <timer1_init+0x11c>)
 8000d92:	69db      	ldr	r3, [r3, #28]
 8000d94:	4a38      	ldr	r2, [pc, #224]	; (8000e78 <timer1_init+0x11c>)
 8000d96:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 8000d9a:	61d3      	str	r3, [r2, #28]

	TIM1->CCMR1 &= ~(TIM_CCMR1_CC1S);							// TIMER1 CC1S bits cleared for output configuration
 8000d9c:	4b36      	ldr	r3, [pc, #216]	; (8000e78 <timer1_init+0x11c>)
 8000d9e:	699b      	ldr	r3, [r3, #24]
 8000da0:	4a35      	ldr	r2, [pc, #212]	; (8000e78 <timer1_init+0x11c>)
 8000da2:	f023 0303 	bic.w	r3, r3, #3
 8000da6:	6193      	str	r3, [r2, #24]
	TIM1->CCMR1 &= ~(TIM_CCMR1_CC2S);							// TIMER1 CC2S bits cleared for output configuration
 8000da8:	4b33      	ldr	r3, [pc, #204]	; (8000e78 <timer1_init+0x11c>)
 8000daa:	699b      	ldr	r3, [r3, #24]
 8000dac:	4a32      	ldr	r2, [pc, #200]	; (8000e78 <timer1_init+0x11c>)
 8000dae:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000db2:	6193      	str	r3, [r2, #24]
	TIM1->CCMR2 &= ~(TIM_CCMR2_CC3S);							// TIMER1 CC3S bits cleared for output configuration
 8000db4:	4b30      	ldr	r3, [pc, #192]	; (8000e78 <timer1_init+0x11c>)
 8000db6:	69db      	ldr	r3, [r3, #28]
 8000db8:	4a2f      	ldr	r2, [pc, #188]	; (8000e78 <timer1_init+0x11c>)
 8000dba:	f023 0303 	bic.w	r3, r3, #3
 8000dbe:	61d3      	str	r3, [r2, #28]

	// Preload Setup
	TIM1->CR2 |= 1;												// Capture Compare Preload Enabled
 8000dc0:	4b2d      	ldr	r3, [pc, #180]	; (8000e78 <timer1_init+0x11c>)
 8000dc2:	685b      	ldr	r3, [r3, #4]
 8000dc4:	4a2c      	ldr	r2, [pc, #176]	; (8000e78 <timer1_init+0x11c>)
 8000dc6:	f043 0301 	orr.w	r3, r3, #1
 8000dca:	6053      	str	r3, [r2, #4]
	TIM1->CCMR1 |= (TIM_CCMR1_OC1PE | TIM_CCMR1_OC2PE);			// Output Compare Preloads are Enabled
 8000dcc:	4b2a      	ldr	r3, [pc, #168]	; (8000e78 <timer1_init+0x11c>)
 8000dce:	699b      	ldr	r3, [r3, #24]
 8000dd0:	4a29      	ldr	r2, [pc, #164]	; (8000e78 <timer1_init+0x11c>)
 8000dd2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000dd6:	f043 0308 	orr.w	r3, r3, #8
 8000dda:	6193      	str	r3, [r2, #24]
	TIM1->CCMR2 |= (TIM_CCMR2_OC3PE);
 8000ddc:	4b26      	ldr	r3, [pc, #152]	; (8000e78 <timer1_init+0x11c>)
 8000dde:	69db      	ldr	r3, [r3, #28]
 8000de0:	4a25      	ldr	r2, [pc, #148]	; (8000e78 <timer1_init+0x11c>)
 8000de2:	f043 0308 	orr.w	r3, r3, #8
 8000de6:	61d3      	str	r3, [r2, #28]
	// Counter Setup
	TIM1->PSC  = 0; 											// 168MHz 5.95nS
 8000de8:	4b23      	ldr	r3, [pc, #140]	; (8000e78 <timer1_init+0x11c>)
 8000dea:	2200      	movs	r2, #0
 8000dec:	629a      	str	r2, [r3, #40]	; 0x28
	TIM1->CNT  = 0;												// Reset Current Counter
 8000dee:	4b22      	ldr	r3, [pc, #136]	; (8000e78 <timer1_init+0x11c>)
 8000df0:	2200      	movs	r2, #0
 8000df2:	625a      	str	r2, [r3, #36]	; 0x24
	TIM1->ARR  = TS;											// Center Mode pit to peak is 50uS "8400"
 8000df4:	4a20      	ldr	r2, [pc, #128]	; (8000e78 <timer1_init+0x11c>)
 8000df6:	4b21      	ldr	r3, [pc, #132]	; (8000e7c <timer1_init+0x120>)
 8000df8:	681b      	ldr	r3, [r3, #0]
 8000dfa:	62d3      	str	r3, [r2, #44]	; 0x2c
	TIM1->CCR1 = 0;												// %0 Duty Cycle
 8000dfc:	4b1e      	ldr	r3, [pc, #120]	; (8000e78 <timer1_init+0x11c>)
 8000dfe:	2200      	movs	r2, #0
 8000e00:	635a      	str	r2, [r3, #52]	; 0x34
	TIM1->CCR2 = 0;												// %0 Duty Cycle
 8000e02:	4b1d      	ldr	r3, [pc, #116]	; (8000e78 <timer1_init+0x11c>)
 8000e04:	2200      	movs	r2, #0
 8000e06:	639a      	str	r2, [r3, #56]	; 0x38
	TIM1->CCR3 = 0;												// %0 Duty Cycle
 8000e08:	4b1b      	ldr	r3, [pc, #108]	; (8000e78 <timer1_init+0x11c>)
 8000e0a:	2200      	movs	r2, #0
 8000e0c:	63da      	str	r2, [r3, #60]	; 0x3c
	//TIM1->BDTR |= (0b00001100);								// 70nS deadtime
	//TIM1->BDTR |= (0b00010001);								// 100nS deadtime
	//TIM1->BDTR |= (0b00011010);								// 155nS deadtime
	//TIM1->BDTR |= (0b00100010);								// 202nS deadtime
	//TIM1->BDTR |= (0b01000100);								// 404nS deadtime
	TIM1->BDTR |= (0b10010100);									// 1us deadtime
 8000e0e:	4b1a      	ldr	r3, [pc, #104]	; (8000e78 <timer1_init+0x11c>)
 8000e10:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000e12:	4a19      	ldr	r2, [pc, #100]	; (8000e78 <timer1_init+0x11c>)
 8000e14:	f043 0394 	orr.w	r3, r3, #148	; 0x94
 8000e18:	6453      	str	r3, [r2, #68]	; 0x44
	//TIM1->BDTR |= (0b11001010);								// 2uS deadtime

	TIM1->CR1 &= ~TIM_CR1_UDIS;									// Update Disabled bit disabled
 8000e1a:	4b17      	ldr	r3, [pc, #92]	; (8000e78 <timer1_init+0x11c>)
 8000e1c:	681b      	ldr	r3, [r3, #0]
 8000e1e:	4a16      	ldr	r2, [pc, #88]	; (8000e78 <timer1_init+0x11c>)
 8000e20:	f023 0302 	bic.w	r3, r3, #2
 8000e24:	6013      	str	r3, [r2, #0]
	TIM1->DIER|= TIM_DIER_UIE;									// Update Interrupt Enabled
 8000e26:	4b14      	ldr	r3, [pc, #80]	; (8000e78 <timer1_init+0x11c>)
 8000e28:	68db      	ldr	r3, [r3, #12]
 8000e2a:	4a13      	ldr	r2, [pc, #76]	; (8000e78 <timer1_init+0x11c>)
 8000e2c:	f043 0301 	orr.w	r3, r3, #1
 8000e30:	60d3      	str	r3, [r2, #12]

	// Enable Outputs
	TIM1->CCER |= (TIM_CCER_CC1E | TIM_CCER_CC1NE);				// CC CH1 and CH1n enabled for output
 8000e32:	4b11      	ldr	r3, [pc, #68]	; (8000e78 <timer1_init+0x11c>)
 8000e34:	6a1b      	ldr	r3, [r3, #32]
 8000e36:	4a10      	ldr	r2, [pc, #64]	; (8000e78 <timer1_init+0x11c>)
 8000e38:	f043 0305 	orr.w	r3, r3, #5
 8000e3c:	6213      	str	r3, [r2, #32]
	TIM1->CCER |= (TIM_CCER_CC2E | TIM_CCER_CC2NE);				// CC CH2 and CH2n enabled for output
 8000e3e:	4b0e      	ldr	r3, [pc, #56]	; (8000e78 <timer1_init+0x11c>)
 8000e40:	6a1b      	ldr	r3, [r3, #32]
 8000e42:	4a0d      	ldr	r2, [pc, #52]	; (8000e78 <timer1_init+0x11c>)
 8000e44:	f043 0350 	orr.w	r3, r3, #80	; 0x50
 8000e48:	6213      	str	r3, [r2, #32]
	TIM1->CCER |= (TIM_CCER_CC3E | TIM_CCER_CC3NE);				// CC CH3 and CH3n enabled for output
 8000e4a:	4b0b      	ldr	r3, [pc, #44]	; (8000e78 <timer1_init+0x11c>)
 8000e4c:	6a1b      	ldr	r3, [r3, #32]
 8000e4e:	4a0a      	ldr	r2, [pc, #40]	; (8000e78 <timer1_init+0x11c>)
 8000e50:	f443 63a0 	orr.w	r3, r3, #1280	; 0x500
 8000e54:	6213      	str	r3, [r2, #32]

	NVIC_SetPriority(TIM1_UP_TIM10_IRQn,2);						// Set NVIC Priority
 8000e56:	2102      	movs	r1, #2
 8000e58:	2019      	movs	r0, #25
 8000e5a:	f7ff fec1 	bl	8000be0 <__NVIC_SetPriority>
	NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);							// Enable Timer1 Interrupt
 8000e5e:	2019      	movs	r0, #25
 8000e60:	f7ff fea0 	bl	8000ba4 <__NVIC_EnableIRQ>

	TIM1->CR1  |= (TIM_CR1_CEN_Msk);							// Counter enabled
 8000e64:	4b04      	ldr	r3, [pc, #16]	; (8000e78 <timer1_init+0x11c>)
 8000e66:	681b      	ldr	r3, [r3, #0]
 8000e68:	4a03      	ldr	r2, [pc, #12]	; (8000e78 <timer1_init+0x11c>)
 8000e6a:	f043 0301 	orr.w	r3, r3, #1
 8000e6e:	6013      	str	r3, [r2, #0]
}
 8000e70:	bf00      	nop
 8000e72:	bd80      	pop	{r7, pc}
 8000e74:	40023800 	.word	0x40023800
 8000e78:	40010000 	.word	0x40010000
 8000e7c:	20000000 	.word	0x20000000

08000e80 <delay_ms>:

/******************************************/
/***			DELAY mS				***/
/******************************************/
void delay_ms(const uint16_t ms)
{
 8000e80:	b480      	push	{r7}
 8000e82:	b085      	sub	sp, #20
 8000e84:	af00      	add	r7, sp, #0
 8000e86:	4603      	mov	r3, r0
 8000e88:	80fb      	strh	r3, [r7, #6]
  uint32_t i = ms * 27778;
 8000e8a:	88fb      	ldrh	r3, [r7, #6]
 8000e8c:	f646 4282 	movw	r2, #27778	; 0x6c82
 8000e90:	fb02 f303 	mul.w	r3, r2, r3
 8000e94:	60fb      	str	r3, [r7, #12]
  while (i-- > 0) {asm("nop");  }
 8000e96:	e000      	b.n	8000e9a <delay_ms+0x1a>
 8000e98:	bf00      	nop
 8000e9a:	68fb      	ldr	r3, [r7, #12]
 8000e9c:	1e5a      	subs	r2, r3, #1
 8000e9e:	60fa      	str	r2, [r7, #12]
 8000ea0:	2b00      	cmp	r3, #0
 8000ea2:	d1f9      	bne.n	8000e98 <delay_ms+0x18>
}
 8000ea4:	bf00      	nop
 8000ea6:	bf00      	nop
 8000ea8:	3714      	adds	r7, #20
 8000eaa:	46bd      	mov	sp, r7
 8000eac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eb0:	4770      	bx	lr
	...

08000eb4 <adc_init>:

/******************************************/
/***			ADC Init				***/
/******************************************/
void adc_init(void)
{
 8000eb4:	b480      	push	{r7}
 8000eb6:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= (1<<2); 									// Enable GPIOC Clock
 8000eb8:	4b28      	ldr	r3, [pc, #160]	; (8000f5c <adc_init+0xa8>)
 8000eba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ebc:	4a27      	ldr	r2, [pc, #156]	; (8000f5c <adc_init+0xa8>)
 8000ebe:	f043 0304 	orr.w	r3, r3, #4
 8000ec2:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOC->MODER |= (3<<2); 									// Set PC1 to analog mode
 8000ec4:	4b26      	ldr	r3, [pc, #152]	; (8000f60 <adc_init+0xac>)
 8000ec6:	681b      	ldr	r3, [r3, #0]
 8000ec8:	4a25      	ldr	r2, [pc, #148]	; (8000f60 <adc_init+0xac>)
 8000eca:	f043 030c 	orr.w	r3, r3, #12
 8000ece:	6013      	str	r3, [r2, #0]
	RCC->APB2ENR |= (1 << 8); 									// Enable ADC1 clock
 8000ed0:	4b22      	ldr	r3, [pc, #136]	; (8000f5c <adc_init+0xa8>)
 8000ed2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000ed4:	4a21      	ldr	r2, [pc, #132]	; (8000f5c <adc_init+0xa8>)
 8000ed6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000eda:	6453      	str	r3, [r2, #68]	; 0x44
	ADC->CCR = (1<<16);											// Divide ADC clock by 4 (84/4=21Mh)
 8000edc:	4b21      	ldr	r3, [pc, #132]	; (8000f64 <adc_init+0xb0>)
 8000ede:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8000ee2:	605a      	str	r2, [r3, #4]
	ADC1->CR1 &= ~(1 << 8); 									// SCAN mode disabled (Bit8)
 8000ee4:	4b20      	ldr	r3, [pc, #128]	; (8000f68 <adc_init+0xb4>)
 8000ee6:	685b      	ldr	r3, [r3, #4]
 8000ee8:	4a1f      	ldr	r2, [pc, #124]	; (8000f68 <adc_init+0xb4>)
 8000eea:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000eee:	6053      	str	r3, [r2, #4]
	ADC1->CR1 &=  ~(3 << 24); 									// 12bit resolution (Bit24,25 0b00)
 8000ef0:	4b1d      	ldr	r3, [pc, #116]	; (8000f68 <adc_init+0xb4>)
 8000ef2:	685b      	ldr	r3, [r3, #4]
 8000ef4:	4a1c      	ldr	r2, [pc, #112]	; (8000f68 <adc_init+0xb4>)
 8000ef6:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8000efa:	6053      	str	r3, [r2, #4]
	ADC1->SQR1 |= (1 << 20); 									// Set number of conversions projected (L[3:0] 0b0001) -> 1 conversion
 8000efc:	4b1a      	ldr	r3, [pc, #104]	; (8000f68 <adc_init+0xb4>)
 8000efe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000f00:	4a19      	ldr	r2, [pc, #100]	; (8000f68 <adc_init+0xb4>)
 8000f02:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000f06:	62d3      	str	r3, [r2, #44]	; 0x2c
	ADC1->SQR3 &= ~(0x3FFFFFFF); 								// Clear whole 1st 30bits in register
 8000f08:	4b17      	ldr	r3, [pc, #92]	; (8000f68 <adc_init+0xb4>)
 8000f0a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000f0c:	4a16      	ldr	r2, [pc, #88]	; (8000f68 <adc_init+0xb4>)
 8000f0e:	f003 4340 	and.w	r3, r3, #3221225472	; 0xc0000000
 8000f12:	6353      	str	r3, [r2, #52]	; 0x34
	ADC1->SQR3 |= (0b01011); 									// 1st conversion in regular sequence: SQ1: PC1 as ADC1_IN11
 8000f14:	4b14      	ldr	r3, [pc, #80]	; (8000f68 <adc_init+0xb4>)
 8000f16:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8000f18:	4a13      	ldr	r2, [pc, #76]	; (8000f68 <adc_init+0xb4>)
 8000f1a:	f043 030b 	orr.w	r3, r3, #11
 8000f1e:	6353      	str	r3, [r2, #52]	; 0x34
	ADC1->CR2 &= ~(1 << 1); 									// Single conversion
 8000f20:	4b11      	ldr	r3, [pc, #68]	; (8000f68 <adc_init+0xb4>)
 8000f22:	689b      	ldr	r3, [r3, #8]
 8000f24:	4a10      	ldr	r2, [pc, #64]	; (8000f68 <adc_init+0xb4>)
 8000f26:	f023 0302 	bic.w	r3, r3, #2
 8000f2a:	6093      	str	r3, [r2, #8]
	ADC1->CR2 &= ~(1 << 11); 									// Right alignment of data bits bit12....bit0
 8000f2c:	4b0e      	ldr	r3, [pc, #56]	; (8000f68 <adc_init+0xb4>)
 8000f2e:	689b      	ldr	r3, [r3, #8]
 8000f30:	4a0d      	ldr	r2, [pc, #52]	; (8000f68 <adc_init+0xb4>)
 8000f32:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000f36:	6093      	str	r3, [r2, #8]
	ADC1->SMPR2 |= (2 << 0); 									// Sampling rate 40 cycles. 21MHz bus clock for ADC. 1/84MHz = 12nS. 40*12ns=0.47us
 8000f38:	4b0b      	ldr	r3, [pc, #44]	; (8000f68 <adc_init+0xb4>)
 8000f3a:	691b      	ldr	r3, [r3, #16]
 8000f3c:	4a0a      	ldr	r2, [pc, #40]	; (8000f68 <adc_init+0xb4>)
 8000f3e:	f043 0302 	orr.w	r3, r3, #2
 8000f42:	6113      	str	r3, [r2, #16]
	ADC1->CR2 |= (1 << 0); 										// Switch on ADC1
 8000f44:	4b08      	ldr	r3, [pc, #32]	; (8000f68 <adc_init+0xb4>)
 8000f46:	689b      	ldr	r3, [r3, #8]
 8000f48:	4a07      	ldr	r2, [pc, #28]	; (8000f68 <adc_init+0xb4>)
 8000f4a:	f043 0301 	orr.w	r3, r3, #1
 8000f4e:	6093      	str	r3, [r2, #8]
}
 8000f50:	bf00      	nop
 8000f52:	46bd      	mov	sp, r7
 8000f54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f58:	4770      	bx	lr
 8000f5a:	bf00      	nop
 8000f5c:	40023800 	.word	0x40023800
 8000f60:	40020800 	.word	0x40020800
 8000f64:	40012300 	.word	0x40012300
 8000f68:	40012000 	.word	0x40012000

08000f6c <set_sysclk_to_168>:

/******************************************/
/***			CLOCK INIT				***/
/******************************************/
void set_sysclk_to_168(void)
{
 8000f6c:	b480      	push	{r7}
 8000f6e:	af00      	add	r7, sp, #0
	/* FPU settings, can be enabled from project makefile */
	#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
	SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000f70:	4b45      	ldr	r3, [pc, #276]	; (8001088 <set_sysclk_to_168+0x11c>)
 8000f72:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000f76:	4a44      	ldr	r2, [pc, #272]	; (8001088 <set_sysclk_to_168+0x11c>)
 8000f78:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000f7c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
	#endif

	/* Reset the RCC clock configuration to the default reset state */
	/* Set HSION bit */
	RCC->CR |= (1U << 0);
 8000f80:	4b42      	ldr	r3, [pc, #264]	; (800108c <set_sysclk_to_168+0x120>)
 8000f82:	681b      	ldr	r3, [r3, #0]
 8000f84:	4a41      	ldr	r2, [pc, #260]	; (800108c <set_sysclk_to_168+0x120>)
 8000f86:	f043 0301 	orr.w	r3, r3, #1
 8000f8a:	6013      	str	r3, [r2, #0]

	RCC->CFGR = 0x00000000;										/* Reset CFGR register */
 8000f8c:	4b3f      	ldr	r3, [pc, #252]	; (800108c <set_sysclk_to_168+0x120>)
 8000f8e:	2200      	movs	r2, #0
 8000f90:	609a      	str	r2, [r3, #8]
	RCC->CR &= ~((1U << 16) | (1U << 19) | (1U << 24));			/* Reset HSEON (16), CSSON (19) and PLLON (24) bits */
 8000f92:	4b3e      	ldr	r3, [pc, #248]	; (800108c <set_sysclk_to_168+0x120>)
 8000f94:	681b      	ldr	r3, [r3, #0]
 8000f96:	4a3d      	ldr	r2, [pc, #244]	; (800108c <set_sysclk_to_168+0x120>)
 8000f98:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8000f9c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000fa0:	6013      	str	r3, [r2, #0]
	RCC->PLLCFGR = 0x24003010UL;								/* Reset PLLCFGR register to reset value */
 8000fa2:	4b3a      	ldr	r3, [pc, #232]	; (800108c <set_sysclk_to_168+0x120>)
 8000fa4:	4a3a      	ldr	r2, [pc, #232]	; (8001090 <set_sysclk_to_168+0x124>)
 8000fa6:	605a      	str	r2, [r3, #4]
	RCC->CR &= ~(1U << 18);										/* Reset HSEBYP bit */
 8000fa8:	4b38      	ldr	r3, [pc, #224]	; (800108c <set_sysclk_to_168+0x120>)
 8000faa:	681b      	ldr	r3, [r3, #0]
 8000fac:	4a37      	ldr	r2, [pc, #220]	; (800108c <set_sysclk_to_168+0x120>)
 8000fae:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8000fb2:	6013      	str	r3, [r2, #0]
	RCC->CIR = 0x00000000UL;									/* Disable all clock interrupts */
 8000fb4:	4b35      	ldr	r3, [pc, #212]	; (800108c <set_sysclk_to_168+0x120>)
 8000fb6:	2200      	movs	r2, #0
 8000fb8:	60da      	str	r2, [r3, #12]
	CoreDebug->DEMCR |= CoreDebug_DEMCR_TRCENA_Msk;
 8000fba:	4b36      	ldr	r3, [pc, #216]	; (8001094 <set_sysclk_to_168+0x128>)
 8000fbc:	68db      	ldr	r3, [r3, #12]
 8000fbe:	4a35      	ldr	r2, [pc, #212]	; (8001094 <set_sysclk_to_168+0x128>)
 8000fc0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000fc4:	60d3      	str	r3, [r2, #12]
	DWT->CYCCNT = 0;
 8000fc6:	4b34      	ldr	r3, [pc, #208]	; (8001098 <set_sysclk_to_168+0x12c>)
 8000fc8:	2200      	movs	r2, #0
 8000fca:	605a      	str	r2, [r3, #4]
	DWT->CTRL |= DWT_CTRL_CYCCNTENA_Msk;
 8000fcc:	4b32      	ldr	r3, [pc, #200]	; (8001098 <set_sysclk_to_168+0x12c>)
 8000fce:	681b      	ldr	r3, [r3, #0]
 8000fd0:	4a31      	ldr	r2, [pc, #196]	; (8001098 <set_sysclk_to_168+0x12c>)
 8000fd2:	f043 0301 	orr.w	r3, r3, #1
 8000fd6:	6013      	str	r3, [r2, #0]
	RCC->CR |= (1U << 16);										/* Enable HSE (CR: bit 16) */
 8000fd8:	4b2c      	ldr	r3, [pc, #176]	; (800108c <set_sysclk_to_168+0x120>)
 8000fda:	681b      	ldr	r3, [r3, #0]
 8000fdc:	4a2b      	ldr	r2, [pc, #172]	; (800108c <set_sysclk_to_168+0x120>)
 8000fde:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000fe2:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR & (1 << 17)));								/* Wait till HSE is ready (CR: bit 17) */
 8000fe4:	bf00      	nop
 8000fe6:	4b29      	ldr	r3, [pc, #164]	; (800108c <set_sysclk_to_168+0x120>)
 8000fe8:	681b      	ldr	r3, [r3, #0]
 8000fea:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000fee:	2b00      	cmp	r3, #0
 8000ff0:	d0f9      	beq.n	8000fe6 <set_sysclk_to_168+0x7a>
	RCC->APB1ENR |= (1 << 28);									/* Enable power interface clock (APB1ENR:bit 28) */
 8000ff2:	4b26      	ldr	r3, [pc, #152]	; (800108c <set_sysclk_to_168+0x120>)
 8000ff4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000ff6:	4a25      	ldr	r2, [pc, #148]	; (800108c <set_sysclk_to_168+0x120>)
 8000ff8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000ffc:	6413      	str	r3, [r2, #64]	; 0x40

	/* set voltage scale to 1 for max frequency (PWR_CR:bit 14)
	 * (0b0) scale 2 for fCLK <= 144 Mhz
	 * (0b1) scale 1 for 144 Mhz < fCLK <= 168 Mhz
	 */
	PWR->CR |= (1 << 14);
 8000ffe:	4b27      	ldr	r3, [pc, #156]	; (800109c <set_sysclk_to_168+0x130>)
 8001000:	681b      	ldr	r3, [r3, #0]
 8001002:	4a26      	ldr	r2, [pc, #152]	; (800109c <set_sysclk_to_168+0x130>)
 8001004:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001008:	6013      	str	r3, [r2, #0]
	RCC->CFGR |= (0 << 4);										/* set AHB prescaler to /1 (CFGR:bits 7:4) */
 800100a:	4b20      	ldr	r3, [pc, #128]	; (800108c <set_sysclk_to_168+0x120>)
 800100c:	4a1f      	ldr	r2, [pc, #124]	; (800108c <set_sysclk_to_168+0x120>)
 800100e:	689b      	ldr	r3, [r3, #8]
 8001010:	6093      	str	r3, [r2, #8]
	RCC->CFGR |= (5 << 10);										/* set APB low speed prescaler to /4 (APB1) (CFGR:bits 12:10) */
 8001012:	4b1e      	ldr	r3, [pc, #120]	; (800108c <set_sysclk_to_168+0x120>)
 8001014:	689b      	ldr	r3, [r3, #8]
 8001016:	4a1d      	ldr	r2, [pc, #116]	; (800108c <set_sysclk_to_168+0x120>)
 8001018:	f443 53a0 	orr.w	r3, r3, #5120	; 0x1400
 800101c:	6093      	str	r3, [r2, #8]
	RCC->CFGR |= (4 << 13);										/* set APB high speed prescaler to /2 (APB2) (CFGR:bits 15:13) */
 800101e:	4b1b      	ldr	r3, [pc, #108]	; (800108c <set_sysclk_to_168+0x120>)
 8001020:	689b      	ldr	r3, [r3, #8]
 8001022:	4a1a      	ldr	r2, [pc, #104]	; (800108c <set_sysclk_to_168+0x120>)
 8001024:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001028:	6093      	str	r3, [r2, #8]

	/* Set M, N, P and Q PLL dividers
	 * PLLCFGR: bits 5:0 (M), 14:6 (N), 17:16 (P), 27:24 (Q)
	 * Set PLL source to HSE, PLLCFGR: bit 22, 1:HSE, 0:HSI
	 */
	RCC->PLLCFGR = 8 | (336 << 6) | (((2 >> 1) -1) << 16) |
 800102a:	4b18      	ldr	r3, [pc, #96]	; (800108c <set_sysclk_to_168+0x120>)
 800102c:	4a1c      	ldr	r2, [pc, #112]	; (80010a0 <set_sysclk_to_168+0x134>)
 800102e:	605a      	str	r2, [r3, #4]
	               (7 << 24) | (1 << 22);
	RCC->CR |= (1 << 24);										/* Enable the main PLL (CR: bit 24) */
 8001030:	4b16      	ldr	r3, [pc, #88]	; (800108c <set_sysclk_to_168+0x120>)
 8001032:	681b      	ldr	r3, [r3, #0]
 8001034:	4a15      	ldr	r2, [pc, #84]	; (800108c <set_sysclk_to_168+0x120>)
 8001036:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800103a:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR & (1 << 25)));								/* Wait till the main PLL is ready (CR: bit 25) */
 800103c:	bf00      	nop
 800103e:	4b13      	ldr	r3, [pc, #76]	; (800108c <set_sysclk_to_168+0x120>)
 8001040:	681b      	ldr	r3, [r3, #0]
 8001042:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001046:	2b00      	cmp	r3, #0
 8001048:	d0f9      	beq.n	800103e <set_sysclk_to_168+0xd2>
	 * instruction cache enable (ACR:bit 9)
	 * data cache enable (ACR:bit 10)
	 * set latency to 5 wait states (ARC:bits 2:0)
	 *   see Table 10 on page 80 in RM0090
	 */
	FLASH->ACR = (1 << 8) | (1 << 9) | (1 << 10 ) | (5 << 0);
 800104a:	4b16      	ldr	r3, [pc, #88]	; (80010a4 <set_sysclk_to_168+0x138>)
 800104c:	f240 7205 	movw	r2, #1797	; 0x705
 8001050:	601a      	str	r2, [r3, #0]
	/* Select the main PLL as system clock source, (CFGR:bits 1:0)
	 * 0b00 - HSI
	 * 0b01 - HSE
	 * 0b10 - PLL
	 */
	RCC->CFGR &= ~(3U << 0);
 8001052:	4b0e      	ldr	r3, [pc, #56]	; (800108c <set_sysclk_to_168+0x120>)
 8001054:	689b      	ldr	r3, [r3, #8]
 8001056:	4a0d      	ldr	r2, [pc, #52]	; (800108c <set_sysclk_to_168+0x120>)
 8001058:	f023 0303 	bic.w	r3, r3, #3
 800105c:	6093      	str	r3, [r2, #8]
	RCC->CFGR |= (2 << 0);
 800105e:	4b0b      	ldr	r3, [pc, #44]	; (800108c <set_sysclk_to_168+0x120>)
 8001060:	689b      	ldr	r3, [r3, #8]
 8001062:	4a0a      	ldr	r2, [pc, #40]	; (800108c <set_sysclk_to_168+0x120>)
 8001064:	f043 0302 	orr.w	r3, r3, #2
 8001068:	6093      	str	r3, [r2, #8]
	while (!(RCC->CFGR & (2U << 2)));							/* Wait till the main PLL is used as system clock source (CFGR:bits 3:2) */
 800106a:	bf00      	nop
 800106c:	4b07      	ldr	r3, [pc, #28]	; (800108c <set_sysclk_to_168+0x120>)
 800106e:	689b      	ldr	r3, [r3, #8]
 8001070:	f003 0308 	and.w	r3, r3, #8
 8001074:	2b00      	cmp	r3, #0
 8001076:	d0f9      	beq.n	800106c <set_sysclk_to_168+0x100>
	SystemCoreClock = 168000000;								// update SystemCoreClock variable
 8001078:	4b0b      	ldr	r3, [pc, #44]	; (80010a8 <set_sysclk_to_168+0x13c>)
 800107a:	4a0c      	ldr	r2, [pc, #48]	; (80010ac <set_sysclk_to_168+0x140>)
 800107c:	601a      	str	r2, [r3, #0]
}
 800107e:	bf00      	nop
 8001080:	46bd      	mov	sp, r7
 8001082:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001086:	4770      	bx	lr
 8001088:	e000ed00 	.word	0xe000ed00
 800108c:	40023800 	.word	0x40023800
 8001090:	24003010 	.word	0x24003010
 8001094:	e000edf0 	.word	0xe000edf0
 8001098:	e0001000 	.word	0xe0001000
 800109c:	40007000 	.word	0x40007000
 80010a0:	07405408 	.word	0x07405408
 80010a4:	40023c00 	.word	0x40023c00
 80010a8:	2000000c 	.word	0x2000000c
 80010ac:	0a037a00 	.word	0x0a037a00

080010b0 <TIM1_UP_TIM10_IRQHandler>:

/******************************************/
/***			TIMER1 INTERRUPT		***/
/******************************************/
void TIM1_UP_TIM10_IRQHandler(void)
{
 80010b0:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 80010b4:	af00      	add	r7, sp, #0
	TIM1->EGR|=TIM_EGR_COMG;
 80010b6:	4bb4      	ldr	r3, [pc, #720]	; (8001388 <TIM1_UP_TIM10_IRQHandler+0x2d8>)
 80010b8:	695b      	ldr	r3, [r3, #20]
 80010ba:	4ab3      	ldr	r2, [pc, #716]	; (8001388 <TIM1_UP_TIM10_IRQHandler+0x2d8>)
 80010bc:	f043 0320 	orr.w	r3, r3, #32
 80010c0:	6153      	str	r3, [r2, #20]
	ADC1->CR2 |= (1<<30);  										// start the ADC conversion
 80010c2:	4bb2      	ldr	r3, [pc, #712]	; (800138c <TIM1_UP_TIM10_IRQHandler+0x2dc>)
 80010c4:	689b      	ldr	r3, [r3, #8]
 80010c6:	4ab1      	ldr	r2, [pc, #708]	; (800138c <TIM1_UP_TIM10_IRQHandler+0x2dc>)
 80010c8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80010cc:	6093      	str	r3, [r2, #8]
	sector=(theta)/60+1;										// gets Space Vector Sector data from current angle
 80010ce:	4bb0      	ldr	r3, [pc, #704]	; (8001390 <TIM1_UP_TIM10_IRQHandler+0x2e0>)
 80010d0:	ed93 7a00 	vldr	s14, [r3]
 80010d4:	eddf 6aaf 	vldr	s13, [pc, #700]	; 8001394 <TIM1_UP_TIM10_IRQHandler+0x2e4>
 80010d8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80010dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80010e0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80010e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80010e8:	ee17 2a90 	vmov	r2, s15
 80010ec:	4baa      	ldr	r3, [pc, #680]	; (8001398 <TIM1_UP_TIM10_IRQHandler+0x2e8>)
 80010ee:	601a      	str	r2, [r3, #0]
	//TIM1->SR &=~(TIM_SR_UIF);									// Lower Interrupt flag for next interrupts
	T1=TS*M*sin((PI/3)*(sector) - (theta*PI/180));				// Calculates T1 dwell time
 80010f0:	4baa      	ldr	r3, [pc, #680]	; (800139c <TIM1_UP_TIM10_IRQHandler+0x2ec>)
 80010f2:	681b      	ldr	r3, [r3, #0]
 80010f4:	ee07 3a90 	vmov	s15, r3
 80010f8:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80010fc:	4ba8      	ldr	r3, [pc, #672]	; (80013a0 <TIM1_UP_TIM10_IRQHandler+0x2f0>)
 80010fe:	edd3 7a00 	vldr	s15, [r3]
 8001102:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001106:	ee17 0a90 	vmov	r0, s15
 800110a:	f7ff f9c1 	bl	8000490 <__aeabi_f2d>
 800110e:	4604      	mov	r4, r0
 8001110:	460d      	mov	r5, r1
 8001112:	4ba1      	ldr	r3, [pc, #644]	; (8001398 <TIM1_UP_TIM10_IRQHandler+0x2e8>)
 8001114:	681b      	ldr	r3, [r3, #0]
 8001116:	4618      	mov	r0, r3
 8001118:	f7ff f9a8 	bl	800046c <__aeabi_i2d>
 800111c:	a394      	add	r3, pc, #592	; (adr r3, 8001370 <TIM1_UP_TIM10_IRQHandler+0x2c0>)
 800111e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001122:	f7ff fa0d 	bl	8000540 <__aeabi_dmul>
 8001126:	4602      	mov	r2, r0
 8001128:	460b      	mov	r3, r1
 800112a:	4690      	mov	r8, r2
 800112c:	4699      	mov	r9, r3
 800112e:	4b98      	ldr	r3, [pc, #608]	; (8001390 <TIM1_UP_TIM10_IRQHandler+0x2e0>)
 8001130:	681b      	ldr	r3, [r3, #0]
 8001132:	4618      	mov	r0, r3
 8001134:	f7ff f9ac 	bl	8000490 <__aeabi_f2d>
 8001138:	a38f      	add	r3, pc, #572	; (adr r3, 8001378 <TIM1_UP_TIM10_IRQHandler+0x2c8>)
 800113a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800113e:	f7ff f9ff 	bl	8000540 <__aeabi_dmul>
 8001142:	4602      	mov	r2, r0
 8001144:	460b      	mov	r3, r1
 8001146:	4610      	mov	r0, r2
 8001148:	4619      	mov	r1, r3
 800114a:	f04f 0200 	mov.w	r2, #0
 800114e:	4b95      	ldr	r3, [pc, #596]	; (80013a4 <TIM1_UP_TIM10_IRQHandler+0x2f4>)
 8001150:	f7ff fb20 	bl	8000794 <__aeabi_ddiv>
 8001154:	4602      	mov	r2, r0
 8001156:	460b      	mov	r3, r1
 8001158:	4640      	mov	r0, r8
 800115a:	4649      	mov	r1, r9
 800115c:	f7ff f838 	bl	80001d0 <__aeabi_dsub>
 8001160:	4602      	mov	r2, r0
 8001162:	460b      	mov	r3, r1
 8001164:	ec43 2b17 	vmov	d7, r2, r3
 8001168:	eeb0 0a47 	vmov.f32	s0, s14
 800116c:	eef0 0a67 	vmov.f32	s1, s15
 8001170:	f000 fa86 	bl	8001680 <sin>
 8001174:	ec53 2b10 	vmov	r2, r3, d0
 8001178:	4620      	mov	r0, r4
 800117a:	4629      	mov	r1, r5
 800117c:	f7ff f9e0 	bl	8000540 <__aeabi_dmul>
 8001180:	4602      	mov	r2, r0
 8001182:	460b      	mov	r3, r1
 8001184:	4610      	mov	r0, r2
 8001186:	4619      	mov	r1, r3
 8001188:	f7ff fc9c 	bl	8000ac4 <__aeabi_d2uiz>
 800118c:	4603      	mov	r3, r0
 800118e:	4a86      	ldr	r2, [pc, #536]	; (80013a8 <TIM1_UP_TIM10_IRQHandler+0x2f8>)
 8001190:	6013      	str	r3, [r2, #0]
	T2=TS*M*sin((-PI/3)*(sector-1) +(theta*PI/180));			// Calculates T2 dwell time
 8001192:	4b82      	ldr	r3, [pc, #520]	; (800139c <TIM1_UP_TIM10_IRQHandler+0x2ec>)
 8001194:	681b      	ldr	r3, [r3, #0]
 8001196:	ee07 3a90 	vmov	s15, r3
 800119a:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 800119e:	4b80      	ldr	r3, [pc, #512]	; (80013a0 <TIM1_UP_TIM10_IRQHandler+0x2f0>)
 80011a0:	edd3 7a00 	vldr	s15, [r3]
 80011a4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80011a8:	ee17 0a90 	vmov	r0, s15
 80011ac:	f7ff f970 	bl	8000490 <__aeabi_f2d>
 80011b0:	4604      	mov	r4, r0
 80011b2:	460d      	mov	r5, r1
 80011b4:	4b78      	ldr	r3, [pc, #480]	; (8001398 <TIM1_UP_TIM10_IRQHandler+0x2e8>)
 80011b6:	681b      	ldr	r3, [r3, #0]
 80011b8:	3b01      	subs	r3, #1
 80011ba:	4618      	mov	r0, r3
 80011bc:	f7ff f956 	bl	800046c <__aeabi_i2d>
 80011c0:	a36f      	add	r3, pc, #444	; (adr r3, 8001380 <TIM1_UP_TIM10_IRQHandler+0x2d0>)
 80011c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011c6:	f7ff f9bb 	bl	8000540 <__aeabi_dmul>
 80011ca:	4602      	mov	r2, r0
 80011cc:	460b      	mov	r3, r1
 80011ce:	4690      	mov	r8, r2
 80011d0:	4699      	mov	r9, r3
 80011d2:	4b6f      	ldr	r3, [pc, #444]	; (8001390 <TIM1_UP_TIM10_IRQHandler+0x2e0>)
 80011d4:	681b      	ldr	r3, [r3, #0]
 80011d6:	4618      	mov	r0, r3
 80011d8:	f7ff f95a 	bl	8000490 <__aeabi_f2d>
 80011dc:	a366      	add	r3, pc, #408	; (adr r3, 8001378 <TIM1_UP_TIM10_IRQHandler+0x2c8>)
 80011de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011e2:	f7ff f9ad 	bl	8000540 <__aeabi_dmul>
 80011e6:	4602      	mov	r2, r0
 80011e8:	460b      	mov	r3, r1
 80011ea:	4610      	mov	r0, r2
 80011ec:	4619      	mov	r1, r3
 80011ee:	f04f 0200 	mov.w	r2, #0
 80011f2:	4b6c      	ldr	r3, [pc, #432]	; (80013a4 <TIM1_UP_TIM10_IRQHandler+0x2f4>)
 80011f4:	f7ff face 	bl	8000794 <__aeabi_ddiv>
 80011f8:	4602      	mov	r2, r0
 80011fa:	460b      	mov	r3, r1
 80011fc:	4640      	mov	r0, r8
 80011fe:	4649      	mov	r1, r9
 8001200:	f7fe ffe8 	bl	80001d4 <__adddf3>
 8001204:	4602      	mov	r2, r0
 8001206:	460b      	mov	r3, r1
 8001208:	ec43 2b17 	vmov	d7, r2, r3
 800120c:	eeb0 0a47 	vmov.f32	s0, s14
 8001210:	eef0 0a67 	vmov.f32	s1, s15
 8001214:	f000 fa34 	bl	8001680 <sin>
 8001218:	ec53 2b10 	vmov	r2, r3, d0
 800121c:	4620      	mov	r0, r4
 800121e:	4629      	mov	r1, r5
 8001220:	f7ff f98e 	bl	8000540 <__aeabi_dmul>
 8001224:	4602      	mov	r2, r0
 8001226:	460b      	mov	r3, r1
 8001228:	4610      	mov	r0, r2
 800122a:	4619      	mov	r1, r3
 800122c:	f7ff fc4a 	bl	8000ac4 <__aeabi_d2uiz>
 8001230:	4603      	mov	r3, r0
 8001232:	4a5e      	ldr	r2, [pc, #376]	; (80013ac <TIM1_UP_TIM10_IRQHandler+0x2fc>)
 8001234:	6013      	str	r3, [r2, #0]
	Tz=TS-T1-T2;												// Calculates Tzero dwell time
 8001236:	4b59      	ldr	r3, [pc, #356]	; (800139c <TIM1_UP_TIM10_IRQHandler+0x2ec>)
 8001238:	681a      	ldr	r2, [r3, #0]
 800123a:	4b5b      	ldr	r3, [pc, #364]	; (80013a8 <TIM1_UP_TIM10_IRQHandler+0x2f8>)
 800123c:	681b      	ldr	r3, [r3, #0]
 800123e:	1ad2      	subs	r2, r2, r3
 8001240:	4b5a      	ldr	r3, [pc, #360]	; (80013ac <TIM1_UP_TIM10_IRQHandler+0x2fc>)
 8001242:	681b      	ldr	r3, [r3, #0]
 8001244:	1ad3      	subs	r3, r2, r3
 8001246:	4a5a      	ldr	r2, [pc, #360]	; (80013b0 <TIM1_UP_TIM10_IRQHandler+0x300>)
 8001248:	6013      	str	r3, [r2, #0]
	switch (sector)
 800124a:	4b53      	ldr	r3, [pc, #332]	; (8001398 <TIM1_UP_TIM10_IRQHandler+0x2e8>)
 800124c:	681b      	ldr	r3, [r3, #0]
 800124e:	3b01      	subs	r3, #1
 8001250:	2b05      	cmp	r3, #5
 8001252:	f200 80c8 	bhi.w	80013e6 <TIM1_UP_TIM10_IRQHandler+0x336>
 8001256:	a201      	add	r2, pc, #4	; (adr r2, 800125c <TIM1_UP_TIM10_IRQHandler+0x1ac>)
 8001258:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800125c:	08001275 	.word	0x08001275
 8001260:	080012a7 	.word	0x080012a7
 8001264:	080012d9 	.word	0x080012d9
 8001268:	0800130b 	.word	0x0800130b
 800126c:	0800133d 	.word	0x0800133d
 8001270:	080013b5 	.word	0x080013b5
	{
	case 1:														// Sector 1 outputs for all phases
	TIM1->CCR1=(Tz/2 + T1 +T2);
 8001274:	4b4e      	ldr	r3, [pc, #312]	; (80013b0 <TIM1_UP_TIM10_IRQHandler+0x300>)
 8001276:	681b      	ldr	r3, [r3, #0]
 8001278:	085a      	lsrs	r2, r3, #1
 800127a:	4b4b      	ldr	r3, [pc, #300]	; (80013a8 <TIM1_UP_TIM10_IRQHandler+0x2f8>)
 800127c:	681b      	ldr	r3, [r3, #0]
 800127e:	441a      	add	r2, r3
 8001280:	4b4a      	ldr	r3, [pc, #296]	; (80013ac <TIM1_UP_TIM10_IRQHandler+0x2fc>)
 8001282:	681b      	ldr	r3, [r3, #0]
 8001284:	4940      	ldr	r1, [pc, #256]	; (8001388 <TIM1_UP_TIM10_IRQHandler+0x2d8>)
 8001286:	4413      	add	r3, r2
 8001288:	634b      	str	r3, [r1, #52]	; 0x34
	TIM1->CCR2=(Tz/2 + T2);
 800128a:	4b49      	ldr	r3, [pc, #292]	; (80013b0 <TIM1_UP_TIM10_IRQHandler+0x300>)
 800128c:	681b      	ldr	r3, [r3, #0]
 800128e:	085a      	lsrs	r2, r3, #1
 8001290:	4b46      	ldr	r3, [pc, #280]	; (80013ac <TIM1_UP_TIM10_IRQHandler+0x2fc>)
 8001292:	681b      	ldr	r3, [r3, #0]
 8001294:	493c      	ldr	r1, [pc, #240]	; (8001388 <TIM1_UP_TIM10_IRQHandler+0x2d8>)
 8001296:	4413      	add	r3, r2
 8001298:	638b      	str	r3, [r1, #56]	; 0x38
	TIM1->CCR3=(Tz/2);
 800129a:	4b45      	ldr	r3, [pc, #276]	; (80013b0 <TIM1_UP_TIM10_IRQHandler+0x300>)
 800129c:	681b      	ldr	r3, [r3, #0]
 800129e:	4a3a      	ldr	r2, [pc, #232]	; (8001388 <TIM1_UP_TIM10_IRQHandler+0x2d8>)
 80012a0:	085b      	lsrs	r3, r3, #1
 80012a2:	63d3      	str	r3, [r2, #60]	; 0x3c
	break;
 80012a4:	e0a0      	b.n	80013e8 <TIM1_UP_TIM10_IRQHandler+0x338>

	case 2:														// Sector 2 outputs for all phases
	TIM1->CCR1=(Tz/2 +T1);
 80012a6:	4b42      	ldr	r3, [pc, #264]	; (80013b0 <TIM1_UP_TIM10_IRQHandler+0x300>)
 80012a8:	681b      	ldr	r3, [r3, #0]
 80012aa:	085a      	lsrs	r2, r3, #1
 80012ac:	4b3e      	ldr	r3, [pc, #248]	; (80013a8 <TIM1_UP_TIM10_IRQHandler+0x2f8>)
 80012ae:	681b      	ldr	r3, [r3, #0]
 80012b0:	4935      	ldr	r1, [pc, #212]	; (8001388 <TIM1_UP_TIM10_IRQHandler+0x2d8>)
 80012b2:	4413      	add	r3, r2
 80012b4:	634b      	str	r3, [r1, #52]	; 0x34
	TIM1->CCR2=(Tz/2 + T1 +T2);
 80012b6:	4b3e      	ldr	r3, [pc, #248]	; (80013b0 <TIM1_UP_TIM10_IRQHandler+0x300>)
 80012b8:	681b      	ldr	r3, [r3, #0]
 80012ba:	085a      	lsrs	r2, r3, #1
 80012bc:	4b3a      	ldr	r3, [pc, #232]	; (80013a8 <TIM1_UP_TIM10_IRQHandler+0x2f8>)
 80012be:	681b      	ldr	r3, [r3, #0]
 80012c0:	441a      	add	r2, r3
 80012c2:	4b3a      	ldr	r3, [pc, #232]	; (80013ac <TIM1_UP_TIM10_IRQHandler+0x2fc>)
 80012c4:	681b      	ldr	r3, [r3, #0]
 80012c6:	4930      	ldr	r1, [pc, #192]	; (8001388 <TIM1_UP_TIM10_IRQHandler+0x2d8>)
 80012c8:	4413      	add	r3, r2
 80012ca:	638b      	str	r3, [r1, #56]	; 0x38
	TIM1->CCR3=(Tz/2);
 80012cc:	4b38      	ldr	r3, [pc, #224]	; (80013b0 <TIM1_UP_TIM10_IRQHandler+0x300>)
 80012ce:	681b      	ldr	r3, [r3, #0]
 80012d0:	4a2d      	ldr	r2, [pc, #180]	; (8001388 <TIM1_UP_TIM10_IRQHandler+0x2d8>)
 80012d2:	085b      	lsrs	r3, r3, #1
 80012d4:	63d3      	str	r3, [r2, #60]	; 0x3c
	break;
 80012d6:	e087      	b.n	80013e8 <TIM1_UP_TIM10_IRQHandler+0x338>

	case 3:														// Sector 3 outputs for all phases
	TIM1->CCR1=(Tz/2);
 80012d8:	4b35      	ldr	r3, [pc, #212]	; (80013b0 <TIM1_UP_TIM10_IRQHandler+0x300>)
 80012da:	681b      	ldr	r3, [r3, #0]
 80012dc:	4a2a      	ldr	r2, [pc, #168]	; (8001388 <TIM1_UP_TIM10_IRQHandler+0x2d8>)
 80012de:	085b      	lsrs	r3, r3, #1
 80012e0:	6353      	str	r3, [r2, #52]	; 0x34
	TIM1->CCR2=(Tz/2 + T1 +T2);
 80012e2:	4b33      	ldr	r3, [pc, #204]	; (80013b0 <TIM1_UP_TIM10_IRQHandler+0x300>)
 80012e4:	681b      	ldr	r3, [r3, #0]
 80012e6:	085a      	lsrs	r2, r3, #1
 80012e8:	4b2f      	ldr	r3, [pc, #188]	; (80013a8 <TIM1_UP_TIM10_IRQHandler+0x2f8>)
 80012ea:	681b      	ldr	r3, [r3, #0]
 80012ec:	441a      	add	r2, r3
 80012ee:	4b2f      	ldr	r3, [pc, #188]	; (80013ac <TIM1_UP_TIM10_IRQHandler+0x2fc>)
 80012f0:	681b      	ldr	r3, [r3, #0]
 80012f2:	4925      	ldr	r1, [pc, #148]	; (8001388 <TIM1_UP_TIM10_IRQHandler+0x2d8>)
 80012f4:	4413      	add	r3, r2
 80012f6:	638b      	str	r3, [r1, #56]	; 0x38
	TIM1->CCR3=(Tz/2 + T2);
 80012f8:	4b2d      	ldr	r3, [pc, #180]	; (80013b0 <TIM1_UP_TIM10_IRQHandler+0x300>)
 80012fa:	681b      	ldr	r3, [r3, #0]
 80012fc:	085a      	lsrs	r2, r3, #1
 80012fe:	4b2b      	ldr	r3, [pc, #172]	; (80013ac <TIM1_UP_TIM10_IRQHandler+0x2fc>)
 8001300:	681b      	ldr	r3, [r3, #0]
 8001302:	4921      	ldr	r1, [pc, #132]	; (8001388 <TIM1_UP_TIM10_IRQHandler+0x2d8>)
 8001304:	4413      	add	r3, r2
 8001306:	63cb      	str	r3, [r1, #60]	; 0x3c
	break;
 8001308:	e06e      	b.n	80013e8 <TIM1_UP_TIM10_IRQHandler+0x338>

	case 4:														// Sector 4 outputs for all phases
	TIM1->CCR1=(Tz/2);
 800130a:	4b29      	ldr	r3, [pc, #164]	; (80013b0 <TIM1_UP_TIM10_IRQHandler+0x300>)
 800130c:	681b      	ldr	r3, [r3, #0]
 800130e:	4a1e      	ldr	r2, [pc, #120]	; (8001388 <TIM1_UP_TIM10_IRQHandler+0x2d8>)
 8001310:	085b      	lsrs	r3, r3, #1
 8001312:	6353      	str	r3, [r2, #52]	; 0x34
	TIM1->CCR2=(Tz/2 +T1);
 8001314:	4b26      	ldr	r3, [pc, #152]	; (80013b0 <TIM1_UP_TIM10_IRQHandler+0x300>)
 8001316:	681b      	ldr	r3, [r3, #0]
 8001318:	085a      	lsrs	r2, r3, #1
 800131a:	4b23      	ldr	r3, [pc, #140]	; (80013a8 <TIM1_UP_TIM10_IRQHandler+0x2f8>)
 800131c:	681b      	ldr	r3, [r3, #0]
 800131e:	491a      	ldr	r1, [pc, #104]	; (8001388 <TIM1_UP_TIM10_IRQHandler+0x2d8>)
 8001320:	4413      	add	r3, r2
 8001322:	638b      	str	r3, [r1, #56]	; 0x38
	TIM1->CCR3=(Tz/2 + T1 +T2);
 8001324:	4b22      	ldr	r3, [pc, #136]	; (80013b0 <TIM1_UP_TIM10_IRQHandler+0x300>)
 8001326:	681b      	ldr	r3, [r3, #0]
 8001328:	085a      	lsrs	r2, r3, #1
 800132a:	4b1f      	ldr	r3, [pc, #124]	; (80013a8 <TIM1_UP_TIM10_IRQHandler+0x2f8>)
 800132c:	681b      	ldr	r3, [r3, #0]
 800132e:	441a      	add	r2, r3
 8001330:	4b1e      	ldr	r3, [pc, #120]	; (80013ac <TIM1_UP_TIM10_IRQHandler+0x2fc>)
 8001332:	681b      	ldr	r3, [r3, #0]
 8001334:	4914      	ldr	r1, [pc, #80]	; (8001388 <TIM1_UP_TIM10_IRQHandler+0x2d8>)
 8001336:	4413      	add	r3, r2
 8001338:	63cb      	str	r3, [r1, #60]	; 0x3c
	break;
 800133a:	e055      	b.n	80013e8 <TIM1_UP_TIM10_IRQHandler+0x338>

	case 5:														// Sector 5 outputs for all phases
	TIM1->CCR1=(Tz/2 + T2);
 800133c:	4b1c      	ldr	r3, [pc, #112]	; (80013b0 <TIM1_UP_TIM10_IRQHandler+0x300>)
 800133e:	681b      	ldr	r3, [r3, #0]
 8001340:	085a      	lsrs	r2, r3, #1
 8001342:	4b1a      	ldr	r3, [pc, #104]	; (80013ac <TIM1_UP_TIM10_IRQHandler+0x2fc>)
 8001344:	681b      	ldr	r3, [r3, #0]
 8001346:	4910      	ldr	r1, [pc, #64]	; (8001388 <TIM1_UP_TIM10_IRQHandler+0x2d8>)
 8001348:	4413      	add	r3, r2
 800134a:	634b      	str	r3, [r1, #52]	; 0x34
	TIM1->CCR2=(Tz/2);
 800134c:	4b18      	ldr	r3, [pc, #96]	; (80013b0 <TIM1_UP_TIM10_IRQHandler+0x300>)
 800134e:	681b      	ldr	r3, [r3, #0]
 8001350:	4a0d      	ldr	r2, [pc, #52]	; (8001388 <TIM1_UP_TIM10_IRQHandler+0x2d8>)
 8001352:	085b      	lsrs	r3, r3, #1
 8001354:	6393      	str	r3, [r2, #56]	; 0x38
	TIM1->CCR3=(Tz/2 + T1 +T2);
 8001356:	4b16      	ldr	r3, [pc, #88]	; (80013b0 <TIM1_UP_TIM10_IRQHandler+0x300>)
 8001358:	681b      	ldr	r3, [r3, #0]
 800135a:	085a      	lsrs	r2, r3, #1
 800135c:	4b12      	ldr	r3, [pc, #72]	; (80013a8 <TIM1_UP_TIM10_IRQHandler+0x2f8>)
 800135e:	681b      	ldr	r3, [r3, #0]
 8001360:	441a      	add	r2, r3
 8001362:	4b12      	ldr	r3, [pc, #72]	; (80013ac <TIM1_UP_TIM10_IRQHandler+0x2fc>)
 8001364:	681b      	ldr	r3, [r3, #0]
 8001366:	4908      	ldr	r1, [pc, #32]	; (8001388 <TIM1_UP_TIM10_IRQHandler+0x2d8>)
 8001368:	4413      	add	r3, r2
 800136a:	63cb      	str	r3, [r1, #60]	; 0x3c
	break;
 800136c:	e03c      	b.n	80013e8 <TIM1_UP_TIM10_IRQHandler+0x338>
 800136e:	bf00      	nop
 8001370:	fdb20051 	.word	0xfdb20051
 8001374:	3ff0c151 	.word	0x3ff0c151
 8001378:	fc8b007a 	.word	0xfc8b007a
 800137c:	400921fa 	.word	0x400921fa
 8001380:	fdb20051 	.word	0xfdb20051
 8001384:	bff0c151 	.word	0xbff0c151
 8001388:	40010000 	.word	0x40010000
 800138c:	40012000 	.word	0x40012000
 8001390:	20000030 	.word	0x20000030
 8001394:	42700000 	.word	0x42700000
 8001398:	20000008 	.word	0x20000008
 800139c:	20000000 	.word	0x20000000
 80013a0:	20000004 	.word	0x20000004
 80013a4:	40668000 	.word	0x40668000
 80013a8:	20000040 	.word	0x20000040
 80013ac:	20000038 	.word	0x20000038
 80013b0:	2000003c 	.word	0x2000003c

	case 6:														// Sector 6 outputs for all phases
	TIM1->CCR1=(Tz/2 + T1 +T2);
 80013b4:	4b3e      	ldr	r3, [pc, #248]	; (80014b0 <TIM1_UP_TIM10_IRQHandler+0x400>)
 80013b6:	681b      	ldr	r3, [r3, #0]
 80013b8:	085a      	lsrs	r2, r3, #1
 80013ba:	4b3e      	ldr	r3, [pc, #248]	; (80014b4 <TIM1_UP_TIM10_IRQHandler+0x404>)
 80013bc:	681b      	ldr	r3, [r3, #0]
 80013be:	441a      	add	r2, r3
 80013c0:	4b3d      	ldr	r3, [pc, #244]	; (80014b8 <TIM1_UP_TIM10_IRQHandler+0x408>)
 80013c2:	681b      	ldr	r3, [r3, #0]
 80013c4:	493d      	ldr	r1, [pc, #244]	; (80014bc <TIM1_UP_TIM10_IRQHandler+0x40c>)
 80013c6:	4413      	add	r3, r2
 80013c8:	634b      	str	r3, [r1, #52]	; 0x34
	TIM1->CCR2=(Tz/2);
 80013ca:	4b39      	ldr	r3, [pc, #228]	; (80014b0 <TIM1_UP_TIM10_IRQHandler+0x400>)
 80013cc:	681b      	ldr	r3, [r3, #0]
 80013ce:	4a3b      	ldr	r2, [pc, #236]	; (80014bc <TIM1_UP_TIM10_IRQHandler+0x40c>)
 80013d0:	085b      	lsrs	r3, r3, #1
 80013d2:	6393      	str	r3, [r2, #56]	; 0x38
	TIM1->CCR3=(Tz/2 +T1);
 80013d4:	4b36      	ldr	r3, [pc, #216]	; (80014b0 <TIM1_UP_TIM10_IRQHandler+0x400>)
 80013d6:	681b      	ldr	r3, [r3, #0]
 80013d8:	085a      	lsrs	r2, r3, #1
 80013da:	4b36      	ldr	r3, [pc, #216]	; (80014b4 <TIM1_UP_TIM10_IRQHandler+0x404>)
 80013dc:	681b      	ldr	r3, [r3, #0]
 80013de:	4937      	ldr	r1, [pc, #220]	; (80014bc <TIM1_UP_TIM10_IRQHandler+0x40c>)
 80013e0:	4413      	add	r3, r2
 80013e2:	63cb      	str	r3, [r1, #60]	; 0x3c
	break;
 80013e4:	e000      	b.n	80013e8 <TIM1_UP_TIM10_IRQHandler+0x338>

	default:
	break;
 80013e6:	bf00      	nop
	}

	freq = (ADC1->DR)/50;  										// Write ADC Value to frequency variable and scale it to max 80Hz
 80013e8:	4b35      	ldr	r3, [pc, #212]	; (80014c0 <TIM1_UP_TIM10_IRQHandler+0x410>)
 80013ea:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80013ec:	4a35      	ldr	r2, [pc, #212]	; (80014c4 <TIM1_UP_TIM10_IRQHandler+0x414>)
 80013ee:	fba2 2303 	umull	r2, r3, r2, r3
 80013f2:	091b      	lsrs	r3, r3, #4
 80013f4:	461a      	mov	r2, r3
 80013f6:	4b34      	ldr	r3, [pc, #208]	; (80014c8 <TIM1_UP_TIM10_IRQHandler+0x418>)
 80013f8:	601a      	str	r2, [r3, #0]
	M=freq/50.0;												// V/f Control
 80013fa:	4b33      	ldr	r3, [pc, #204]	; (80014c8 <TIM1_UP_TIM10_IRQHandler+0x418>)
 80013fc:	681b      	ldr	r3, [r3, #0]
 80013fe:	4618      	mov	r0, r3
 8001400:	f7ff f834 	bl	800046c <__aeabi_i2d>
 8001404:	f04f 0200 	mov.w	r2, #0
 8001408:	4b30      	ldr	r3, [pc, #192]	; (80014cc <TIM1_UP_TIM10_IRQHandler+0x41c>)
 800140a:	f7ff f9c3 	bl	8000794 <__aeabi_ddiv>
 800140e:	4602      	mov	r2, r0
 8001410:	460b      	mov	r3, r1
 8001412:	4610      	mov	r0, r2
 8001414:	4619      	mov	r1, r3
 8001416:	f7ff fb75 	bl	8000b04 <__aeabi_d2f>
 800141a:	4603      	mov	r3, r0
 800141c:	4a2c      	ldr	r2, [pc, #176]	; (80014d0 <TIM1_UP_TIM10_IRQHandler+0x420>)
 800141e:	6013      	str	r3, [r2, #0]
	if(M>1) M=1;												// Field Weakening to prevent working on 6 Step PWM mode
 8001420:	4b2b      	ldr	r3, [pc, #172]	; (80014d0 <TIM1_UP_TIM10_IRQHandler+0x420>)
 8001422:	edd3 7a00 	vldr	s15, [r3]
 8001426:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800142a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800142e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001432:	dd03      	ble.n	800143c <TIM1_UP_TIM10_IRQHandler+0x38c>
 8001434:	4b26      	ldr	r3, [pc, #152]	; (80014d0 <TIM1_UP_TIM10_IRQHandler+0x420>)
 8001436:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800143a:	601a      	str	r2, [r3, #0]
	theta+=(freq*360/f);										// Calculating the next angle for given frequency rate (Open Loop Control)
 800143c:	4b25      	ldr	r3, [pc, #148]	; (80014d4 <TIM1_UP_TIM10_IRQHandler+0x424>)
 800143e:	681b      	ldr	r3, [r3, #0]
 8001440:	4618      	mov	r0, r3
 8001442:	f7ff f825 	bl	8000490 <__aeabi_f2d>
 8001446:	4604      	mov	r4, r0
 8001448:	460d      	mov	r5, r1
 800144a:	4b1f      	ldr	r3, [pc, #124]	; (80014c8 <TIM1_UP_TIM10_IRQHandler+0x418>)
 800144c:	681b      	ldr	r3, [r3, #0]
 800144e:	f44f 72b4 	mov.w	r2, #360	; 0x168
 8001452:	fb02 f303 	mul.w	r3, r2, r3
 8001456:	4618      	mov	r0, r3
 8001458:	f7ff f808 	bl	800046c <__aeabi_i2d>
 800145c:	a312      	add	r3, pc, #72	; (adr r3, 80014a8 <TIM1_UP_TIM10_IRQHandler+0x3f8>)
 800145e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001462:	f7ff f997 	bl	8000794 <__aeabi_ddiv>
 8001466:	4602      	mov	r2, r0
 8001468:	460b      	mov	r3, r1
 800146a:	4620      	mov	r0, r4
 800146c:	4629      	mov	r1, r5
 800146e:	f7fe feb1 	bl	80001d4 <__adddf3>
 8001472:	4602      	mov	r2, r0
 8001474:	460b      	mov	r3, r1
 8001476:	4610      	mov	r0, r2
 8001478:	4619      	mov	r1, r3
 800147a:	f7ff fb43 	bl	8000b04 <__aeabi_d2f>
 800147e:	4603      	mov	r3, r0
 8001480:	4a14      	ldr	r2, [pc, #80]	; (80014d4 <TIM1_UP_TIM10_IRQHandler+0x424>)
 8001482:	6013      	str	r3, [r2, #0]
	if(theta>=360) theta=0;										// Theta becomes zero every period
 8001484:	4b13      	ldr	r3, [pc, #76]	; (80014d4 <TIM1_UP_TIM10_IRQHandler+0x424>)
 8001486:	edd3 7a00 	vldr	s15, [r3]
 800148a:	ed9f 7a13 	vldr	s14, [pc, #76]	; 80014d8 <TIM1_UP_TIM10_IRQHandler+0x428>
 800148e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001492:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001496:	da00      	bge.n	800149a <TIM1_UP_TIM10_IRQHandler+0x3ea>
}
 8001498:	e003      	b.n	80014a2 <TIM1_UP_TIM10_IRQHandler+0x3f2>
	if(theta>=360) theta=0;										// Theta becomes zero every period
 800149a:	4b0e      	ldr	r3, [pc, #56]	; (80014d4 <TIM1_UP_TIM10_IRQHandler+0x424>)
 800149c:	f04f 0200 	mov.w	r2, #0
 80014a0:	601a      	str	r2, [r3, #0]
}
 80014a2:	bf00      	nop
 80014a4:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 80014a8:	00000000 	.word	0x00000000
 80014ac:	40d38800 	.word	0x40d38800
 80014b0:	2000003c 	.word	0x2000003c
 80014b4:	20000040 	.word	0x20000040
 80014b8:	20000038 	.word	0x20000038
 80014bc:	40010000 	.word	0x40010000
 80014c0:	40012000 	.word	0x40012000
 80014c4:	51eb851f 	.word	0x51eb851f
 80014c8:	20000034 	.word	0x20000034
 80014cc:	40490000 	.word	0x40490000
 80014d0:	20000004 	.word	0x20000004
 80014d4:	20000030 	.word	0x20000030
 80014d8:	43b40000 	.word	0x43b40000

080014dc <EXTI0_IRQHandler>:
/******************************************/
/***			EXTI0 INTERRUPT			***/
/******************************************/
void EXTI0_IRQHandler(void)
{
 80014dc:	b580      	push	{r7, lr}
 80014de:	af00      	add	r7, sp, #0
	GPIOD->ODR ^= (GPIO_ODR_OD15);								// Toggle Leds
 80014e0:	4b14      	ldr	r3, [pc, #80]	; (8001534 <EXTI0_IRQHandler+0x58>)
 80014e2:	695b      	ldr	r3, [r3, #20]
 80014e4:	4a13      	ldr	r2, [pc, #76]	; (8001534 <EXTI0_IRQHandler+0x58>)
 80014e6:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 80014ea:	6153      	str	r3, [r2, #20]
	GPIOD->ODR ^= (GPIO_ODR_OD14);								// Toggle Leds
 80014ec:	4b11      	ldr	r3, [pc, #68]	; (8001534 <EXTI0_IRQHandler+0x58>)
 80014ee:	695b      	ldr	r3, [r3, #20]
 80014f0:	4a10      	ldr	r2, [pc, #64]	; (8001534 <EXTI0_IRQHandler+0x58>)
 80014f2:	f483 4380 	eor.w	r3, r3, #16384	; 0x4000
 80014f6:	6153      	str	r3, [r2, #20]
	GPIOD->ODR ^= (GPIO_ODR_OD13);								// Toggle Leds
 80014f8:	4b0e      	ldr	r3, [pc, #56]	; (8001534 <EXTI0_IRQHandler+0x58>)
 80014fa:	695b      	ldr	r3, [r3, #20]
 80014fc:	4a0d      	ldr	r2, [pc, #52]	; (8001534 <EXTI0_IRQHandler+0x58>)
 80014fe:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 8001502:	6153      	str	r3, [r2, #20]
	GPIOD->ODR ^= (GPIO_ODR_OD12);								// Toggle Leds
 8001504:	4b0b      	ldr	r3, [pc, #44]	; (8001534 <EXTI0_IRQHandler+0x58>)
 8001506:	695b      	ldr	r3, [r3, #20]
 8001508:	4a0a      	ldr	r2, [pc, #40]	; (8001534 <EXTI0_IRQHandler+0x58>)
 800150a:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 800150e:	6153      	str	r3, [r2, #20]


	TIM1->BDTR ^= (TIM_BDTR_MOE_Msk);							// Global output toggled for TIM1
 8001510:	4b09      	ldr	r3, [pc, #36]	; (8001538 <EXTI0_IRQHandler+0x5c>)
 8001512:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001514:	4a08      	ldr	r2, [pc, #32]	; (8001538 <EXTI0_IRQHandler+0x5c>)
 8001516:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 800151a:	6453      	str	r3, [r2, #68]	; 0x44
	delay_ms(300);												// Delay to Prevent Button Bounce
 800151c:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8001520:	f7ff fcae 	bl	8000e80 <delay_ms>
	EXTI->PR |= (1);											// Lower Interrupt flag
 8001524:	4b05      	ldr	r3, [pc, #20]	; (800153c <EXTI0_IRQHandler+0x60>)
 8001526:	695b      	ldr	r3, [r3, #20]
 8001528:	4a04      	ldr	r2, [pc, #16]	; (800153c <EXTI0_IRQHandler+0x60>)
 800152a:	f043 0301 	orr.w	r3, r3, #1
 800152e:	6153      	str	r3, [r2, #20]
}
 8001530:	bf00      	nop
 8001532:	bd80      	pop	{r7, pc}
 8001534:	40020c00 	.word	0x40020c00
 8001538:	40010000 	.word	0x40010000
 800153c:	40013c00 	.word	0x40013c00

08001540 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001540:	b480      	push	{r7}
 8001542:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001544:	e7fe      	b.n	8001544 <NMI_Handler+0x4>

08001546 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001546:	b480      	push	{r7}
 8001548:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800154a:	e7fe      	b.n	800154a <HardFault_Handler+0x4>

0800154c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800154c:	b480      	push	{r7}
 800154e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001550:	e7fe      	b.n	8001550 <MemManage_Handler+0x4>

08001552 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001552:	b480      	push	{r7}
 8001554:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001556:	e7fe      	b.n	8001556 <BusFault_Handler+0x4>

08001558 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001558:	b480      	push	{r7}
 800155a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800155c:	e7fe      	b.n	800155c <UsageFault_Handler+0x4>

0800155e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800155e:	b480      	push	{r7}
 8001560:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001562:	bf00      	nop
 8001564:	46bd      	mov	sp, r7
 8001566:	f85d 7b04 	ldr.w	r7, [sp], #4
 800156a:	4770      	bx	lr

0800156c <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800156c:	b480      	push	{r7}
 800156e:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001570:	bf00      	nop
 8001572:	46bd      	mov	sp, r7
 8001574:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001578:	4770      	bx	lr

0800157a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800157a:	b480      	push	{r7}
 800157c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800157e:	bf00      	nop
 8001580:	46bd      	mov	sp, r7
 8001582:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001586:	4770      	bx	lr

08001588 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001588:	b580      	push	{r7, lr}
 800158a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800158c:	f000 f83e 	bl	800160c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001590:	bf00      	nop
 8001592:	bd80      	pop	{r7, pc}

08001594 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001594:	b480      	push	{r7}
 8001596:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001598:	4b06      	ldr	r3, [pc, #24]	; (80015b4 <SystemInit+0x20>)
 800159a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800159e:	4a05      	ldr	r2, [pc, #20]	; (80015b4 <SystemInit+0x20>)
 80015a0:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80015a4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80015a8:	bf00      	nop
 80015aa:	46bd      	mov	sp, r7
 80015ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015b0:	4770      	bx	lr
 80015b2:	bf00      	nop
 80015b4:	e000ed00 	.word	0xe000ed00

080015b8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 80015b8:	f8df d034 	ldr.w	sp, [pc, #52]	; 80015f0 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80015bc:	480d      	ldr	r0, [pc, #52]	; (80015f4 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 80015be:	490e      	ldr	r1, [pc, #56]	; (80015f8 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 80015c0:	4a0e      	ldr	r2, [pc, #56]	; (80015fc <LoopFillZerobss+0x1e>)
  movs r3, #0
 80015c2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80015c4:	e002      	b.n	80015cc <LoopCopyDataInit>

080015c6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80015c6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80015c8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80015ca:	3304      	adds	r3, #4

080015cc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80015cc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80015ce:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80015d0:	d3f9      	bcc.n	80015c6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80015d2:	4a0b      	ldr	r2, [pc, #44]	; (8001600 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 80015d4:	4c0b      	ldr	r4, [pc, #44]	; (8001604 <LoopFillZerobss+0x26>)
  movs r3, #0
 80015d6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80015d8:	e001      	b.n	80015de <LoopFillZerobss>

080015da <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80015da:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80015dc:	3204      	adds	r2, #4

080015de <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80015de:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80015e0:	d3fb      	bcc.n	80015da <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80015e2:	f7ff ffd7 	bl	8001594 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80015e6:	f000 f825 	bl	8001634 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80015ea:	f7ff fb23 	bl	8000c34 <main>
  bx  lr    
 80015ee:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80015f0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80015f4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80015f8:	20000014 	.word	0x20000014
  ldr r2, =_sidata
 80015fc:	080028e8 	.word	0x080028e8
  ldr r2, =_sbss
 8001600:	20000014 	.word	0x20000014
  ldr r4, =_ebss
 8001604:	20000048 	.word	0x20000048

08001608 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001608:	e7fe      	b.n	8001608 <ADC_IRQHandler>
	...

0800160c <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 800160c:	b480      	push	{r7}
 800160e:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8001610:	4b06      	ldr	r3, [pc, #24]	; (800162c <HAL_IncTick+0x20>)
 8001612:	781b      	ldrb	r3, [r3, #0]
 8001614:	461a      	mov	r2, r3
 8001616:	4b06      	ldr	r3, [pc, #24]	; (8001630 <HAL_IncTick+0x24>)
 8001618:	681b      	ldr	r3, [r3, #0]
 800161a:	4413      	add	r3, r2
 800161c:	4a04      	ldr	r2, [pc, #16]	; (8001630 <HAL_IncTick+0x24>)
 800161e:	6013      	str	r3, [r2, #0]
}
 8001620:	bf00      	nop
 8001622:	46bd      	mov	sp, r7
 8001624:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001628:	4770      	bx	lr
 800162a:	bf00      	nop
 800162c:	20000010 	.word	0x20000010
 8001630:	20000044 	.word	0x20000044

08001634 <__libc_init_array>:
 8001634:	b570      	push	{r4, r5, r6, lr}
 8001636:	4d0d      	ldr	r5, [pc, #52]	; (800166c <__libc_init_array+0x38>)
 8001638:	4c0d      	ldr	r4, [pc, #52]	; (8001670 <__libc_init_array+0x3c>)
 800163a:	1b64      	subs	r4, r4, r5
 800163c:	10a4      	asrs	r4, r4, #2
 800163e:	2600      	movs	r6, #0
 8001640:	42a6      	cmp	r6, r4
 8001642:	d109      	bne.n	8001658 <__libc_init_array+0x24>
 8001644:	4d0b      	ldr	r5, [pc, #44]	; (8001674 <__libc_init_array+0x40>)
 8001646:	4c0c      	ldr	r4, [pc, #48]	; (8001678 <__libc_init_array+0x44>)
 8001648:	f001 f850 	bl	80026ec <_init>
 800164c:	1b64      	subs	r4, r4, r5
 800164e:	10a4      	asrs	r4, r4, #2
 8001650:	2600      	movs	r6, #0
 8001652:	42a6      	cmp	r6, r4
 8001654:	d105      	bne.n	8001662 <__libc_init_array+0x2e>
 8001656:	bd70      	pop	{r4, r5, r6, pc}
 8001658:	f855 3b04 	ldr.w	r3, [r5], #4
 800165c:	4798      	blx	r3
 800165e:	3601      	adds	r6, #1
 8001660:	e7ee      	b.n	8001640 <__libc_init_array+0xc>
 8001662:	f855 3b04 	ldr.w	r3, [r5], #4
 8001666:	4798      	blx	r3
 8001668:	3601      	adds	r6, #1
 800166a:	e7f2      	b.n	8001652 <__libc_init_array+0x1e>
 800166c:	080028e0 	.word	0x080028e0
 8001670:	080028e0 	.word	0x080028e0
 8001674:	080028e0 	.word	0x080028e0
 8001678:	080028e4 	.word	0x080028e4
 800167c:	00000000 	.word	0x00000000

08001680 <sin>:
 8001680:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8001682:	ec53 2b10 	vmov	r2, r3, d0
 8001686:	4826      	ldr	r0, [pc, #152]	; (8001720 <sin+0xa0>)
 8001688:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800168c:	4281      	cmp	r1, r0
 800168e:	dc07      	bgt.n	80016a0 <sin+0x20>
 8001690:	ed9f 1b21 	vldr	d1, [pc, #132]	; 8001718 <sin+0x98>
 8001694:	2000      	movs	r0, #0
 8001696:	f000 fe5b 	bl	8002350 <__kernel_sin>
 800169a:	ec51 0b10 	vmov	r0, r1, d0
 800169e:	e007      	b.n	80016b0 <sin+0x30>
 80016a0:	4820      	ldr	r0, [pc, #128]	; (8001724 <sin+0xa4>)
 80016a2:	4281      	cmp	r1, r0
 80016a4:	dd09      	ble.n	80016ba <sin+0x3a>
 80016a6:	ee10 0a10 	vmov	r0, s0
 80016aa:	4619      	mov	r1, r3
 80016ac:	f7fe fd90 	bl	80001d0 <__aeabi_dsub>
 80016b0:	ec41 0b10 	vmov	d0, r0, r1
 80016b4:	b005      	add	sp, #20
 80016b6:	f85d fb04 	ldr.w	pc, [sp], #4
 80016ba:	4668      	mov	r0, sp
 80016bc:	f000 f834 	bl	8001728 <__ieee754_rem_pio2>
 80016c0:	f000 0003 	and.w	r0, r0, #3
 80016c4:	2801      	cmp	r0, #1
 80016c6:	d008      	beq.n	80016da <sin+0x5a>
 80016c8:	2802      	cmp	r0, #2
 80016ca:	d00d      	beq.n	80016e8 <sin+0x68>
 80016cc:	b9d0      	cbnz	r0, 8001704 <sin+0x84>
 80016ce:	ed9d 1b02 	vldr	d1, [sp, #8]
 80016d2:	ed9d 0b00 	vldr	d0, [sp]
 80016d6:	2001      	movs	r0, #1
 80016d8:	e7dd      	b.n	8001696 <sin+0x16>
 80016da:	ed9d 1b02 	vldr	d1, [sp, #8]
 80016de:	ed9d 0b00 	vldr	d0, [sp]
 80016e2:	f000 fa2d 	bl	8001b40 <__kernel_cos>
 80016e6:	e7d8      	b.n	800169a <sin+0x1a>
 80016e8:	ed9d 1b02 	vldr	d1, [sp, #8]
 80016ec:	ed9d 0b00 	vldr	d0, [sp]
 80016f0:	2001      	movs	r0, #1
 80016f2:	f000 fe2d 	bl	8002350 <__kernel_sin>
 80016f6:	ec53 2b10 	vmov	r2, r3, d0
 80016fa:	ee10 0a10 	vmov	r0, s0
 80016fe:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8001702:	e7d5      	b.n	80016b0 <sin+0x30>
 8001704:	ed9d 1b02 	vldr	d1, [sp, #8]
 8001708:	ed9d 0b00 	vldr	d0, [sp]
 800170c:	f000 fa18 	bl	8001b40 <__kernel_cos>
 8001710:	e7f1      	b.n	80016f6 <sin+0x76>
 8001712:	bf00      	nop
 8001714:	f3af 8000 	nop.w
	...
 8001720:	3fe921fb 	.word	0x3fe921fb
 8001724:	7fefffff 	.word	0x7fefffff

08001728 <__ieee754_rem_pio2>:
 8001728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800172c:	ed2d 8b02 	vpush	{d8}
 8001730:	ec55 4b10 	vmov	r4, r5, d0
 8001734:	4bca      	ldr	r3, [pc, #808]	; (8001a60 <__ieee754_rem_pio2+0x338>)
 8001736:	b08b      	sub	sp, #44	; 0x2c
 8001738:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 800173c:	4598      	cmp	r8, r3
 800173e:	4682      	mov	sl, r0
 8001740:	9502      	str	r5, [sp, #8]
 8001742:	dc08      	bgt.n	8001756 <__ieee754_rem_pio2+0x2e>
 8001744:	2200      	movs	r2, #0
 8001746:	2300      	movs	r3, #0
 8001748:	ed80 0b00 	vstr	d0, [r0]
 800174c:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8001750:	f04f 0b00 	mov.w	fp, #0
 8001754:	e028      	b.n	80017a8 <__ieee754_rem_pio2+0x80>
 8001756:	4bc3      	ldr	r3, [pc, #780]	; (8001a64 <__ieee754_rem_pio2+0x33c>)
 8001758:	4598      	cmp	r8, r3
 800175a:	dc78      	bgt.n	800184e <__ieee754_rem_pio2+0x126>
 800175c:	9b02      	ldr	r3, [sp, #8]
 800175e:	4ec2      	ldr	r6, [pc, #776]	; (8001a68 <__ieee754_rem_pio2+0x340>)
 8001760:	2b00      	cmp	r3, #0
 8001762:	ee10 0a10 	vmov	r0, s0
 8001766:	a3b0      	add	r3, pc, #704	; (adr r3, 8001a28 <__ieee754_rem_pio2+0x300>)
 8001768:	e9d3 2300 	ldrd	r2, r3, [r3]
 800176c:	4629      	mov	r1, r5
 800176e:	dd39      	ble.n	80017e4 <__ieee754_rem_pio2+0xbc>
 8001770:	f7fe fd2e 	bl	80001d0 <__aeabi_dsub>
 8001774:	45b0      	cmp	r8, r6
 8001776:	4604      	mov	r4, r0
 8001778:	460d      	mov	r5, r1
 800177a:	d01b      	beq.n	80017b4 <__ieee754_rem_pio2+0x8c>
 800177c:	a3ac      	add	r3, pc, #688	; (adr r3, 8001a30 <__ieee754_rem_pio2+0x308>)
 800177e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001782:	f7fe fd25 	bl	80001d0 <__aeabi_dsub>
 8001786:	4602      	mov	r2, r0
 8001788:	460b      	mov	r3, r1
 800178a:	e9ca 2300 	strd	r2, r3, [sl]
 800178e:	4620      	mov	r0, r4
 8001790:	4629      	mov	r1, r5
 8001792:	f7fe fd1d 	bl	80001d0 <__aeabi_dsub>
 8001796:	a3a6      	add	r3, pc, #664	; (adr r3, 8001a30 <__ieee754_rem_pio2+0x308>)
 8001798:	e9d3 2300 	ldrd	r2, r3, [r3]
 800179c:	f7fe fd18 	bl	80001d0 <__aeabi_dsub>
 80017a0:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80017a4:	f04f 0b01 	mov.w	fp, #1
 80017a8:	4658      	mov	r0, fp
 80017aa:	b00b      	add	sp, #44	; 0x2c
 80017ac:	ecbd 8b02 	vpop	{d8}
 80017b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80017b4:	a3a0      	add	r3, pc, #640	; (adr r3, 8001a38 <__ieee754_rem_pio2+0x310>)
 80017b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80017ba:	f7fe fd09 	bl	80001d0 <__aeabi_dsub>
 80017be:	a3a0      	add	r3, pc, #640	; (adr r3, 8001a40 <__ieee754_rem_pio2+0x318>)
 80017c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80017c4:	4604      	mov	r4, r0
 80017c6:	460d      	mov	r5, r1
 80017c8:	f7fe fd02 	bl	80001d0 <__aeabi_dsub>
 80017cc:	4602      	mov	r2, r0
 80017ce:	460b      	mov	r3, r1
 80017d0:	e9ca 2300 	strd	r2, r3, [sl]
 80017d4:	4620      	mov	r0, r4
 80017d6:	4629      	mov	r1, r5
 80017d8:	f7fe fcfa 	bl	80001d0 <__aeabi_dsub>
 80017dc:	a398      	add	r3, pc, #608	; (adr r3, 8001a40 <__ieee754_rem_pio2+0x318>)
 80017de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80017e2:	e7db      	b.n	800179c <__ieee754_rem_pio2+0x74>
 80017e4:	f7fe fcf6 	bl	80001d4 <__adddf3>
 80017e8:	45b0      	cmp	r8, r6
 80017ea:	4604      	mov	r4, r0
 80017ec:	460d      	mov	r5, r1
 80017ee:	d016      	beq.n	800181e <__ieee754_rem_pio2+0xf6>
 80017f0:	a38f      	add	r3, pc, #572	; (adr r3, 8001a30 <__ieee754_rem_pio2+0x308>)
 80017f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80017f6:	f7fe fced 	bl	80001d4 <__adddf3>
 80017fa:	4602      	mov	r2, r0
 80017fc:	460b      	mov	r3, r1
 80017fe:	e9ca 2300 	strd	r2, r3, [sl]
 8001802:	4620      	mov	r0, r4
 8001804:	4629      	mov	r1, r5
 8001806:	f7fe fce3 	bl	80001d0 <__aeabi_dsub>
 800180a:	a389      	add	r3, pc, #548	; (adr r3, 8001a30 <__ieee754_rem_pio2+0x308>)
 800180c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001810:	f7fe fce0 	bl	80001d4 <__adddf3>
 8001814:	f04f 3bff 	mov.w	fp, #4294967295
 8001818:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800181c:	e7c4      	b.n	80017a8 <__ieee754_rem_pio2+0x80>
 800181e:	a386      	add	r3, pc, #536	; (adr r3, 8001a38 <__ieee754_rem_pio2+0x310>)
 8001820:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001824:	f7fe fcd6 	bl	80001d4 <__adddf3>
 8001828:	a385      	add	r3, pc, #532	; (adr r3, 8001a40 <__ieee754_rem_pio2+0x318>)
 800182a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800182e:	4604      	mov	r4, r0
 8001830:	460d      	mov	r5, r1
 8001832:	f7fe fccf 	bl	80001d4 <__adddf3>
 8001836:	4602      	mov	r2, r0
 8001838:	460b      	mov	r3, r1
 800183a:	e9ca 2300 	strd	r2, r3, [sl]
 800183e:	4620      	mov	r0, r4
 8001840:	4629      	mov	r1, r5
 8001842:	f7fe fcc5 	bl	80001d0 <__aeabi_dsub>
 8001846:	a37e      	add	r3, pc, #504	; (adr r3, 8001a40 <__ieee754_rem_pio2+0x318>)
 8001848:	e9d3 2300 	ldrd	r2, r3, [r3]
 800184c:	e7e0      	b.n	8001810 <__ieee754_rem_pio2+0xe8>
 800184e:	4b87      	ldr	r3, [pc, #540]	; (8001a6c <__ieee754_rem_pio2+0x344>)
 8001850:	4598      	cmp	r8, r3
 8001852:	f300 80d9 	bgt.w	8001a08 <__ieee754_rem_pio2+0x2e0>
 8001856:	f000 fe39 	bl	80024cc <fabs>
 800185a:	ec55 4b10 	vmov	r4, r5, d0
 800185e:	ee10 0a10 	vmov	r0, s0
 8001862:	a379      	add	r3, pc, #484	; (adr r3, 8001a48 <__ieee754_rem_pio2+0x320>)
 8001864:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001868:	4629      	mov	r1, r5
 800186a:	f7fe fe69 	bl	8000540 <__aeabi_dmul>
 800186e:	4b80      	ldr	r3, [pc, #512]	; (8001a70 <__ieee754_rem_pio2+0x348>)
 8001870:	2200      	movs	r2, #0
 8001872:	f7fe fcaf 	bl	80001d4 <__adddf3>
 8001876:	f7ff f8fd 	bl	8000a74 <__aeabi_d2iz>
 800187a:	4683      	mov	fp, r0
 800187c:	f7fe fdf6 	bl	800046c <__aeabi_i2d>
 8001880:	4602      	mov	r2, r0
 8001882:	460b      	mov	r3, r1
 8001884:	ec43 2b18 	vmov	d8, r2, r3
 8001888:	a367      	add	r3, pc, #412	; (adr r3, 8001a28 <__ieee754_rem_pio2+0x300>)
 800188a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800188e:	f7fe fe57 	bl	8000540 <__aeabi_dmul>
 8001892:	4602      	mov	r2, r0
 8001894:	460b      	mov	r3, r1
 8001896:	4620      	mov	r0, r4
 8001898:	4629      	mov	r1, r5
 800189a:	f7fe fc99 	bl	80001d0 <__aeabi_dsub>
 800189e:	a364      	add	r3, pc, #400	; (adr r3, 8001a30 <__ieee754_rem_pio2+0x308>)
 80018a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80018a4:	4606      	mov	r6, r0
 80018a6:	460f      	mov	r7, r1
 80018a8:	ec51 0b18 	vmov	r0, r1, d8
 80018ac:	f7fe fe48 	bl	8000540 <__aeabi_dmul>
 80018b0:	f1bb 0f1f 	cmp.w	fp, #31
 80018b4:	4604      	mov	r4, r0
 80018b6:	460d      	mov	r5, r1
 80018b8:	dc0d      	bgt.n	80018d6 <__ieee754_rem_pio2+0x1ae>
 80018ba:	4b6e      	ldr	r3, [pc, #440]	; (8001a74 <__ieee754_rem_pio2+0x34c>)
 80018bc:	f10b 32ff 	add.w	r2, fp, #4294967295
 80018c0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80018c4:	4543      	cmp	r3, r8
 80018c6:	d006      	beq.n	80018d6 <__ieee754_rem_pio2+0x1ae>
 80018c8:	4622      	mov	r2, r4
 80018ca:	462b      	mov	r3, r5
 80018cc:	4630      	mov	r0, r6
 80018ce:	4639      	mov	r1, r7
 80018d0:	f7fe fc7e 	bl	80001d0 <__aeabi_dsub>
 80018d4:	e00f      	b.n	80018f6 <__ieee754_rem_pio2+0x1ce>
 80018d6:	462b      	mov	r3, r5
 80018d8:	4622      	mov	r2, r4
 80018da:	4630      	mov	r0, r6
 80018dc:	4639      	mov	r1, r7
 80018de:	f7fe fc77 	bl	80001d0 <__aeabi_dsub>
 80018e2:	ea4f 5328 	mov.w	r3, r8, asr #20
 80018e6:	9303      	str	r3, [sp, #12]
 80018e8:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80018ec:	ebc3 5818 	rsb	r8, r3, r8, lsr #20
 80018f0:	f1b8 0f10 	cmp.w	r8, #16
 80018f4:	dc02      	bgt.n	80018fc <__ieee754_rem_pio2+0x1d4>
 80018f6:	e9ca 0100 	strd	r0, r1, [sl]
 80018fa:	e039      	b.n	8001970 <__ieee754_rem_pio2+0x248>
 80018fc:	a34e      	add	r3, pc, #312	; (adr r3, 8001a38 <__ieee754_rem_pio2+0x310>)
 80018fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001902:	ec51 0b18 	vmov	r0, r1, d8
 8001906:	f7fe fe1b 	bl	8000540 <__aeabi_dmul>
 800190a:	4604      	mov	r4, r0
 800190c:	460d      	mov	r5, r1
 800190e:	4602      	mov	r2, r0
 8001910:	460b      	mov	r3, r1
 8001912:	4630      	mov	r0, r6
 8001914:	4639      	mov	r1, r7
 8001916:	f7fe fc5b 	bl	80001d0 <__aeabi_dsub>
 800191a:	4602      	mov	r2, r0
 800191c:	460b      	mov	r3, r1
 800191e:	4680      	mov	r8, r0
 8001920:	4689      	mov	r9, r1
 8001922:	4630      	mov	r0, r6
 8001924:	4639      	mov	r1, r7
 8001926:	f7fe fc53 	bl	80001d0 <__aeabi_dsub>
 800192a:	4622      	mov	r2, r4
 800192c:	462b      	mov	r3, r5
 800192e:	f7fe fc4f 	bl	80001d0 <__aeabi_dsub>
 8001932:	a343      	add	r3, pc, #268	; (adr r3, 8001a40 <__ieee754_rem_pio2+0x318>)
 8001934:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001938:	4604      	mov	r4, r0
 800193a:	460d      	mov	r5, r1
 800193c:	ec51 0b18 	vmov	r0, r1, d8
 8001940:	f7fe fdfe 	bl	8000540 <__aeabi_dmul>
 8001944:	4622      	mov	r2, r4
 8001946:	462b      	mov	r3, r5
 8001948:	f7fe fc42 	bl	80001d0 <__aeabi_dsub>
 800194c:	4602      	mov	r2, r0
 800194e:	460b      	mov	r3, r1
 8001950:	4604      	mov	r4, r0
 8001952:	460d      	mov	r5, r1
 8001954:	4640      	mov	r0, r8
 8001956:	4649      	mov	r1, r9
 8001958:	f7fe fc3a 	bl	80001d0 <__aeabi_dsub>
 800195c:	9a03      	ldr	r2, [sp, #12]
 800195e:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8001962:	1ad3      	subs	r3, r2, r3
 8001964:	2b31      	cmp	r3, #49	; 0x31
 8001966:	dc24      	bgt.n	80019b2 <__ieee754_rem_pio2+0x28a>
 8001968:	e9ca 0100 	strd	r0, r1, [sl]
 800196c:	4646      	mov	r6, r8
 800196e:	464f      	mov	r7, r9
 8001970:	e9da 8900 	ldrd	r8, r9, [sl]
 8001974:	4630      	mov	r0, r6
 8001976:	4642      	mov	r2, r8
 8001978:	464b      	mov	r3, r9
 800197a:	4639      	mov	r1, r7
 800197c:	f7fe fc28 	bl	80001d0 <__aeabi_dsub>
 8001980:	462b      	mov	r3, r5
 8001982:	4622      	mov	r2, r4
 8001984:	f7fe fc24 	bl	80001d0 <__aeabi_dsub>
 8001988:	9b02      	ldr	r3, [sp, #8]
 800198a:	2b00      	cmp	r3, #0
 800198c:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8001990:	f6bf af0a 	bge.w	80017a8 <__ieee754_rem_pio2+0x80>
 8001994:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8001998:	f8ca 3004 	str.w	r3, [sl, #4]
 800199c:	f8ca 8000 	str.w	r8, [sl]
 80019a0:	f8ca 0008 	str.w	r0, [sl, #8]
 80019a4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80019a8:	f8ca 300c 	str.w	r3, [sl, #12]
 80019ac:	f1cb 0b00 	rsb	fp, fp, #0
 80019b0:	e6fa      	b.n	80017a8 <__ieee754_rem_pio2+0x80>
 80019b2:	a327      	add	r3, pc, #156	; (adr r3, 8001a50 <__ieee754_rem_pio2+0x328>)
 80019b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019b8:	ec51 0b18 	vmov	r0, r1, d8
 80019bc:	f7fe fdc0 	bl	8000540 <__aeabi_dmul>
 80019c0:	4604      	mov	r4, r0
 80019c2:	460d      	mov	r5, r1
 80019c4:	4602      	mov	r2, r0
 80019c6:	460b      	mov	r3, r1
 80019c8:	4640      	mov	r0, r8
 80019ca:	4649      	mov	r1, r9
 80019cc:	f7fe fc00 	bl	80001d0 <__aeabi_dsub>
 80019d0:	4602      	mov	r2, r0
 80019d2:	460b      	mov	r3, r1
 80019d4:	4606      	mov	r6, r0
 80019d6:	460f      	mov	r7, r1
 80019d8:	4640      	mov	r0, r8
 80019da:	4649      	mov	r1, r9
 80019dc:	f7fe fbf8 	bl	80001d0 <__aeabi_dsub>
 80019e0:	4622      	mov	r2, r4
 80019e2:	462b      	mov	r3, r5
 80019e4:	f7fe fbf4 	bl	80001d0 <__aeabi_dsub>
 80019e8:	a31b      	add	r3, pc, #108	; (adr r3, 8001a58 <__ieee754_rem_pio2+0x330>)
 80019ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019ee:	4604      	mov	r4, r0
 80019f0:	460d      	mov	r5, r1
 80019f2:	ec51 0b18 	vmov	r0, r1, d8
 80019f6:	f7fe fda3 	bl	8000540 <__aeabi_dmul>
 80019fa:	4622      	mov	r2, r4
 80019fc:	462b      	mov	r3, r5
 80019fe:	f7fe fbe7 	bl	80001d0 <__aeabi_dsub>
 8001a02:	4604      	mov	r4, r0
 8001a04:	460d      	mov	r5, r1
 8001a06:	e75f      	b.n	80018c8 <__ieee754_rem_pio2+0x1a0>
 8001a08:	4b1b      	ldr	r3, [pc, #108]	; (8001a78 <__ieee754_rem_pio2+0x350>)
 8001a0a:	4598      	cmp	r8, r3
 8001a0c:	dd36      	ble.n	8001a7c <__ieee754_rem_pio2+0x354>
 8001a0e:	ee10 2a10 	vmov	r2, s0
 8001a12:	462b      	mov	r3, r5
 8001a14:	4620      	mov	r0, r4
 8001a16:	4629      	mov	r1, r5
 8001a18:	f7fe fbda 	bl	80001d0 <__aeabi_dsub>
 8001a1c:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8001a20:	e9ca 0100 	strd	r0, r1, [sl]
 8001a24:	e694      	b.n	8001750 <__ieee754_rem_pio2+0x28>
 8001a26:	bf00      	nop
 8001a28:	54400000 	.word	0x54400000
 8001a2c:	3ff921fb 	.word	0x3ff921fb
 8001a30:	1a626331 	.word	0x1a626331
 8001a34:	3dd0b461 	.word	0x3dd0b461
 8001a38:	1a600000 	.word	0x1a600000
 8001a3c:	3dd0b461 	.word	0x3dd0b461
 8001a40:	2e037073 	.word	0x2e037073
 8001a44:	3ba3198a 	.word	0x3ba3198a
 8001a48:	6dc9c883 	.word	0x6dc9c883
 8001a4c:	3fe45f30 	.word	0x3fe45f30
 8001a50:	2e000000 	.word	0x2e000000
 8001a54:	3ba3198a 	.word	0x3ba3198a
 8001a58:	252049c1 	.word	0x252049c1
 8001a5c:	397b839a 	.word	0x397b839a
 8001a60:	3fe921fb 	.word	0x3fe921fb
 8001a64:	4002d97b 	.word	0x4002d97b
 8001a68:	3ff921fb 	.word	0x3ff921fb
 8001a6c:	413921fb 	.word	0x413921fb
 8001a70:	3fe00000 	.word	0x3fe00000
 8001a74:	08002708 	.word	0x08002708
 8001a78:	7fefffff 	.word	0x7fefffff
 8001a7c:	ea4f 5428 	mov.w	r4, r8, asr #20
 8001a80:	f2a4 4416 	subw	r4, r4, #1046	; 0x416
 8001a84:	ee10 0a10 	vmov	r0, s0
 8001a88:	eba8 5104 	sub.w	r1, r8, r4, lsl #20
 8001a8c:	ee10 6a10 	vmov	r6, s0
 8001a90:	460f      	mov	r7, r1
 8001a92:	f7fe ffef 	bl	8000a74 <__aeabi_d2iz>
 8001a96:	f7fe fce9 	bl	800046c <__aeabi_i2d>
 8001a9a:	4602      	mov	r2, r0
 8001a9c:	460b      	mov	r3, r1
 8001a9e:	4630      	mov	r0, r6
 8001aa0:	4639      	mov	r1, r7
 8001aa2:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001aa6:	f7fe fb93 	bl	80001d0 <__aeabi_dsub>
 8001aaa:	4b22      	ldr	r3, [pc, #136]	; (8001b34 <__ieee754_rem_pio2+0x40c>)
 8001aac:	2200      	movs	r2, #0
 8001aae:	f7fe fd47 	bl	8000540 <__aeabi_dmul>
 8001ab2:	460f      	mov	r7, r1
 8001ab4:	4606      	mov	r6, r0
 8001ab6:	f7fe ffdd 	bl	8000a74 <__aeabi_d2iz>
 8001aba:	f7fe fcd7 	bl	800046c <__aeabi_i2d>
 8001abe:	4602      	mov	r2, r0
 8001ac0:	460b      	mov	r3, r1
 8001ac2:	4630      	mov	r0, r6
 8001ac4:	4639      	mov	r1, r7
 8001ac6:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8001aca:	f7fe fb81 	bl	80001d0 <__aeabi_dsub>
 8001ace:	4b19      	ldr	r3, [pc, #100]	; (8001b34 <__ieee754_rem_pio2+0x40c>)
 8001ad0:	2200      	movs	r2, #0
 8001ad2:	f7fe fd35 	bl	8000540 <__aeabi_dmul>
 8001ad6:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8001ada:	ad04      	add	r5, sp, #16
 8001adc:	f04f 0803 	mov.w	r8, #3
 8001ae0:	46a9      	mov	r9, r5
 8001ae2:	2600      	movs	r6, #0
 8001ae4:	2700      	movs	r7, #0
 8001ae6:	4632      	mov	r2, r6
 8001ae8:	463b      	mov	r3, r7
 8001aea:	e9d5 0104 	ldrd	r0, r1, [r5, #16]
 8001aee:	46c3      	mov	fp, r8
 8001af0:	3d08      	subs	r5, #8
 8001af2:	f108 38ff 	add.w	r8, r8, #4294967295
 8001af6:	f7fe ff8b 	bl	8000a10 <__aeabi_dcmpeq>
 8001afa:	2800      	cmp	r0, #0
 8001afc:	d1f3      	bne.n	8001ae6 <__ieee754_rem_pio2+0x3be>
 8001afe:	4b0e      	ldr	r3, [pc, #56]	; (8001b38 <__ieee754_rem_pio2+0x410>)
 8001b00:	9301      	str	r3, [sp, #4]
 8001b02:	2302      	movs	r3, #2
 8001b04:	9300      	str	r3, [sp, #0]
 8001b06:	4622      	mov	r2, r4
 8001b08:	465b      	mov	r3, fp
 8001b0a:	4651      	mov	r1, sl
 8001b0c:	4648      	mov	r0, r9
 8001b0e:	f000 f8df 	bl	8001cd0 <__kernel_rem_pio2>
 8001b12:	9b02      	ldr	r3, [sp, #8]
 8001b14:	2b00      	cmp	r3, #0
 8001b16:	4683      	mov	fp, r0
 8001b18:	f6bf ae46 	bge.w	80017a8 <__ieee754_rem_pio2+0x80>
 8001b1c:	f8da 3004 	ldr.w	r3, [sl, #4]
 8001b20:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8001b24:	f8ca 3004 	str.w	r3, [sl, #4]
 8001b28:	f8da 300c 	ldr.w	r3, [sl, #12]
 8001b2c:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8001b30:	e73a      	b.n	80019a8 <__ieee754_rem_pio2+0x280>
 8001b32:	bf00      	nop
 8001b34:	41700000 	.word	0x41700000
 8001b38:	08002788 	.word	0x08002788
 8001b3c:	00000000 	.word	0x00000000

08001b40 <__kernel_cos>:
 8001b40:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001b44:	ec57 6b10 	vmov	r6, r7, d0
 8001b48:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 8001b4c:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 8001b50:	ed8d 1b00 	vstr	d1, [sp]
 8001b54:	da07      	bge.n	8001b66 <__kernel_cos+0x26>
 8001b56:	ee10 0a10 	vmov	r0, s0
 8001b5a:	4639      	mov	r1, r7
 8001b5c:	f7fe ff8a 	bl	8000a74 <__aeabi_d2iz>
 8001b60:	2800      	cmp	r0, #0
 8001b62:	f000 8088 	beq.w	8001c76 <__kernel_cos+0x136>
 8001b66:	4632      	mov	r2, r6
 8001b68:	463b      	mov	r3, r7
 8001b6a:	4630      	mov	r0, r6
 8001b6c:	4639      	mov	r1, r7
 8001b6e:	f7fe fce7 	bl	8000540 <__aeabi_dmul>
 8001b72:	4b51      	ldr	r3, [pc, #324]	; (8001cb8 <__kernel_cos+0x178>)
 8001b74:	2200      	movs	r2, #0
 8001b76:	4604      	mov	r4, r0
 8001b78:	460d      	mov	r5, r1
 8001b7a:	f7fe fce1 	bl	8000540 <__aeabi_dmul>
 8001b7e:	a340      	add	r3, pc, #256	; (adr r3, 8001c80 <__kernel_cos+0x140>)
 8001b80:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001b84:	4682      	mov	sl, r0
 8001b86:	468b      	mov	fp, r1
 8001b88:	4620      	mov	r0, r4
 8001b8a:	4629      	mov	r1, r5
 8001b8c:	f7fe fcd8 	bl	8000540 <__aeabi_dmul>
 8001b90:	a33d      	add	r3, pc, #244	; (adr r3, 8001c88 <__kernel_cos+0x148>)
 8001b92:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001b96:	f7fe fb1d 	bl	80001d4 <__adddf3>
 8001b9a:	4622      	mov	r2, r4
 8001b9c:	462b      	mov	r3, r5
 8001b9e:	f7fe fccf 	bl	8000540 <__aeabi_dmul>
 8001ba2:	a33b      	add	r3, pc, #236	; (adr r3, 8001c90 <__kernel_cos+0x150>)
 8001ba4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ba8:	f7fe fb12 	bl	80001d0 <__aeabi_dsub>
 8001bac:	4622      	mov	r2, r4
 8001bae:	462b      	mov	r3, r5
 8001bb0:	f7fe fcc6 	bl	8000540 <__aeabi_dmul>
 8001bb4:	a338      	add	r3, pc, #224	; (adr r3, 8001c98 <__kernel_cos+0x158>)
 8001bb6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001bba:	f7fe fb0b 	bl	80001d4 <__adddf3>
 8001bbe:	4622      	mov	r2, r4
 8001bc0:	462b      	mov	r3, r5
 8001bc2:	f7fe fcbd 	bl	8000540 <__aeabi_dmul>
 8001bc6:	a336      	add	r3, pc, #216	; (adr r3, 8001ca0 <__kernel_cos+0x160>)
 8001bc8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001bcc:	f7fe fb00 	bl	80001d0 <__aeabi_dsub>
 8001bd0:	4622      	mov	r2, r4
 8001bd2:	462b      	mov	r3, r5
 8001bd4:	f7fe fcb4 	bl	8000540 <__aeabi_dmul>
 8001bd8:	a333      	add	r3, pc, #204	; (adr r3, 8001ca8 <__kernel_cos+0x168>)
 8001bda:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001bde:	f7fe faf9 	bl	80001d4 <__adddf3>
 8001be2:	4622      	mov	r2, r4
 8001be4:	462b      	mov	r3, r5
 8001be6:	f7fe fcab 	bl	8000540 <__aeabi_dmul>
 8001bea:	4622      	mov	r2, r4
 8001bec:	462b      	mov	r3, r5
 8001bee:	f7fe fca7 	bl	8000540 <__aeabi_dmul>
 8001bf2:	e9dd 2300 	ldrd	r2, r3, [sp]
 8001bf6:	4604      	mov	r4, r0
 8001bf8:	460d      	mov	r5, r1
 8001bfa:	4630      	mov	r0, r6
 8001bfc:	4639      	mov	r1, r7
 8001bfe:	f7fe fc9f 	bl	8000540 <__aeabi_dmul>
 8001c02:	460b      	mov	r3, r1
 8001c04:	4602      	mov	r2, r0
 8001c06:	4629      	mov	r1, r5
 8001c08:	4620      	mov	r0, r4
 8001c0a:	f7fe fae1 	bl	80001d0 <__aeabi_dsub>
 8001c0e:	4b2b      	ldr	r3, [pc, #172]	; (8001cbc <__kernel_cos+0x17c>)
 8001c10:	4598      	cmp	r8, r3
 8001c12:	4606      	mov	r6, r0
 8001c14:	460f      	mov	r7, r1
 8001c16:	dc10      	bgt.n	8001c3a <__kernel_cos+0xfa>
 8001c18:	4602      	mov	r2, r0
 8001c1a:	460b      	mov	r3, r1
 8001c1c:	4650      	mov	r0, sl
 8001c1e:	4659      	mov	r1, fp
 8001c20:	f7fe fad6 	bl	80001d0 <__aeabi_dsub>
 8001c24:	460b      	mov	r3, r1
 8001c26:	4926      	ldr	r1, [pc, #152]	; (8001cc0 <__kernel_cos+0x180>)
 8001c28:	4602      	mov	r2, r0
 8001c2a:	2000      	movs	r0, #0
 8001c2c:	f7fe fad0 	bl	80001d0 <__aeabi_dsub>
 8001c30:	ec41 0b10 	vmov	d0, r0, r1
 8001c34:	b003      	add	sp, #12
 8001c36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001c3a:	4b22      	ldr	r3, [pc, #136]	; (8001cc4 <__kernel_cos+0x184>)
 8001c3c:	4920      	ldr	r1, [pc, #128]	; (8001cc0 <__kernel_cos+0x180>)
 8001c3e:	4598      	cmp	r8, r3
 8001c40:	bfcc      	ite	gt
 8001c42:	4d21      	ldrgt	r5, [pc, #132]	; (8001cc8 <__kernel_cos+0x188>)
 8001c44:	f5a8 1500 	suble.w	r5, r8, #2097152	; 0x200000
 8001c48:	2400      	movs	r4, #0
 8001c4a:	4622      	mov	r2, r4
 8001c4c:	462b      	mov	r3, r5
 8001c4e:	2000      	movs	r0, #0
 8001c50:	f7fe fabe 	bl	80001d0 <__aeabi_dsub>
 8001c54:	4622      	mov	r2, r4
 8001c56:	4680      	mov	r8, r0
 8001c58:	4689      	mov	r9, r1
 8001c5a:	462b      	mov	r3, r5
 8001c5c:	4650      	mov	r0, sl
 8001c5e:	4659      	mov	r1, fp
 8001c60:	f7fe fab6 	bl	80001d0 <__aeabi_dsub>
 8001c64:	4632      	mov	r2, r6
 8001c66:	463b      	mov	r3, r7
 8001c68:	f7fe fab2 	bl	80001d0 <__aeabi_dsub>
 8001c6c:	4602      	mov	r2, r0
 8001c6e:	460b      	mov	r3, r1
 8001c70:	4640      	mov	r0, r8
 8001c72:	4649      	mov	r1, r9
 8001c74:	e7da      	b.n	8001c2c <__kernel_cos+0xec>
 8001c76:	ed9f 0b0e 	vldr	d0, [pc, #56]	; 8001cb0 <__kernel_cos+0x170>
 8001c7a:	e7db      	b.n	8001c34 <__kernel_cos+0xf4>
 8001c7c:	f3af 8000 	nop.w
 8001c80:	be8838d4 	.word	0xbe8838d4
 8001c84:	bda8fae9 	.word	0xbda8fae9
 8001c88:	bdb4b1c4 	.word	0xbdb4b1c4
 8001c8c:	3e21ee9e 	.word	0x3e21ee9e
 8001c90:	809c52ad 	.word	0x809c52ad
 8001c94:	3e927e4f 	.word	0x3e927e4f
 8001c98:	19cb1590 	.word	0x19cb1590
 8001c9c:	3efa01a0 	.word	0x3efa01a0
 8001ca0:	16c15177 	.word	0x16c15177
 8001ca4:	3f56c16c 	.word	0x3f56c16c
 8001ca8:	5555554c 	.word	0x5555554c
 8001cac:	3fa55555 	.word	0x3fa55555
 8001cb0:	00000000 	.word	0x00000000
 8001cb4:	3ff00000 	.word	0x3ff00000
 8001cb8:	3fe00000 	.word	0x3fe00000
 8001cbc:	3fd33332 	.word	0x3fd33332
 8001cc0:	3ff00000 	.word	0x3ff00000
 8001cc4:	3fe90000 	.word	0x3fe90000
 8001cc8:	3fd20000 	.word	0x3fd20000
 8001ccc:	00000000 	.word	0x00000000

08001cd0 <__kernel_rem_pio2>:
 8001cd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001cd4:	ed2d 8b02 	vpush	{d8}
 8001cd8:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
 8001cdc:	f112 0f14 	cmn.w	r2, #20
 8001ce0:	9308      	str	r3, [sp, #32]
 8001ce2:	9101      	str	r1, [sp, #4]
 8001ce4:	4bc6      	ldr	r3, [pc, #792]	; (8002000 <__kernel_rem_pio2+0x330>)
 8001ce6:	99a4      	ldr	r1, [sp, #656]	; 0x290
 8001ce8:	9009      	str	r0, [sp, #36]	; 0x24
 8001cea:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8001cee:	9304      	str	r3, [sp, #16]
 8001cf0:	9b08      	ldr	r3, [sp, #32]
 8001cf2:	f103 33ff 	add.w	r3, r3, #4294967295
 8001cf6:	bfa8      	it	ge
 8001cf8:	1ed4      	subge	r4, r2, #3
 8001cfa:	9306      	str	r3, [sp, #24]
 8001cfc:	bfb2      	itee	lt
 8001cfe:	2400      	movlt	r4, #0
 8001d00:	2318      	movge	r3, #24
 8001d02:	fb94 f4f3 	sdivge	r4, r4, r3
 8001d06:	f06f 0317 	mvn.w	r3, #23
 8001d0a:	fb04 3303 	mla	r3, r4, r3, r3
 8001d0e:	eb03 0a02 	add.w	sl, r3, r2
 8001d12:	9b04      	ldr	r3, [sp, #16]
 8001d14:	9a06      	ldr	r2, [sp, #24]
 8001d16:	ed9f 8bb6 	vldr	d8, [pc, #728]	; 8001ff0 <__kernel_rem_pio2+0x320>
 8001d1a:	eb03 0802 	add.w	r8, r3, r2
 8001d1e:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 8001d20:	1aa7      	subs	r7, r4, r2
 8001d22:	ae20      	add	r6, sp, #128	; 0x80
 8001d24:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8001d28:	2500      	movs	r5, #0
 8001d2a:	4545      	cmp	r5, r8
 8001d2c:	dd18      	ble.n	8001d60 <__kernel_rem_pio2+0x90>
 8001d2e:	9b08      	ldr	r3, [sp, #32]
 8001d30:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8001d34:	aa20      	add	r2, sp, #128	; 0x80
 8001d36:	ed9f 8bae 	vldr	d8, [pc, #696]	; 8001ff0 <__kernel_rem_pio2+0x320>
 8001d3a:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 8001d3e:	f1c3 0301 	rsb	r3, r3, #1
 8001d42:	f50d 7be0 	add.w	fp, sp, #448	; 0x1c0
 8001d46:	9307      	str	r3, [sp, #28]
 8001d48:	9b07      	ldr	r3, [sp, #28]
 8001d4a:	9a04      	ldr	r2, [sp, #16]
 8001d4c:	4443      	add	r3, r8
 8001d4e:	429a      	cmp	r2, r3
 8001d50:	db2f      	blt.n	8001db2 <__kernel_rem_pio2+0xe2>
 8001d52:	ed8d 8b02 	vstr	d8, [sp, #8]
 8001d56:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8001d5a:	462f      	mov	r7, r5
 8001d5c:	2600      	movs	r6, #0
 8001d5e:	e01b      	b.n	8001d98 <__kernel_rem_pio2+0xc8>
 8001d60:	42ef      	cmn	r7, r5
 8001d62:	d407      	bmi.n	8001d74 <__kernel_rem_pio2+0xa4>
 8001d64:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8001d68:	f7fe fb80 	bl	800046c <__aeabi_i2d>
 8001d6c:	e8e6 0102 	strd	r0, r1, [r6], #8
 8001d70:	3501      	adds	r5, #1
 8001d72:	e7da      	b.n	8001d2a <__kernel_rem_pio2+0x5a>
 8001d74:	ec51 0b18 	vmov	r0, r1, d8
 8001d78:	e7f8      	b.n	8001d6c <__kernel_rem_pio2+0x9c>
 8001d7a:	e9d7 2300 	ldrd	r2, r3, [r7]
 8001d7e:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8001d82:	f7fe fbdd 	bl	8000540 <__aeabi_dmul>
 8001d86:	4602      	mov	r2, r0
 8001d88:	460b      	mov	r3, r1
 8001d8a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8001d8e:	f7fe fa21 	bl	80001d4 <__adddf3>
 8001d92:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8001d96:	3601      	adds	r6, #1
 8001d98:	9b06      	ldr	r3, [sp, #24]
 8001d9a:	429e      	cmp	r6, r3
 8001d9c:	f1a7 0708 	sub.w	r7, r7, #8
 8001da0:	ddeb      	ble.n	8001d7a <__kernel_rem_pio2+0xaa>
 8001da2:	ed9d 7b02 	vldr	d7, [sp, #8]
 8001da6:	3508      	adds	r5, #8
 8001da8:	ecab 7b02 	vstmia	fp!, {d7}
 8001dac:	f108 0801 	add.w	r8, r8, #1
 8001db0:	e7ca      	b.n	8001d48 <__kernel_rem_pio2+0x78>
 8001db2:	9b04      	ldr	r3, [sp, #16]
 8001db4:	aa0c      	add	r2, sp, #48	; 0x30
 8001db6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8001dba:	930b      	str	r3, [sp, #44]	; 0x2c
 8001dbc:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 8001dbe:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8001dc2:	9c04      	ldr	r4, [sp, #16]
 8001dc4:	930a      	str	r3, [sp, #40]	; 0x28
 8001dc6:	ab98      	add	r3, sp, #608	; 0x260
 8001dc8:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8001dcc:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 8001dd0:	f10d 0b30 	add.w	fp, sp, #48	; 0x30
 8001dd4:	f8cd b008 	str.w	fp, [sp, #8]
 8001dd8:	4625      	mov	r5, r4
 8001dda:	2d00      	cmp	r5, #0
 8001ddc:	dc78      	bgt.n	8001ed0 <__kernel_rem_pio2+0x200>
 8001dde:	ec47 6b10 	vmov	d0, r6, r7
 8001de2:	4650      	mov	r0, sl
 8001de4:	f000 fbfc 	bl	80025e0 <scalbn>
 8001de8:	ec57 6b10 	vmov	r6, r7, d0
 8001dec:	2200      	movs	r2, #0
 8001dee:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8001df2:	ee10 0a10 	vmov	r0, s0
 8001df6:	4639      	mov	r1, r7
 8001df8:	f7fe fba2 	bl	8000540 <__aeabi_dmul>
 8001dfc:	ec41 0b10 	vmov	d0, r0, r1
 8001e00:	f000 fb6e 	bl	80024e0 <floor>
 8001e04:	4b7f      	ldr	r3, [pc, #508]	; (8002004 <__kernel_rem_pio2+0x334>)
 8001e06:	ec51 0b10 	vmov	r0, r1, d0
 8001e0a:	2200      	movs	r2, #0
 8001e0c:	f7fe fb98 	bl	8000540 <__aeabi_dmul>
 8001e10:	4602      	mov	r2, r0
 8001e12:	460b      	mov	r3, r1
 8001e14:	4630      	mov	r0, r6
 8001e16:	4639      	mov	r1, r7
 8001e18:	f7fe f9da 	bl	80001d0 <__aeabi_dsub>
 8001e1c:	460f      	mov	r7, r1
 8001e1e:	4606      	mov	r6, r0
 8001e20:	f7fe fe28 	bl	8000a74 <__aeabi_d2iz>
 8001e24:	9007      	str	r0, [sp, #28]
 8001e26:	f7fe fb21 	bl	800046c <__aeabi_i2d>
 8001e2a:	4602      	mov	r2, r0
 8001e2c:	460b      	mov	r3, r1
 8001e2e:	4630      	mov	r0, r6
 8001e30:	4639      	mov	r1, r7
 8001e32:	f7fe f9cd 	bl	80001d0 <__aeabi_dsub>
 8001e36:	f1ba 0f00 	cmp.w	sl, #0
 8001e3a:	4606      	mov	r6, r0
 8001e3c:	460f      	mov	r7, r1
 8001e3e:	dd70      	ble.n	8001f22 <__kernel_rem_pio2+0x252>
 8001e40:	1e62      	subs	r2, r4, #1
 8001e42:	ab0c      	add	r3, sp, #48	; 0x30
 8001e44:	9d07      	ldr	r5, [sp, #28]
 8001e46:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8001e4a:	f1ca 0118 	rsb	r1, sl, #24
 8001e4e:	fa40 f301 	asr.w	r3, r0, r1
 8001e52:	441d      	add	r5, r3
 8001e54:	408b      	lsls	r3, r1
 8001e56:	1ac0      	subs	r0, r0, r3
 8001e58:	ab0c      	add	r3, sp, #48	; 0x30
 8001e5a:	9507      	str	r5, [sp, #28]
 8001e5c:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8001e60:	f1ca 0317 	rsb	r3, sl, #23
 8001e64:	fa40 f303 	asr.w	r3, r0, r3
 8001e68:	9302      	str	r3, [sp, #8]
 8001e6a:	9b02      	ldr	r3, [sp, #8]
 8001e6c:	2b00      	cmp	r3, #0
 8001e6e:	dd66      	ble.n	8001f3e <__kernel_rem_pio2+0x26e>
 8001e70:	9b07      	ldr	r3, [sp, #28]
 8001e72:	2200      	movs	r2, #0
 8001e74:	3301      	adds	r3, #1
 8001e76:	9307      	str	r3, [sp, #28]
 8001e78:	4615      	mov	r5, r2
 8001e7a:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8001e7e:	4294      	cmp	r4, r2
 8001e80:	f300 8099 	bgt.w	8001fb6 <__kernel_rem_pio2+0x2e6>
 8001e84:	f1ba 0f00 	cmp.w	sl, #0
 8001e88:	dd07      	ble.n	8001e9a <__kernel_rem_pio2+0x1ca>
 8001e8a:	f1ba 0f01 	cmp.w	sl, #1
 8001e8e:	f000 80a5 	beq.w	8001fdc <__kernel_rem_pio2+0x30c>
 8001e92:	f1ba 0f02 	cmp.w	sl, #2
 8001e96:	f000 80c1 	beq.w	800201c <__kernel_rem_pio2+0x34c>
 8001e9a:	9b02      	ldr	r3, [sp, #8]
 8001e9c:	2b02      	cmp	r3, #2
 8001e9e:	d14e      	bne.n	8001f3e <__kernel_rem_pio2+0x26e>
 8001ea0:	4632      	mov	r2, r6
 8001ea2:	463b      	mov	r3, r7
 8001ea4:	4958      	ldr	r1, [pc, #352]	; (8002008 <__kernel_rem_pio2+0x338>)
 8001ea6:	2000      	movs	r0, #0
 8001ea8:	f7fe f992 	bl	80001d0 <__aeabi_dsub>
 8001eac:	4606      	mov	r6, r0
 8001eae:	460f      	mov	r7, r1
 8001eb0:	2d00      	cmp	r5, #0
 8001eb2:	d044      	beq.n	8001f3e <__kernel_rem_pio2+0x26e>
 8001eb4:	4650      	mov	r0, sl
 8001eb6:	ed9f 0b50 	vldr	d0, [pc, #320]	; 8001ff8 <__kernel_rem_pio2+0x328>
 8001eba:	f000 fb91 	bl	80025e0 <scalbn>
 8001ebe:	4630      	mov	r0, r6
 8001ec0:	4639      	mov	r1, r7
 8001ec2:	ec53 2b10 	vmov	r2, r3, d0
 8001ec6:	f7fe f983 	bl	80001d0 <__aeabi_dsub>
 8001eca:	4606      	mov	r6, r0
 8001ecc:	460f      	mov	r7, r1
 8001ece:	e036      	b.n	8001f3e <__kernel_rem_pio2+0x26e>
 8001ed0:	4b4e      	ldr	r3, [pc, #312]	; (800200c <__kernel_rem_pio2+0x33c>)
 8001ed2:	2200      	movs	r2, #0
 8001ed4:	4630      	mov	r0, r6
 8001ed6:	4639      	mov	r1, r7
 8001ed8:	f7fe fb32 	bl	8000540 <__aeabi_dmul>
 8001edc:	f7fe fdca 	bl	8000a74 <__aeabi_d2iz>
 8001ee0:	f7fe fac4 	bl	800046c <__aeabi_i2d>
 8001ee4:	4b4a      	ldr	r3, [pc, #296]	; (8002010 <__kernel_rem_pio2+0x340>)
 8001ee6:	2200      	movs	r2, #0
 8001ee8:	4680      	mov	r8, r0
 8001eea:	4689      	mov	r9, r1
 8001eec:	f7fe fb28 	bl	8000540 <__aeabi_dmul>
 8001ef0:	4602      	mov	r2, r0
 8001ef2:	460b      	mov	r3, r1
 8001ef4:	4630      	mov	r0, r6
 8001ef6:	4639      	mov	r1, r7
 8001ef8:	f7fe f96a 	bl	80001d0 <__aeabi_dsub>
 8001efc:	f7fe fdba 	bl	8000a74 <__aeabi_d2iz>
 8001f00:	9b02      	ldr	r3, [sp, #8]
 8001f02:	f843 0b04 	str.w	r0, [r3], #4
 8001f06:	3d01      	subs	r5, #1
 8001f08:	9302      	str	r3, [sp, #8]
 8001f0a:	ab70      	add	r3, sp, #448	; 0x1c0
 8001f0c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8001f10:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f14:	4640      	mov	r0, r8
 8001f16:	4649      	mov	r1, r9
 8001f18:	f7fe f95c 	bl	80001d4 <__adddf3>
 8001f1c:	4606      	mov	r6, r0
 8001f1e:	460f      	mov	r7, r1
 8001f20:	e75b      	b.n	8001dda <__kernel_rem_pio2+0x10a>
 8001f22:	d105      	bne.n	8001f30 <__kernel_rem_pio2+0x260>
 8001f24:	1e63      	subs	r3, r4, #1
 8001f26:	aa0c      	add	r2, sp, #48	; 0x30
 8001f28:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8001f2c:	15c3      	asrs	r3, r0, #23
 8001f2e:	e79b      	b.n	8001e68 <__kernel_rem_pio2+0x198>
 8001f30:	4b38      	ldr	r3, [pc, #224]	; (8002014 <__kernel_rem_pio2+0x344>)
 8001f32:	2200      	movs	r2, #0
 8001f34:	f7fe fd8a 	bl	8000a4c <__aeabi_dcmpge>
 8001f38:	2800      	cmp	r0, #0
 8001f3a:	d139      	bne.n	8001fb0 <__kernel_rem_pio2+0x2e0>
 8001f3c:	9002      	str	r0, [sp, #8]
 8001f3e:	2200      	movs	r2, #0
 8001f40:	2300      	movs	r3, #0
 8001f42:	4630      	mov	r0, r6
 8001f44:	4639      	mov	r1, r7
 8001f46:	f7fe fd63 	bl	8000a10 <__aeabi_dcmpeq>
 8001f4a:	2800      	cmp	r0, #0
 8001f4c:	f000 80b4 	beq.w	80020b8 <__kernel_rem_pio2+0x3e8>
 8001f50:	f104 3bff 	add.w	fp, r4, #4294967295
 8001f54:	465b      	mov	r3, fp
 8001f56:	2200      	movs	r2, #0
 8001f58:	9904      	ldr	r1, [sp, #16]
 8001f5a:	428b      	cmp	r3, r1
 8001f5c:	da65      	bge.n	800202a <__kernel_rem_pio2+0x35a>
 8001f5e:	2a00      	cmp	r2, #0
 8001f60:	d07b      	beq.n	800205a <__kernel_rem_pio2+0x38a>
 8001f62:	ab0c      	add	r3, sp, #48	; 0x30
 8001f64:	f1aa 0a18 	sub.w	sl, sl, #24
 8001f68:	f853 302b 	ldr.w	r3, [r3, fp, lsl #2]
 8001f6c:	2b00      	cmp	r3, #0
 8001f6e:	f000 80a0 	beq.w	80020b2 <__kernel_rem_pio2+0x3e2>
 8001f72:	ed9f 0b21 	vldr	d0, [pc, #132]	; 8001ff8 <__kernel_rem_pio2+0x328>
 8001f76:	4650      	mov	r0, sl
 8001f78:	f000 fb32 	bl	80025e0 <scalbn>
 8001f7c:	4f23      	ldr	r7, [pc, #140]	; (800200c <__kernel_rem_pio2+0x33c>)
 8001f7e:	ec55 4b10 	vmov	r4, r5, d0
 8001f82:	46d8      	mov	r8, fp
 8001f84:	2600      	movs	r6, #0
 8001f86:	f1b8 0f00 	cmp.w	r8, #0
 8001f8a:	f280 80cf 	bge.w	800212c <__kernel_rem_pio2+0x45c>
 8001f8e:	ed9f 8b18 	vldr	d8, [pc, #96]	; 8001ff0 <__kernel_rem_pio2+0x320>
 8001f92:	465f      	mov	r7, fp
 8001f94:	f04f 0800 	mov.w	r8, #0
 8001f98:	2f00      	cmp	r7, #0
 8001f9a:	f2c0 80fd 	blt.w	8002198 <__kernel_rem_pio2+0x4c8>
 8001f9e:	ab70      	add	r3, sp, #448	; 0x1c0
 8001fa0:	f8df a074 	ldr.w	sl, [pc, #116]	; 8002018 <__kernel_rem_pio2+0x348>
 8001fa4:	ec55 4b18 	vmov	r4, r5, d8
 8001fa8:	eb03 09c7 	add.w	r9, r3, r7, lsl #3
 8001fac:	2600      	movs	r6, #0
 8001fae:	e0e5      	b.n	800217c <__kernel_rem_pio2+0x4ac>
 8001fb0:	2302      	movs	r3, #2
 8001fb2:	9302      	str	r3, [sp, #8]
 8001fb4:	e75c      	b.n	8001e70 <__kernel_rem_pio2+0x1a0>
 8001fb6:	f8db 3000 	ldr.w	r3, [fp]
 8001fba:	b955      	cbnz	r5, 8001fd2 <__kernel_rem_pio2+0x302>
 8001fbc:	b123      	cbz	r3, 8001fc8 <__kernel_rem_pio2+0x2f8>
 8001fbe:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 8001fc2:	f8cb 3000 	str.w	r3, [fp]
 8001fc6:	2301      	movs	r3, #1
 8001fc8:	3201      	adds	r2, #1
 8001fca:	f10b 0b04 	add.w	fp, fp, #4
 8001fce:	461d      	mov	r5, r3
 8001fd0:	e755      	b.n	8001e7e <__kernel_rem_pio2+0x1ae>
 8001fd2:	1acb      	subs	r3, r1, r3
 8001fd4:	f8cb 3000 	str.w	r3, [fp]
 8001fd8:	462b      	mov	r3, r5
 8001fda:	e7f5      	b.n	8001fc8 <__kernel_rem_pio2+0x2f8>
 8001fdc:	1e62      	subs	r2, r4, #1
 8001fde:	ab0c      	add	r3, sp, #48	; 0x30
 8001fe0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001fe4:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8001fe8:	a90c      	add	r1, sp, #48	; 0x30
 8001fea:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8001fee:	e754      	b.n	8001e9a <__kernel_rem_pio2+0x1ca>
	...
 8001ffc:	3ff00000 	.word	0x3ff00000
 8002000:	080028d0 	.word	0x080028d0
 8002004:	40200000 	.word	0x40200000
 8002008:	3ff00000 	.word	0x3ff00000
 800200c:	3e700000 	.word	0x3e700000
 8002010:	41700000 	.word	0x41700000
 8002014:	3fe00000 	.word	0x3fe00000
 8002018:	08002890 	.word	0x08002890
 800201c:	1e62      	subs	r2, r4, #1
 800201e:	ab0c      	add	r3, sp, #48	; 0x30
 8002020:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002024:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8002028:	e7de      	b.n	8001fe8 <__kernel_rem_pio2+0x318>
 800202a:	a90c      	add	r1, sp, #48	; 0x30
 800202c:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8002030:	3b01      	subs	r3, #1
 8002032:	430a      	orrs	r2, r1
 8002034:	e790      	b.n	8001f58 <__kernel_rem_pio2+0x288>
 8002036:	3301      	adds	r3, #1
 8002038:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 800203c:	2900      	cmp	r1, #0
 800203e:	d0fa      	beq.n	8002036 <__kernel_rem_pio2+0x366>
 8002040:	9a08      	ldr	r2, [sp, #32]
 8002042:	18e3      	adds	r3, r4, r3
 8002044:	18a6      	adds	r6, r4, r2
 8002046:	aa20      	add	r2, sp, #128	; 0x80
 8002048:	1c65      	adds	r5, r4, #1
 800204a:	eb02 06c6 	add.w	r6, r2, r6, lsl #3
 800204e:	9302      	str	r3, [sp, #8]
 8002050:	9b02      	ldr	r3, [sp, #8]
 8002052:	42ab      	cmp	r3, r5
 8002054:	da04      	bge.n	8002060 <__kernel_rem_pio2+0x390>
 8002056:	461c      	mov	r4, r3
 8002058:	e6b5      	b.n	8001dc6 <__kernel_rem_pio2+0xf6>
 800205a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800205c:	2301      	movs	r3, #1
 800205e:	e7eb      	b.n	8002038 <__kernel_rem_pio2+0x368>
 8002060:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002062:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8002066:	f7fe fa01 	bl	800046c <__aeabi_i2d>
 800206a:	e8e6 0102 	strd	r0, r1, [r6], #8
 800206e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002070:	46b3      	mov	fp, r6
 8002072:	461c      	mov	r4, r3
 8002074:	2700      	movs	r7, #0
 8002076:	f04f 0800 	mov.w	r8, #0
 800207a:	f04f 0900 	mov.w	r9, #0
 800207e:	9b06      	ldr	r3, [sp, #24]
 8002080:	429f      	cmp	r7, r3
 8002082:	dd06      	ble.n	8002092 <__kernel_rem_pio2+0x3c2>
 8002084:	ab70      	add	r3, sp, #448	; 0x1c0
 8002086:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800208a:	e9c3 8900 	strd	r8, r9, [r3]
 800208e:	3501      	adds	r5, #1
 8002090:	e7de      	b.n	8002050 <__kernel_rem_pio2+0x380>
 8002092:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 8002096:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 800209a:	f7fe fa51 	bl	8000540 <__aeabi_dmul>
 800209e:	4602      	mov	r2, r0
 80020a0:	460b      	mov	r3, r1
 80020a2:	4640      	mov	r0, r8
 80020a4:	4649      	mov	r1, r9
 80020a6:	f7fe f895 	bl	80001d4 <__adddf3>
 80020aa:	3701      	adds	r7, #1
 80020ac:	4680      	mov	r8, r0
 80020ae:	4689      	mov	r9, r1
 80020b0:	e7e5      	b.n	800207e <__kernel_rem_pio2+0x3ae>
 80020b2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80020b6:	e754      	b.n	8001f62 <__kernel_rem_pio2+0x292>
 80020b8:	ec47 6b10 	vmov	d0, r6, r7
 80020bc:	f1ca 0000 	rsb	r0, sl, #0
 80020c0:	f000 fa8e 	bl	80025e0 <scalbn>
 80020c4:	ec57 6b10 	vmov	r6, r7, d0
 80020c8:	4b9f      	ldr	r3, [pc, #636]	; (8002348 <__kernel_rem_pio2+0x678>)
 80020ca:	ee10 0a10 	vmov	r0, s0
 80020ce:	2200      	movs	r2, #0
 80020d0:	4639      	mov	r1, r7
 80020d2:	f7fe fcbb 	bl	8000a4c <__aeabi_dcmpge>
 80020d6:	b300      	cbz	r0, 800211a <__kernel_rem_pio2+0x44a>
 80020d8:	4b9c      	ldr	r3, [pc, #624]	; (800234c <__kernel_rem_pio2+0x67c>)
 80020da:	2200      	movs	r2, #0
 80020dc:	4630      	mov	r0, r6
 80020de:	4639      	mov	r1, r7
 80020e0:	f7fe fa2e 	bl	8000540 <__aeabi_dmul>
 80020e4:	f7fe fcc6 	bl	8000a74 <__aeabi_d2iz>
 80020e8:	4605      	mov	r5, r0
 80020ea:	f7fe f9bf 	bl	800046c <__aeabi_i2d>
 80020ee:	4b96      	ldr	r3, [pc, #600]	; (8002348 <__kernel_rem_pio2+0x678>)
 80020f0:	2200      	movs	r2, #0
 80020f2:	f7fe fa25 	bl	8000540 <__aeabi_dmul>
 80020f6:	460b      	mov	r3, r1
 80020f8:	4602      	mov	r2, r0
 80020fa:	4639      	mov	r1, r7
 80020fc:	4630      	mov	r0, r6
 80020fe:	f7fe f867 	bl	80001d0 <__aeabi_dsub>
 8002102:	f7fe fcb7 	bl	8000a74 <__aeabi_d2iz>
 8002106:	f104 0b01 	add.w	fp, r4, #1
 800210a:	ab0c      	add	r3, sp, #48	; 0x30
 800210c:	f10a 0a18 	add.w	sl, sl, #24
 8002110:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8002114:	f843 502b 	str.w	r5, [r3, fp, lsl #2]
 8002118:	e72b      	b.n	8001f72 <__kernel_rem_pio2+0x2a2>
 800211a:	4630      	mov	r0, r6
 800211c:	4639      	mov	r1, r7
 800211e:	f7fe fca9 	bl	8000a74 <__aeabi_d2iz>
 8002122:	ab0c      	add	r3, sp, #48	; 0x30
 8002124:	46a3      	mov	fp, r4
 8002126:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 800212a:	e722      	b.n	8001f72 <__kernel_rem_pio2+0x2a2>
 800212c:	ab70      	add	r3, sp, #448	; 0x1c0
 800212e:	eb03 09c8 	add.w	r9, r3, r8, lsl #3
 8002132:	ab0c      	add	r3, sp, #48	; 0x30
 8002134:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8002138:	f7fe f998 	bl	800046c <__aeabi_i2d>
 800213c:	4622      	mov	r2, r4
 800213e:	462b      	mov	r3, r5
 8002140:	f7fe f9fe 	bl	8000540 <__aeabi_dmul>
 8002144:	4632      	mov	r2, r6
 8002146:	e9c9 0100 	strd	r0, r1, [r9]
 800214a:	463b      	mov	r3, r7
 800214c:	4620      	mov	r0, r4
 800214e:	4629      	mov	r1, r5
 8002150:	f7fe f9f6 	bl	8000540 <__aeabi_dmul>
 8002154:	f108 38ff 	add.w	r8, r8, #4294967295
 8002158:	4604      	mov	r4, r0
 800215a:	460d      	mov	r5, r1
 800215c:	e713      	b.n	8001f86 <__kernel_rem_pio2+0x2b6>
 800215e:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 8002162:	e8fa 0102 	ldrd	r0, r1, [sl], #8
 8002166:	f7fe f9eb 	bl	8000540 <__aeabi_dmul>
 800216a:	4602      	mov	r2, r0
 800216c:	460b      	mov	r3, r1
 800216e:	4620      	mov	r0, r4
 8002170:	4629      	mov	r1, r5
 8002172:	f7fe f82f 	bl	80001d4 <__adddf3>
 8002176:	3601      	adds	r6, #1
 8002178:	4604      	mov	r4, r0
 800217a:	460d      	mov	r5, r1
 800217c:	9b04      	ldr	r3, [sp, #16]
 800217e:	429e      	cmp	r6, r3
 8002180:	dc01      	bgt.n	8002186 <__kernel_rem_pio2+0x4b6>
 8002182:	45b0      	cmp	r8, r6
 8002184:	daeb      	bge.n	800215e <__kernel_rem_pio2+0x48e>
 8002186:	ab48      	add	r3, sp, #288	; 0x120
 8002188:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 800218c:	e9c3 4500 	strd	r4, r5, [r3]
 8002190:	3f01      	subs	r7, #1
 8002192:	f108 0801 	add.w	r8, r8, #1
 8002196:	e6ff      	b.n	8001f98 <__kernel_rem_pio2+0x2c8>
 8002198:	9ba4      	ldr	r3, [sp, #656]	; 0x290
 800219a:	2b02      	cmp	r3, #2
 800219c:	dc0b      	bgt.n	80021b6 <__kernel_rem_pio2+0x4e6>
 800219e:	2b00      	cmp	r3, #0
 80021a0:	dc6e      	bgt.n	8002280 <__kernel_rem_pio2+0x5b0>
 80021a2:	d045      	beq.n	8002230 <__kernel_rem_pio2+0x560>
 80021a4:	9b07      	ldr	r3, [sp, #28]
 80021a6:	f003 0007 	and.w	r0, r3, #7
 80021aa:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
 80021ae:	ecbd 8b02 	vpop	{d8}
 80021b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80021b6:	9ba4      	ldr	r3, [sp, #656]	; 0x290
 80021b8:	2b03      	cmp	r3, #3
 80021ba:	d1f3      	bne.n	80021a4 <__kernel_rem_pio2+0x4d4>
 80021bc:	ab48      	add	r3, sp, #288	; 0x120
 80021be:	eb03 0acb 	add.w	sl, r3, fp, lsl #3
 80021c2:	46d0      	mov	r8, sl
 80021c4:	46d9      	mov	r9, fp
 80021c6:	f1b9 0f00 	cmp.w	r9, #0
 80021ca:	f1a8 0808 	sub.w	r8, r8, #8
 80021ce:	dc64      	bgt.n	800229a <__kernel_rem_pio2+0x5ca>
 80021d0:	465c      	mov	r4, fp
 80021d2:	2c01      	cmp	r4, #1
 80021d4:	f1aa 0a08 	sub.w	sl, sl, #8
 80021d8:	dc7e      	bgt.n	80022d8 <__kernel_rem_pio2+0x608>
 80021da:	2000      	movs	r0, #0
 80021dc:	2100      	movs	r1, #0
 80021de:	f1bb 0f01 	cmp.w	fp, #1
 80021e2:	f300 8097 	bgt.w	8002314 <__kernel_rem_pio2+0x644>
 80021e6:	9b02      	ldr	r3, [sp, #8]
 80021e8:	e9dd 5648 	ldrd	r5, r6, [sp, #288]	; 0x120
 80021ec:	e9dd 784a 	ldrd	r7, r8, [sp, #296]	; 0x128
 80021f0:	2b00      	cmp	r3, #0
 80021f2:	f040 8099 	bne.w	8002328 <__kernel_rem_pio2+0x658>
 80021f6:	9b01      	ldr	r3, [sp, #4]
 80021f8:	e9c3 5600 	strd	r5, r6, [r3]
 80021fc:	e9c3 7802 	strd	r7, r8, [r3, #8]
 8002200:	e9c3 0104 	strd	r0, r1, [r3, #16]
 8002204:	e7ce      	b.n	80021a4 <__kernel_rem_pio2+0x4d4>
 8002206:	ab48      	add	r3, sp, #288	; 0x120
 8002208:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800220c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002210:	f7fd ffe0 	bl	80001d4 <__adddf3>
 8002214:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002218:	f1bb 0f00 	cmp.w	fp, #0
 800221c:	daf3      	bge.n	8002206 <__kernel_rem_pio2+0x536>
 800221e:	9b02      	ldr	r3, [sp, #8]
 8002220:	b113      	cbz	r3, 8002228 <__kernel_rem_pio2+0x558>
 8002222:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002226:	4619      	mov	r1, r3
 8002228:	9b01      	ldr	r3, [sp, #4]
 800222a:	e9c3 0100 	strd	r0, r1, [r3]
 800222e:	e7b9      	b.n	80021a4 <__kernel_rem_pio2+0x4d4>
 8002230:	2000      	movs	r0, #0
 8002232:	2100      	movs	r1, #0
 8002234:	e7f0      	b.n	8002218 <__kernel_rem_pio2+0x548>
 8002236:	ab48      	add	r3, sp, #288	; 0x120
 8002238:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800223c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002240:	f7fd ffc8 	bl	80001d4 <__adddf3>
 8002244:	3c01      	subs	r4, #1
 8002246:	2c00      	cmp	r4, #0
 8002248:	daf5      	bge.n	8002236 <__kernel_rem_pio2+0x566>
 800224a:	9b02      	ldr	r3, [sp, #8]
 800224c:	b1e3      	cbz	r3, 8002288 <__kernel_rem_pio2+0x5b8>
 800224e:	4602      	mov	r2, r0
 8002250:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002254:	9c01      	ldr	r4, [sp, #4]
 8002256:	e9c4 2300 	strd	r2, r3, [r4]
 800225a:	4602      	mov	r2, r0
 800225c:	460b      	mov	r3, r1
 800225e:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	; 0x120
 8002262:	f7fd ffb5 	bl	80001d0 <__aeabi_dsub>
 8002266:	ad4a      	add	r5, sp, #296	; 0x128
 8002268:	2401      	movs	r4, #1
 800226a:	45a3      	cmp	fp, r4
 800226c:	da0f      	bge.n	800228e <__kernel_rem_pio2+0x5be>
 800226e:	9b02      	ldr	r3, [sp, #8]
 8002270:	b113      	cbz	r3, 8002278 <__kernel_rem_pio2+0x5a8>
 8002272:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002276:	4619      	mov	r1, r3
 8002278:	9b01      	ldr	r3, [sp, #4]
 800227a:	e9c3 0102 	strd	r0, r1, [r3, #8]
 800227e:	e791      	b.n	80021a4 <__kernel_rem_pio2+0x4d4>
 8002280:	465c      	mov	r4, fp
 8002282:	2000      	movs	r0, #0
 8002284:	2100      	movs	r1, #0
 8002286:	e7de      	b.n	8002246 <__kernel_rem_pio2+0x576>
 8002288:	4602      	mov	r2, r0
 800228a:	460b      	mov	r3, r1
 800228c:	e7e2      	b.n	8002254 <__kernel_rem_pio2+0x584>
 800228e:	e8f5 2302 	ldrd	r2, r3, [r5], #8
 8002292:	f7fd ff9f 	bl	80001d4 <__adddf3>
 8002296:	3401      	adds	r4, #1
 8002298:	e7e7      	b.n	800226a <__kernel_rem_pio2+0x59a>
 800229a:	e9d8 4500 	ldrd	r4, r5, [r8]
 800229e:	e9d8 6702 	ldrd	r6, r7, [r8, #8]
 80022a2:	4620      	mov	r0, r4
 80022a4:	4632      	mov	r2, r6
 80022a6:	463b      	mov	r3, r7
 80022a8:	4629      	mov	r1, r5
 80022aa:	f7fd ff93 	bl	80001d4 <__adddf3>
 80022ae:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80022b2:	4602      	mov	r2, r0
 80022b4:	460b      	mov	r3, r1
 80022b6:	4620      	mov	r0, r4
 80022b8:	4629      	mov	r1, r5
 80022ba:	f7fd ff89 	bl	80001d0 <__aeabi_dsub>
 80022be:	4632      	mov	r2, r6
 80022c0:	463b      	mov	r3, r7
 80022c2:	f7fd ff87 	bl	80001d4 <__adddf3>
 80022c6:	ed9d 7b04 	vldr	d7, [sp, #16]
 80022ca:	e9c8 0102 	strd	r0, r1, [r8, #8]
 80022ce:	ed88 7b00 	vstr	d7, [r8]
 80022d2:	f109 39ff 	add.w	r9, r9, #4294967295
 80022d6:	e776      	b.n	80021c6 <__kernel_rem_pio2+0x4f6>
 80022d8:	e9da 8900 	ldrd	r8, r9, [sl]
 80022dc:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 80022e0:	4640      	mov	r0, r8
 80022e2:	4632      	mov	r2, r6
 80022e4:	463b      	mov	r3, r7
 80022e6:	4649      	mov	r1, r9
 80022e8:	f7fd ff74 	bl	80001d4 <__adddf3>
 80022ec:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80022f0:	4602      	mov	r2, r0
 80022f2:	460b      	mov	r3, r1
 80022f4:	4640      	mov	r0, r8
 80022f6:	4649      	mov	r1, r9
 80022f8:	f7fd ff6a 	bl	80001d0 <__aeabi_dsub>
 80022fc:	4632      	mov	r2, r6
 80022fe:	463b      	mov	r3, r7
 8002300:	f7fd ff68 	bl	80001d4 <__adddf3>
 8002304:	ed9d 7b04 	vldr	d7, [sp, #16]
 8002308:	e9ca 0102 	strd	r0, r1, [sl, #8]
 800230c:	ed8a 7b00 	vstr	d7, [sl]
 8002310:	3c01      	subs	r4, #1
 8002312:	e75e      	b.n	80021d2 <__kernel_rem_pio2+0x502>
 8002314:	ab48      	add	r3, sp, #288	; 0x120
 8002316:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800231a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800231e:	f7fd ff59 	bl	80001d4 <__adddf3>
 8002322:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002326:	e75a      	b.n	80021de <__kernel_rem_pio2+0x50e>
 8002328:	9b01      	ldr	r3, [sp, #4]
 800232a:	9a01      	ldr	r2, [sp, #4]
 800232c:	601d      	str	r5, [r3, #0]
 800232e:	f106 4400 	add.w	r4, r6, #2147483648	; 0x80000000
 8002332:	605c      	str	r4, [r3, #4]
 8002334:	609f      	str	r7, [r3, #8]
 8002336:	f108 4300 	add.w	r3, r8, #2147483648	; 0x80000000
 800233a:	60d3      	str	r3, [r2, #12]
 800233c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002340:	6110      	str	r0, [r2, #16]
 8002342:	6153      	str	r3, [r2, #20]
 8002344:	e72e      	b.n	80021a4 <__kernel_rem_pio2+0x4d4>
 8002346:	bf00      	nop
 8002348:	41700000 	.word	0x41700000
 800234c:	3e700000 	.word	0x3e700000

08002350 <__kernel_sin>:
 8002350:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002354:	ed2d 8b04 	vpush	{d8-d9}
 8002358:	eeb0 8a41 	vmov.f32	s16, s2
 800235c:	eef0 8a61 	vmov.f32	s17, s3
 8002360:	ec55 4b10 	vmov	r4, r5, d0
 8002364:	b083      	sub	sp, #12
 8002366:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 800236a:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 800236e:	9001      	str	r0, [sp, #4]
 8002370:	da06      	bge.n	8002380 <__kernel_sin+0x30>
 8002372:	ee10 0a10 	vmov	r0, s0
 8002376:	4629      	mov	r1, r5
 8002378:	f7fe fb7c 	bl	8000a74 <__aeabi_d2iz>
 800237c:	2800      	cmp	r0, #0
 800237e:	d051      	beq.n	8002424 <__kernel_sin+0xd4>
 8002380:	4622      	mov	r2, r4
 8002382:	462b      	mov	r3, r5
 8002384:	4620      	mov	r0, r4
 8002386:	4629      	mov	r1, r5
 8002388:	f7fe f8da 	bl	8000540 <__aeabi_dmul>
 800238c:	4682      	mov	sl, r0
 800238e:	468b      	mov	fp, r1
 8002390:	4602      	mov	r2, r0
 8002392:	460b      	mov	r3, r1
 8002394:	4620      	mov	r0, r4
 8002396:	4629      	mov	r1, r5
 8002398:	f7fe f8d2 	bl	8000540 <__aeabi_dmul>
 800239c:	a341      	add	r3, pc, #260	; (adr r3, 80024a4 <__kernel_sin+0x154>)
 800239e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023a2:	4680      	mov	r8, r0
 80023a4:	4689      	mov	r9, r1
 80023a6:	4650      	mov	r0, sl
 80023a8:	4659      	mov	r1, fp
 80023aa:	f7fe f8c9 	bl	8000540 <__aeabi_dmul>
 80023ae:	a33f      	add	r3, pc, #252	; (adr r3, 80024ac <__kernel_sin+0x15c>)
 80023b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023b4:	f7fd ff0c 	bl	80001d0 <__aeabi_dsub>
 80023b8:	4652      	mov	r2, sl
 80023ba:	465b      	mov	r3, fp
 80023bc:	f7fe f8c0 	bl	8000540 <__aeabi_dmul>
 80023c0:	a33c      	add	r3, pc, #240	; (adr r3, 80024b4 <__kernel_sin+0x164>)
 80023c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023c6:	f7fd ff05 	bl	80001d4 <__adddf3>
 80023ca:	4652      	mov	r2, sl
 80023cc:	465b      	mov	r3, fp
 80023ce:	f7fe f8b7 	bl	8000540 <__aeabi_dmul>
 80023d2:	a33a      	add	r3, pc, #232	; (adr r3, 80024bc <__kernel_sin+0x16c>)
 80023d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023d8:	f7fd fefa 	bl	80001d0 <__aeabi_dsub>
 80023dc:	4652      	mov	r2, sl
 80023de:	465b      	mov	r3, fp
 80023e0:	f7fe f8ae 	bl	8000540 <__aeabi_dmul>
 80023e4:	a337      	add	r3, pc, #220	; (adr r3, 80024c4 <__kernel_sin+0x174>)
 80023e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023ea:	f7fd fef3 	bl	80001d4 <__adddf3>
 80023ee:	9b01      	ldr	r3, [sp, #4]
 80023f0:	4606      	mov	r6, r0
 80023f2:	460f      	mov	r7, r1
 80023f4:	b9eb      	cbnz	r3, 8002432 <__kernel_sin+0xe2>
 80023f6:	4602      	mov	r2, r0
 80023f8:	460b      	mov	r3, r1
 80023fa:	4650      	mov	r0, sl
 80023fc:	4659      	mov	r1, fp
 80023fe:	f7fe f89f 	bl	8000540 <__aeabi_dmul>
 8002402:	a325      	add	r3, pc, #148	; (adr r3, 8002498 <__kernel_sin+0x148>)
 8002404:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002408:	f7fd fee2 	bl	80001d0 <__aeabi_dsub>
 800240c:	4642      	mov	r2, r8
 800240e:	464b      	mov	r3, r9
 8002410:	f7fe f896 	bl	8000540 <__aeabi_dmul>
 8002414:	4602      	mov	r2, r0
 8002416:	460b      	mov	r3, r1
 8002418:	4620      	mov	r0, r4
 800241a:	4629      	mov	r1, r5
 800241c:	f7fd feda 	bl	80001d4 <__adddf3>
 8002420:	4604      	mov	r4, r0
 8002422:	460d      	mov	r5, r1
 8002424:	ec45 4b10 	vmov	d0, r4, r5
 8002428:	b003      	add	sp, #12
 800242a:	ecbd 8b04 	vpop	{d8-d9}
 800242e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002432:	4b1b      	ldr	r3, [pc, #108]	; (80024a0 <__kernel_sin+0x150>)
 8002434:	ec51 0b18 	vmov	r0, r1, d8
 8002438:	2200      	movs	r2, #0
 800243a:	f7fe f881 	bl	8000540 <__aeabi_dmul>
 800243e:	4632      	mov	r2, r6
 8002440:	ec41 0b19 	vmov	d9, r0, r1
 8002444:	463b      	mov	r3, r7
 8002446:	4640      	mov	r0, r8
 8002448:	4649      	mov	r1, r9
 800244a:	f7fe f879 	bl	8000540 <__aeabi_dmul>
 800244e:	4602      	mov	r2, r0
 8002450:	460b      	mov	r3, r1
 8002452:	ec51 0b19 	vmov	r0, r1, d9
 8002456:	f7fd febb 	bl	80001d0 <__aeabi_dsub>
 800245a:	4652      	mov	r2, sl
 800245c:	465b      	mov	r3, fp
 800245e:	f7fe f86f 	bl	8000540 <__aeabi_dmul>
 8002462:	ec53 2b18 	vmov	r2, r3, d8
 8002466:	f7fd feb3 	bl	80001d0 <__aeabi_dsub>
 800246a:	a30b      	add	r3, pc, #44	; (adr r3, 8002498 <__kernel_sin+0x148>)
 800246c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002470:	4606      	mov	r6, r0
 8002472:	460f      	mov	r7, r1
 8002474:	4640      	mov	r0, r8
 8002476:	4649      	mov	r1, r9
 8002478:	f7fe f862 	bl	8000540 <__aeabi_dmul>
 800247c:	4602      	mov	r2, r0
 800247e:	460b      	mov	r3, r1
 8002480:	4630      	mov	r0, r6
 8002482:	4639      	mov	r1, r7
 8002484:	f7fd fea6 	bl	80001d4 <__adddf3>
 8002488:	4602      	mov	r2, r0
 800248a:	460b      	mov	r3, r1
 800248c:	4620      	mov	r0, r4
 800248e:	4629      	mov	r1, r5
 8002490:	f7fd fe9e 	bl	80001d0 <__aeabi_dsub>
 8002494:	e7c4      	b.n	8002420 <__kernel_sin+0xd0>
 8002496:	bf00      	nop
 8002498:	55555549 	.word	0x55555549
 800249c:	3fc55555 	.word	0x3fc55555
 80024a0:	3fe00000 	.word	0x3fe00000
 80024a4:	5acfd57c 	.word	0x5acfd57c
 80024a8:	3de5d93a 	.word	0x3de5d93a
 80024ac:	8a2b9ceb 	.word	0x8a2b9ceb
 80024b0:	3e5ae5e6 	.word	0x3e5ae5e6
 80024b4:	57b1fe7d 	.word	0x57b1fe7d
 80024b8:	3ec71de3 	.word	0x3ec71de3
 80024bc:	19c161d5 	.word	0x19c161d5
 80024c0:	3f2a01a0 	.word	0x3f2a01a0
 80024c4:	1110f8a6 	.word	0x1110f8a6
 80024c8:	3f811111 	.word	0x3f811111

080024cc <fabs>:
 80024cc:	ec51 0b10 	vmov	r0, r1, d0
 80024d0:	ee10 2a10 	vmov	r2, s0
 80024d4:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80024d8:	ec43 2b10 	vmov	d0, r2, r3
 80024dc:	4770      	bx	lr
	...

080024e0 <floor>:
 80024e0:	ec51 0b10 	vmov	r0, r1, d0
 80024e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80024e8:	f3c1 570a 	ubfx	r7, r1, #20, #11
 80024ec:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 80024f0:	2e13      	cmp	r6, #19
 80024f2:	ee10 5a10 	vmov	r5, s0
 80024f6:	ee10 8a10 	vmov	r8, s0
 80024fa:	460c      	mov	r4, r1
 80024fc:	dc32      	bgt.n	8002564 <floor+0x84>
 80024fe:	2e00      	cmp	r6, #0
 8002500:	da14      	bge.n	800252c <floor+0x4c>
 8002502:	a333      	add	r3, pc, #204	; (adr r3, 80025d0 <floor+0xf0>)
 8002504:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002508:	f7fd fe64 	bl	80001d4 <__adddf3>
 800250c:	2200      	movs	r2, #0
 800250e:	2300      	movs	r3, #0
 8002510:	f7fe faa6 	bl	8000a60 <__aeabi_dcmpgt>
 8002514:	b138      	cbz	r0, 8002526 <floor+0x46>
 8002516:	2c00      	cmp	r4, #0
 8002518:	da57      	bge.n	80025ca <floor+0xea>
 800251a:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 800251e:	431d      	orrs	r5, r3
 8002520:	d001      	beq.n	8002526 <floor+0x46>
 8002522:	4c2d      	ldr	r4, [pc, #180]	; (80025d8 <floor+0xf8>)
 8002524:	2500      	movs	r5, #0
 8002526:	4621      	mov	r1, r4
 8002528:	4628      	mov	r0, r5
 800252a:	e025      	b.n	8002578 <floor+0x98>
 800252c:	4f2b      	ldr	r7, [pc, #172]	; (80025dc <floor+0xfc>)
 800252e:	4137      	asrs	r7, r6
 8002530:	ea01 0307 	and.w	r3, r1, r7
 8002534:	4303      	orrs	r3, r0
 8002536:	d01f      	beq.n	8002578 <floor+0x98>
 8002538:	a325      	add	r3, pc, #148	; (adr r3, 80025d0 <floor+0xf0>)
 800253a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800253e:	f7fd fe49 	bl	80001d4 <__adddf3>
 8002542:	2200      	movs	r2, #0
 8002544:	2300      	movs	r3, #0
 8002546:	f7fe fa8b 	bl	8000a60 <__aeabi_dcmpgt>
 800254a:	2800      	cmp	r0, #0
 800254c:	d0eb      	beq.n	8002526 <floor+0x46>
 800254e:	2c00      	cmp	r4, #0
 8002550:	bfbe      	ittt	lt
 8002552:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8002556:	fa43 f606 	asrlt.w	r6, r3, r6
 800255a:	19a4      	addlt	r4, r4, r6
 800255c:	ea24 0407 	bic.w	r4, r4, r7
 8002560:	2500      	movs	r5, #0
 8002562:	e7e0      	b.n	8002526 <floor+0x46>
 8002564:	2e33      	cmp	r6, #51	; 0x33
 8002566:	dd0b      	ble.n	8002580 <floor+0xa0>
 8002568:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 800256c:	d104      	bne.n	8002578 <floor+0x98>
 800256e:	ee10 2a10 	vmov	r2, s0
 8002572:	460b      	mov	r3, r1
 8002574:	f7fd fe2e 	bl	80001d4 <__adddf3>
 8002578:	ec41 0b10 	vmov	d0, r0, r1
 800257c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002580:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 8002584:	f04f 33ff 	mov.w	r3, #4294967295
 8002588:	fa23 f707 	lsr.w	r7, r3, r7
 800258c:	4207      	tst	r7, r0
 800258e:	d0f3      	beq.n	8002578 <floor+0x98>
 8002590:	a30f      	add	r3, pc, #60	; (adr r3, 80025d0 <floor+0xf0>)
 8002592:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002596:	f7fd fe1d 	bl	80001d4 <__adddf3>
 800259a:	2200      	movs	r2, #0
 800259c:	2300      	movs	r3, #0
 800259e:	f7fe fa5f 	bl	8000a60 <__aeabi_dcmpgt>
 80025a2:	2800      	cmp	r0, #0
 80025a4:	d0bf      	beq.n	8002526 <floor+0x46>
 80025a6:	2c00      	cmp	r4, #0
 80025a8:	da02      	bge.n	80025b0 <floor+0xd0>
 80025aa:	2e14      	cmp	r6, #20
 80025ac:	d103      	bne.n	80025b6 <floor+0xd6>
 80025ae:	3401      	adds	r4, #1
 80025b0:	ea25 0507 	bic.w	r5, r5, r7
 80025b4:	e7b7      	b.n	8002526 <floor+0x46>
 80025b6:	2301      	movs	r3, #1
 80025b8:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 80025bc:	fa03 f606 	lsl.w	r6, r3, r6
 80025c0:	4435      	add	r5, r6
 80025c2:	4545      	cmp	r5, r8
 80025c4:	bf38      	it	cc
 80025c6:	18e4      	addcc	r4, r4, r3
 80025c8:	e7f2      	b.n	80025b0 <floor+0xd0>
 80025ca:	2500      	movs	r5, #0
 80025cc:	462c      	mov	r4, r5
 80025ce:	e7aa      	b.n	8002526 <floor+0x46>
 80025d0:	8800759c 	.word	0x8800759c
 80025d4:	7e37e43c 	.word	0x7e37e43c
 80025d8:	bff00000 	.word	0xbff00000
 80025dc:	000fffff 	.word	0x000fffff

080025e0 <scalbn>:
 80025e0:	b570      	push	{r4, r5, r6, lr}
 80025e2:	ec55 4b10 	vmov	r4, r5, d0
 80025e6:	f3c5 520a 	ubfx	r2, r5, #20, #11
 80025ea:	4606      	mov	r6, r0
 80025ec:	462b      	mov	r3, r5
 80025ee:	b99a      	cbnz	r2, 8002618 <scalbn+0x38>
 80025f0:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80025f4:	4323      	orrs	r3, r4
 80025f6:	d036      	beq.n	8002666 <scalbn+0x86>
 80025f8:	4b39      	ldr	r3, [pc, #228]	; (80026e0 <scalbn+0x100>)
 80025fa:	4629      	mov	r1, r5
 80025fc:	ee10 0a10 	vmov	r0, s0
 8002600:	2200      	movs	r2, #0
 8002602:	f7fd ff9d 	bl	8000540 <__aeabi_dmul>
 8002606:	4b37      	ldr	r3, [pc, #220]	; (80026e4 <scalbn+0x104>)
 8002608:	429e      	cmp	r6, r3
 800260a:	4604      	mov	r4, r0
 800260c:	460d      	mov	r5, r1
 800260e:	da10      	bge.n	8002632 <scalbn+0x52>
 8002610:	a32b      	add	r3, pc, #172	; (adr r3, 80026c0 <scalbn+0xe0>)
 8002612:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002616:	e03a      	b.n	800268e <scalbn+0xae>
 8002618:	f240 71ff 	movw	r1, #2047	; 0x7ff
 800261c:	428a      	cmp	r2, r1
 800261e:	d10c      	bne.n	800263a <scalbn+0x5a>
 8002620:	ee10 2a10 	vmov	r2, s0
 8002624:	4620      	mov	r0, r4
 8002626:	4629      	mov	r1, r5
 8002628:	f7fd fdd4 	bl	80001d4 <__adddf3>
 800262c:	4604      	mov	r4, r0
 800262e:	460d      	mov	r5, r1
 8002630:	e019      	b.n	8002666 <scalbn+0x86>
 8002632:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8002636:	460b      	mov	r3, r1
 8002638:	3a36      	subs	r2, #54	; 0x36
 800263a:	4432      	add	r2, r6
 800263c:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8002640:	428a      	cmp	r2, r1
 8002642:	dd08      	ble.n	8002656 <scalbn+0x76>
 8002644:	2d00      	cmp	r5, #0
 8002646:	a120      	add	r1, pc, #128	; (adr r1, 80026c8 <scalbn+0xe8>)
 8002648:	e9d1 0100 	ldrd	r0, r1, [r1]
 800264c:	da1c      	bge.n	8002688 <scalbn+0xa8>
 800264e:	a120      	add	r1, pc, #128	; (adr r1, 80026d0 <scalbn+0xf0>)
 8002650:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002654:	e018      	b.n	8002688 <scalbn+0xa8>
 8002656:	2a00      	cmp	r2, #0
 8002658:	dd08      	ble.n	800266c <scalbn+0x8c>
 800265a:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 800265e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8002662:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8002666:	ec45 4b10 	vmov	d0, r4, r5
 800266a:	bd70      	pop	{r4, r5, r6, pc}
 800266c:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8002670:	da19      	bge.n	80026a6 <scalbn+0xc6>
 8002672:	f24c 3350 	movw	r3, #50000	; 0xc350
 8002676:	429e      	cmp	r6, r3
 8002678:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
 800267c:	dd0a      	ble.n	8002694 <scalbn+0xb4>
 800267e:	a112      	add	r1, pc, #72	; (adr r1, 80026c8 <scalbn+0xe8>)
 8002680:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002684:	2b00      	cmp	r3, #0
 8002686:	d1e2      	bne.n	800264e <scalbn+0x6e>
 8002688:	a30f      	add	r3, pc, #60	; (adr r3, 80026c8 <scalbn+0xe8>)
 800268a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800268e:	f7fd ff57 	bl	8000540 <__aeabi_dmul>
 8002692:	e7cb      	b.n	800262c <scalbn+0x4c>
 8002694:	a10a      	add	r1, pc, #40	; (adr r1, 80026c0 <scalbn+0xe0>)
 8002696:	e9d1 0100 	ldrd	r0, r1, [r1]
 800269a:	2b00      	cmp	r3, #0
 800269c:	d0b8      	beq.n	8002610 <scalbn+0x30>
 800269e:	a10e      	add	r1, pc, #56	; (adr r1, 80026d8 <scalbn+0xf8>)
 80026a0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80026a4:	e7b4      	b.n	8002610 <scalbn+0x30>
 80026a6:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 80026aa:	3236      	adds	r2, #54	; 0x36
 80026ac:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 80026b0:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 80026b4:	4620      	mov	r0, r4
 80026b6:	4b0c      	ldr	r3, [pc, #48]	; (80026e8 <scalbn+0x108>)
 80026b8:	2200      	movs	r2, #0
 80026ba:	e7e8      	b.n	800268e <scalbn+0xae>
 80026bc:	f3af 8000 	nop.w
 80026c0:	c2f8f359 	.word	0xc2f8f359
 80026c4:	01a56e1f 	.word	0x01a56e1f
 80026c8:	8800759c 	.word	0x8800759c
 80026cc:	7e37e43c 	.word	0x7e37e43c
 80026d0:	8800759c 	.word	0x8800759c
 80026d4:	fe37e43c 	.word	0xfe37e43c
 80026d8:	c2f8f359 	.word	0xc2f8f359
 80026dc:	81a56e1f 	.word	0x81a56e1f
 80026e0:	43500000 	.word	0x43500000
 80026e4:	ffff3cb0 	.word	0xffff3cb0
 80026e8:	3c900000 	.word	0x3c900000

080026ec <_init>:
 80026ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80026ee:	bf00      	nop
 80026f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80026f2:	bc08      	pop	{r3}
 80026f4:	469e      	mov	lr, r3
 80026f6:	4770      	bx	lr

080026f8 <_fini>:
 80026f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80026fa:	bf00      	nop
 80026fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80026fe:	bc08      	pop	{r3}
 8002700:	469e      	mov	lr, r3
 8002702:	4770      	bx	lr
